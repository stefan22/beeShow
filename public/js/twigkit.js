(function(a, b) {
    function G(a) {
        var b = F[a] = {};
        return p.each(a.split(s), function(a, c) {
            b[c] = !0
        }),
        b
    }
    function J(a, c, d) {
        if (d === b && a.nodeType === 1) {
            var e = "data-" + c.replace(I, "-$1").toLowerCase();
            d = a.getAttribute(e);
            if (typeof d == "string") {
                try {
                    d = d === "true" ? !0 : d === "false" ? !1 : d === "null" ? null : +d + "" === d ? +d : H.test(d) ? p.parseJSON(d) : d
                } catch (f) {}
                p.data(a, c, d)
            } else
                d = b
        }
        return d
    }
    function K(a) {
        var b;
        for (b in a) {
            if (b === "data" && p.isEmptyObject(a[b]))
                continue;
            if (b !== "toJSON")
                return !1
        }
        return !0
    }
    function ba() {
        return !1
    }
    function bb() {
        return !0
    }
    function bh(a) {
        return !a || !a.parentNode || a.parentNode.nodeType === 11
    }
    function bi(a, b) {
        do
            a = a[b];
        while (a && a.nodeType !== 1);return a
    }
    function bj(a, b, c) {
        b = b || 0;
        if (p.isFunction(b))
            return p.grep(a, function(a, d) {
                var e = !!b.call(a, d, a);
                return e === c
            });
        if (b.nodeType)
            return p.grep(a, function(a, d) {
                return a === b === c
            });
        if (typeof b == "string") {
            var d = p.grep(a, function(a) {
                return a.nodeType === 1
            });
            if (be.test(b))
                return p.filter(b, d, !c);
            b = p.filter(b, d)
        }
        return p.grep(a, function(a, d) {
            return p.inArray(a, b) >= 0 === c
        })
    }
    function bk(a) {
        var b = bl.split("|")
          , c = a.createDocumentFragment();
        if (c.createElement)
            while (b.length)
                c.createElement(b.pop());
        return c
    }
    function bC(a, b) {
        return a.getElementsByTagName(b)[0] || a.appendChild(a.ownerDocument.createElement(b))
    }
    function bD(a, b) {
        if (b.nodeType !== 1 || !p.hasData(a))
            return;
        var c, d, e, f = p._data(a), g = p._data(b, f), h = f.events;
        if (h) {
            delete g.handle,
            g.events = {};
            for (c in h)
                for (d = 0,
                e = h[c].length; d < e; d++)
                    p.event.add(b, c, h[c][d])
        }
        g.data && (g.data = p.extend({}, g.data))
    }
    function bE(a, b) {
        var c;
        if (b.nodeType !== 1)
            return;
        b.clearAttributes && b.clearAttributes(),
        b.mergeAttributes && b.mergeAttributes(a),
        c = b.nodeName.toLowerCase(),
        c === "object" ? (b.parentNode && (b.outerHTML = a.outerHTML),
        p.support.html5Clone && a.innerHTML && !p.trim(b.innerHTML) && (b.innerHTML = a.innerHTML)) : c === "input" && bv.test(a.type) ? (b.defaultChecked = b.checked = a.checked,
        b.value !== a.value && (b.value = a.value)) : c === "option" ? b.selected = a.defaultSelected : c === "input" || c === "textarea" ? b.defaultValue = a.defaultValue : c === "script" && b.text !== a.text && (b.text = a.text),
        b.removeAttribute(p.expando)
    }
    function bF(a) {
        return typeof a.getElementsByTagName != "undefined" ? a.getElementsByTagName("*") : typeof a.querySelectorAll != "undefined" ? a.querySelectorAll("*") : []
    }
    function bG(a) {
        bv.test(a.type) && (a.defaultChecked = a.checked)
    }
    function bY(a, b) {
        if (b in a)
            return b;
        var c = b.charAt(0).toUpperCase() + b.slice(1)
          , d = b
          , e = bW.length;
        while (e--) {
            b = bW[e] + c;
            if (b in a)
                return b
        }
        return d
    }
    function bZ(a, b) {
        return a = b || a,
        p.css(a, "display") === "none" || !p.contains(a.ownerDocument, a)
    }
    function b$(a, b) {
        var c, d, e = [], f = 0, g = a.length;
        for (; f < g; f++) {
            c = a[f];
            if (!c.style)
                continue;
            e[f] = p._data(c, "olddisplay"),
            b ? (!e[f] && c.style.display === "none" && (c.style.display = ""),
            c.style.display === "" && bZ(c) && (e[f] = p._data(c, "olddisplay", cc(c.nodeName)))) : (d = bH(c, "display"),
            !e[f] && d !== "none" && p._data(c, "olddisplay", d))
        }
        for (f = 0; f < g; f++) {
            c = a[f];
            if (!c.style)
                continue;
            if (!b || c.style.display === "none" || c.style.display === "")
                c.style.display = b ? e[f] || "" : "none"
        }
        return a
    }
    function b_(a, b, c) {
        var d = bP.exec(b);
        return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b
    }
    function ca(a, b, c, d) {
        var e = c === (d ? "border" : "content") ? 4 : b === "width" ? 1 : 0
          , f = 0;
        for (; e < 4; e += 2)
            c === "margin" && (f += p.css(a, c + bV[e], !0)),
            d ? (c === "content" && (f -= parseFloat(bH(a, "padding" + bV[e])) || 0),
            c !== "margin" && (f -= parseFloat(bH(a, "border" + bV[e] + "Width")) || 0)) : (f += parseFloat(bH(a, "padding" + bV[e])) || 0,
            c !== "padding" && (f += parseFloat(bH(a, "border" + bV[e] + "Width")) || 0));
        return f
    }
    function cb(a, b, c) {
        var d = b === "width" ? a.offsetWidth : a.offsetHeight
          , e = !0
          , f = p.support.boxSizing && p.css(a, "boxSizing") === "border-box";
        if (d <= 0 || d == null) {
            d = bH(a, b);
            if (d < 0 || d == null)
                d = a.style[b];
            if (bQ.test(d))
                return d;
            e = f && (p.support.boxSizingReliable || d === a.style[b]),
            d = parseFloat(d) || 0
        }
        return d + ca(a, b, c || (f ? "border" : "content"), e) + "px"
    }
    function cc(a) {
        if (bS[a])
            return bS[a];
        var b = p("<" + a + ">").appendTo(e.body)
          , c = b.css("display");
        b.remove();
        if (c === "none" || c === "") {
            bI = e.body.appendChild(bI || p.extend(e.createElement("iframe"), {
                frameBorder: 0,
                width: 0,
                height: 0
            }));
            if (!bJ || !bI.createElement)
                bJ = (bI.contentWindow || bI.contentDocument).document,
                bJ.write("<!doctype html><html><body>"),
                bJ.close();
            b = bJ.body.appendChild(bJ.createElement(a)),
            c = bH(b, "display"),
            e.body.removeChild(bI)
        }
        return bS[a] = c,
        c
    }
    function ci(a, b, c, d) {
        var e;
        if (p.isArray(b))
            p.each(b, function(b, e) {
                c || ce.test(a) ? d(a, e) : ci(a + "[" + (typeof e == "object" ? b : "") + "]", e, c, d)
            });
        else if (!c && p.type(b) === "object")
            for (e in b)
                ci(a + "[" + e + "]", b[e], c, d);
        else
            d(a, b)
    }
    function cz(a) {
        return function(b, c) {
            typeof b != "string" && (c = b,
            b = "*");
            var d, e, f, g = b.toLowerCase().split(s), h = 0, i = g.length;
            if (p.isFunction(c))
                for (; h < i; h++)
                    d = g[h],
                    f = /^\+/.test(d),
                    f && (d = d.substr(1) || "*"),
                    e = a[d] = a[d] || [],
                    e[f ? "unshift" : "push"](c)
        }
    }
    function cA(a, c, d, e, f, g) {
        f = f || c.dataTypes[0],
        g = g || {},
        g[f] = !0;
        var h, i = a[f], j = 0, k = i ? i.length : 0, l = a === cv;
        for (; j < k && (l || !h); j++)
            h = i[j](c, d, e),
            typeof h == "string" && (!l || g[h] ? h = b : (c.dataTypes.unshift(h),
            h = cA(a, c, d, e, h, g)));
        return (l || !h) && !g["*"] && (h = cA(a, c, d, e, "*", g)),
        h
    }
    function cB(a, c) {
        var d, e, f = p.ajaxSettings.flatOptions || {};
        for (d in c)
            c[d] !== b && ((f[d] ? a : e || (e = {}))[d] = c[d]);
        e && p.extend(!0, a, e)
    }
    function cC(a, c, d) {
        var e, f, g, h, i = a.contents, j = a.dataTypes, k = a.responseFields;
        for (f in k)
            f in d && (c[k[f]] = d[f]);
        while (j[0] === "*")
            j.shift(),
            e === b && (e = a.mimeType || c.getResponseHeader("content-type"));
        if (e)
            for (f in i)
                if (i[f] && i[f].test(e)) {
                    j.unshift(f);
                    break
                }
        if (j[0]in d)
            g = j[0];
        else {
            for (f in d) {
                if (!j[0] || a.converters[f + " " + j[0]]) {
                    g = f;
                    break
                }
                h || (h = f)
            }
            g = g || h
        }
        if (g)
            return g !== j[0] && j.unshift(g),
            d[g]
    }
    function cD(a, b) {
        var c, d, e, f, g = a.dataTypes.slice(), h = g[0], i = {}, j = 0;
        a.dataFilter && (b = a.dataFilter(b, a.dataType));
        if (g[1])
            for (c in a.converters)
                i[c.toLowerCase()] = a.converters[c];
        for (; e = g[++j]; )
            if (e !== "*") {
                if (h !== "*" && h !== e) {
                    c = i[h + " " + e] || i["* " + e];
                    if (!c)
                        for (d in i) {
                            f = d.split(" ");
                            if (f[1] === e) {
                                c = i[h + " " + f[0]] || i["* " + f[0]];
                                if (c) {
                                    c === !0 ? c = i[d] : i[d] !== !0 && (e = f[0],
                                    g.splice(j--, 0, e));
                                    break
                                }
                            }
                        }
                    if (c !== !0)
                        if (c && a["throws"])
                            b = c(b);
                        else
                            try {
                                b = c(b)
                            } catch (k) {
                                return {
                                    state: "parsererror",
                                    error: c ? k : "No conversion from " + h + " to " + e
                                }
                            }
                }
                h = e
            }
        return {
            state: "success",
            data: b
        }
    }
    function cL() {
        try {
            return new a.XMLHttpRequest
        } catch (b) {}
    }
    function cM() {
        try {
            return new a.ActiveXObject("Microsoft.XMLHTTP")
        } catch (b) {}
    }
    function cU() {
        return setTimeout(function() {
            cN = b
        }, 0),
        cN = p.now()
    }
    function cV(a, b) {
        p.each(b, function(b, c) {
            var d = (cT[b] || []).concat(cT["*"])
              , e = 0
              , f = d.length;
            for (; e < f; e++)
                if (d[e].call(a, b, c))
                    return
        })
    }
    function cW(a, b, c) {
        var d, e = 0, f = 0, g = cS.length, h = p.Deferred().always(function() {
            delete i.elem
        }), i = function() {
            var b = cN || cU()
              , c = Math.max(0, j.startTime + j.duration - b)
              , d = 1 - (c / j.duration || 0)
              , e = 0
              , f = j.tweens.length;
            for (; e < f; e++)
                j.tweens[e].run(d);
            return h.notifyWith(a, [j, d, c]),
            d < 1 && f ? c : (h.resolveWith(a, [j]),
            !1)
        }, j = h.promise({
            elem: a,
            props: p.extend({}, b),
            opts: p.extend(!0, {
                specialEasing: {}
            }, c),
            originalProperties: b,
            originalOptions: c,
            startTime: cN || cU(),
            duration: c.duration,
            tweens: [],
            createTween: function(b, c, d) {
                var e = p.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
                return j.tweens.push(e),
                e
            },
            stop: function(b) {
                var c = 0
                  , d = b ? j.tweens.length : 0;
                for (; c < d; c++)
                    j.tweens[c].run(1);
                return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]),
                this
            }
        }), k = j.props;
        cX(k, j.opts.specialEasing);
        for (; e < g; e++) {
            d = cS[e].call(j, a, k, j.opts);
            if (d)
                return d
        }
        return cV(j, k),
        p.isFunction(j.opts.start) && j.opts.start.call(a, j),
        p.fx.timer(p.extend(i, {
            anim: j,
            queue: j.opts.queue,
            elem: a
        })),
        j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always)
    }
    function cX(a, b) {
        var c, d, e, f, g;
        for (c in a) {
            d = p.camelCase(c),
            e = b[d],
            f = a[c],
            p.isArray(f) && (e = f[1],
            f = a[c] = f[0]),
            c !== d && (a[d] = f,
            delete a[c]),
            g = p.cssHooks[d];
            if (g && "expand"in g) {
                f = g.expand(f),
                delete a[d];
                for (c in f)
                    c in a || (a[c] = f[c],
                    b[c] = e)
            } else
                b[d] = e
        }
    }
    function cY(a, b, c) {
        var d, e, f, g, h, i, j, k, l = this, m = a.style, n = {}, o = [], q = a.nodeType && bZ(a);
        c.queue || (j = p._queueHooks(a, "fx"),
        j.unqueued == null && (j.unqueued = 0,
        k = j.empty.fire,
        j.empty.fire = function() {
            j.unqueued || k()
        }
        ),
        j.unqueued++,
        l.always(function() {
            l.always(function() {
                j.unqueued--,
                p.queue(a, "fx").length || j.empty.fire()
            })
        })),
        a.nodeType === 1 && ("height"in b || "width"in b) && (c.overflow = [m.overflow, m.overflowX, m.overflowY],
        p.css(a, "display") === "inline" && p.css(a, "float") === "none" && (!p.support.inlineBlockNeedsLayout || cc(a.nodeName) === "inline" ? m.display = "inline-block" : m.zoom = 1)),
        c.overflow && (m.overflow = "hidden",
        p.support.shrinkWrapBlocks || l.done(function() {
            m.overflow = c.overflow[0],
            m.overflowX = c.overflow[1],
            m.overflowY = c.overflow[2]
        }));
        for (d in b) {
            f = b[d];
            if (cP.exec(f)) {
                delete b[d];
                if (f === (q ? "hide" : "show"))
                    continue;
                o.push(d)
            }
        }
        g = o.length;
        if (g) {
            h = p._data(a, "fxshow") || p._data(a, "fxshow", {}),
            q ? p(a).show() : l.done(function() {
                p(a).hide()
            }),
            l.done(function() {
                var b;
                p.removeData(a, "fxshow", !0);
                for (b in n)
                    p.style(a, b, n[b])
            });
            for (d = 0; d < g; d++)
                e = o[d],
                i = l.createTween(e, q ? h[e] : 0),
                n[e] = h[e] || p.style(a, e),
                e in h || (h[e] = i.start,
                q && (i.end = i.start,
                i.start = e === "width" || e === "height" ? 1 : 0))
        }
    }
    function cZ(a, b, c, d, e) {
        return new cZ.prototype.init(a,b,c,d,e)
    }
    function c$(a, b) {
        var c, d = {
            height: a
        }, e = 0;
        b = b ? 1 : 0;
        for (; e < 4; e += 2 - b)
            c = bV[e],
            d["margin" + c] = d["padding" + c] = a;
        return b && (d.opacity = d.width = a),
        d
    }
    function da(a) {
        return p.isWindow(a) ? a : a.nodeType === 9 ? a.defaultView || a.parentWindow : !1
    }
    var c, d, e = a.document, f = a.location, g = a.navigator, h = a.jQuery, i = a.$, j = Array.prototype.push, k = Array.prototype.slice, l = Array.prototype.indexOf, m = Object.prototype.toString, n = Object.prototype.hasOwnProperty, o = String.prototype.trim, p = function(a, b) {
        return new p.fn.init(a,b,c)
    }, q = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, r = /\S/, s = /\s+/, t = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, u = /^(?:[^#<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/, v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, w = /^[\],:{}\s]*$/, x = /(?:^|:|,)(?:\s*\[)+/g, y = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, z = /"[^"\\\r\n]*"|true|false|null|-?(?:\d\d*\.|)\d+(?:[eE][\-+]?\d+|)/g, A = /^-ms-/, B = /-([\da-z])/gi, C = function(a, b) {
        return (b + "").toUpperCase()
    }, D = function() {
        e.addEventListener ? (e.removeEventListener("DOMContentLoaded", D, !1),
        p.ready()) : e.readyState === "complete" && (e.detachEvent("onreadystatechange", D),
        p.ready())
    }, E = {};
    p.fn = p.prototype = {
        constructor: p,
        init: function(a, c, d) {
            var f, g, h, i;
            if (!a)
                return this;
            if (a.nodeType)
                return this.context = this[0] = a,
                this.length = 1,
                this;
            if (typeof a == "string") {
                a.charAt(0) === "<" && a.charAt(a.length - 1) === ">" && a.length >= 3 ? f = [null, a, null] : f = u.exec(a);
                if (f && (f[1] || !c)) {
                    if (f[1])
                        return c = c instanceof p ? c[0] : c,
                        i = c && c.nodeType ? c.ownerDocument || c : e,
                        a = p.parseHTML(f[1], i, !0),
                        v.test(f[1]) && p.isPlainObject(c) && this.attr.call(a, c, !0),
                        p.merge(this, a);
                    g = e.getElementById(f[2]);
                    if (g && g.parentNode) {
                        if (g.id !== f[2])
                            return d.find(a);
                        this.length = 1,
                        this[0] = g
                    }
                    return this.context = e,
                    this.selector = a,
                    this
                }
                return !c || c.jquery ? (c || d).find(a) : this.constructor(c).find(a)
            }
            return p.isFunction(a) ? d.ready(a) : (a.selector !== b && (this.selector = a.selector,
            this.context = a.context),
            p.makeArray(a, this))
        },
        selector: "",
        jquery: "1.8.2",
        length: 0,
        size: function() {
            return this.length
        },
        toArray: function() {
            return k.call(this)
        },
        get: function(a) {
            return a == null ? this.toArray() : a < 0 ? this[this.length + a] : this[a]
        },
        pushStack: function(a, b, c) {
            var d = p.merge(this.constructor(), a);
            return d.prevObject = this,
            d.context = this.context,
            b === "find" ? d.selector = this.selector + (this.selector ? " " : "") + c : b && (d.selector = this.selector + "." + b + "(" + c + ")"),
            d
        },
        each: function(a, b) {
            return p.each(this, a, b)
        },
        ready: function(a) {
            return p.ready.promise().done(a),
            this
        },
        eq: function(a) {
            return a = +a,
            a === -1 ? this.slice(a) : this.slice(a, a + 1)
        },
        first: function() {
            return this.eq(0)
        },
        last: function() {
            return this.eq(-1)
        },
        slice: function() {
            return this.pushStack(k.apply(this, arguments), "slice", k.call(arguments).join(","))
        },
        map: function(a) {
            return this.pushStack(p.map(this, function(b, c) {
                return a.call(b, c, b)
            }))
        },
        end: function() {
            return this.prevObject || this.constructor(null)
        },
        push: j,
        sort: [].sort,
        splice: [].splice
    },
    p.fn.init.prototype = p.fn,
    p.extend = p.fn.extend = function() {
        var a, c, d, e, f, g, h = arguments[0] || {}, i = 1, j = arguments.length, k = !1;
        typeof h == "boolean" && (k = h,
        h = arguments[1] || {},
        i = 2),
        typeof h != "object" && !p.isFunction(h) && (h = {}),
        j === i && (h = this,
        --i);
        for (; i < j; i++)
            if ((a = arguments[i]) != null)
                for (c in a) {
                    d = h[c],
                    e = a[c];
                    if (h === e)
                        continue;
                    k && e && (p.isPlainObject(e) || (f = p.isArray(e))) ? (f ? (f = !1,
                    g = d && p.isArray(d) ? d : []) : g = d && p.isPlainObject(d) ? d : {},
                    h[c] = p.extend(k, g, e)) : e !== b && (h[c] = e)
                }
        return h
    }
    ,
    p.extend({
        noConflict: function(b) {
            return a.$ === p && (a.$ = i),
            b && a.jQuery === p && (a.jQuery = h),
            p
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(a) {
            a ? p.readyWait++ : p.ready(!0)
        },
        ready: function(a) {
            if (a === !0 ? --p.readyWait : p.isReady)
                return;
            if (!e.body)
                return setTimeout(p.ready, 1);
            p.isReady = !0;
            if (a !== !0 && --p.readyWait > 0)
                return;
            d.resolveWith(e, [p]),
            p.fn.trigger && p(e).trigger("ready").off("ready")
        },
        isFunction: function(a) {
            return p.type(a) === "function"
        },
        isArray: Array.isArray || function(a) {
            return p.type(a) === "array"
        }
        ,
        isWindow: function(a) {
            return a != null && a == a.window
        },
        isNumeric: function(a) {
            return !isNaN(parseFloat(a)) && isFinite(a)
        },
        type: function(a) {
            return a == null ? String(a) : E[m.call(a)] || "object"
        },
        isPlainObject: function(a) {
            if (!a || p.type(a) !== "object" || a.nodeType || p.isWindow(a))
                return !1;
            try {
                if (a.constructor && !n.call(a, "constructor") && !n.call(a.constructor.prototype, "isPrototypeOf"))
                    return !1
            } catch (c) {
                return !1
            }
            var d;
            for (d in a)
                ;
            return d === b || n.call(a, d)
        },
        isEmptyObject: function(a) {
            var b;
            for (b in a)
                return !1;
            return !0
        },
        error: function(a) {
            throw new Error(a)
        },
        parseHTML: function(a, b, c) {
            var d;
            return !a || typeof a != "string" ? null : (typeof b == "boolean" && (c = b,
            b = 0),
            b = b || e,
            (d = v.exec(a)) ? [b.createElement(d[1])] : (d = p.buildFragment([a], b, c ? null : []),
            p.merge([], (d.cacheable ? p.clone(d.fragment) : d.fragment).childNodes)))
        },
        parseJSON: function(b) {
            if (!b || typeof b != "string")
                return null;
            b = p.trim(b);
            if (a.JSON && a.JSON.parse)
                return a.JSON.parse(b);
            if (w.test(b.replace(y, "@").replace(z, "]").replace(x, "")))
                return (new Function("return " + b))();
            p.error("Invalid JSON: " + b)
        },
        parseXML: function(c) {
            var d, e;
            if (!c || typeof c != "string")
                return null;
            try {
                a.DOMParser ? (e = new DOMParser,
                d = e.parseFromString(c, "text/xml")) : (d = new ActiveXObject("Microsoft.XMLDOM"),
                d.async = "false",
                d.loadXML(c))
            } catch (f) {
                d = b
            }
            return (!d || !d.documentElement || d.getElementsByTagName("parsererror").length) && p.error("Invalid XML: " + c),
            d
        },
        noop: function() {},
        globalEval: function(b) {
            b && r.test(b) && (a.execScript || function(b) {
                a.eval.call(a, b)
            }
            )(b)
        },
        camelCase: function(a) {
            return a.replace(A, "ms-").replace(B, C)
        },
        nodeName: function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase()
        },
        each: function(a, c, d) {
            var e, f = 0, g = a.length, h = g === b || p.isFunction(a);
            if (d) {
                if (h) {
                    for (e in a)
                        if (c.apply(a[e], d) === !1)
                            break
                } else
                    for (; f < g; )
                        if (c.apply(a[f++], d) === !1)
                            break
            } else if (h) {
                for (e in a)
                    if (c.call(a[e], e, a[e]) === !1)
                        break
            } else
                for (; f < g; )
                    if (c.call(a[f], f, a[f++]) === !1)
                        break;
            return a
        },
        trim: o && !o.call("﻿ ") ? function(a) {
            return a == null ? "" : o.call(a)
        }
        : function(a) {
            return a == null ? "" : (a + "").replace(t, "")
        }
        ,
        makeArray: function(a, b) {
            var c, d = b || [];
            return a != null && (c = p.type(a),
            a.length == null || c === "string" || c === "function" || c === "regexp" || p.isWindow(a) ? j.call(d, a) : p.merge(d, a)),
            d
        },
        inArray: function(a, b, c) {
            var d;
            if (b) {
                if (l)
                    return l.call(b, a, c);
                d = b.length,
                c = c ? c < 0 ? Math.max(0, d + c) : c : 0;
                for (; c < d; c++)
                    if (c in b && b[c] === a)
                        return c
            }
            return -1
        },
        merge: function(a, c) {
            var d = c.length
              , e = a.length
              , f = 0;
            if (typeof d == "number")
                for (; f < d; f++)
                    a[e++] = c[f];
            else
                while (c[f] !== b)
                    a[e++] = c[f++];
            return a.length = e,
            a
        },
        grep: function(a, b, c) {
            var d, e = [], f = 0, g = a.length;
            c = !!c;
            for (; f < g; f++)
                d = !!b(a[f], f),
                c !== d && e.push(a[f]);
            return e
        },
        map: function(a, c, d) {
            var e, f, g = [], h = 0, i = a.length, j = a instanceof p || i !== b && typeof i == "number" && (i > 0 && a[0] && a[i - 1] || i === 0 || p.isArray(a));
            if (j)
                for (; h < i; h++)
                    e = c(a[h], h, d),
                    e != null && (g[g.length] = e);
            else
                for (f in a)
                    e = c(a[f], f, d),
                    e != null && (g[g.length] = e);
            return g.concat.apply([], g)
        },
        guid: 1,
        proxy: function(a, c) {
            var d, e, f;
            return typeof c == "string" && (d = a[c],
            c = a,
            a = d),
            p.isFunction(a) ? (e = k.call(arguments, 2),
            f = function() {
                return a.apply(c, e.concat(k.call(arguments)))
            }
            ,
            f.guid = a.guid = a.guid || p.guid++,
            f) : b
        },
        access: function(a, c, d, e, f, g, h) {
            var i, j = d == null, k = 0, l = a.length;
            if (d && typeof d == "object") {
                for (k in d)
                    p.access(a, c, k, d[k], 1, g, e);
                f = 1
            } else if (e !== b) {
                i = h === b && p.isFunction(e),
                j && (i ? (i = c,
                c = function(a, b, c) {
                    return i.call(p(a), c)
                }
                ) : (c.call(a, e),
                c = null));
                if (c)
                    for (; k < l; k++)
                        c(a[k], d, i ? e.call(a[k], k, c(a[k], d)) : e, h);
                f = 1
            }
            return f ? a : j ? c.call(a) : l ? c(a[0], d) : g
        },
        now: function() {
            return (new Date).getTime()
        }
    }),
    p.ready.promise = function(b) {
        if (!d) {
            d = p.Deferred();
            if (e.readyState === "complete")
                setTimeout(p.ready, 1);
            else if (e.addEventListener)
                e.addEventListener("DOMContentLoaded", D, !1),
                a.addEventListener("load", p.ready, !1);
            else {
                e.attachEvent("onreadystatechange", D),
                a.attachEvent("onload", p.ready);
                var c = !1;
                try {
                    c = a.frameElement == null && e.documentElement
                } catch (f) {}
                c && c.doScroll && function g() {
                    if (!p.isReady) {
                        try {
                            c.doScroll("left")
                        } catch (a) {
                            return setTimeout(g, 50)
                        }
                        p.ready()
                    }
                }()
            }
        }
        return d.promise(b)
    }
    ,
    p.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(a, b) {
        E["[object " + b + "]"] = b.toLowerCase()
    }),
    c = p(e);
    var F = {};
    p.Callbacks = function(a) {
        a = typeof a == "string" ? F[a] || G(a) : p.extend({}, a);
        var c, d, e, f, g, h, i = [], j = !a.once && [], k = function(b) {
            c = a.memory && b,
            d = !0,
            h = f || 0,
            f = 0,
            g = i.length,
            e = !0;
            for (; i && h < g; h++)
                if (i[h].apply(b[0], b[1]) === !1 && a.stopOnFalse) {
                    c = !1;
                    break
                }
            e = !1,
            i && (j ? j.length && k(j.shift()) : c ? i = [] : l.disable())
        }, l = {
            add: function() {
                if (i) {
                    var b = i.length;
                    (function d(b) {
                        p.each(b, function(b, c) {
                            var e = p.type(c);
                            e === "function" && (!a.unique || !l.has(c)) ? i.push(c) : c && c.length && e !== "string" && d(c)
                        })
                    })(arguments),
                    e ? g = i.length : c && (f = b,
                    k(c))
                }
                return this
            },
            remove: function() {
                return i && p.each(arguments, function(a, b) {
                    var c;
                    while ((c = p.inArray(b, i, c)) > -1)
                        i.splice(c, 1),
                        e && (c <= g && g--,
                        c <= h && h--)
                }),
                this
            },
            has: function(a) {
                return p.inArray(a, i) > -1
            },
            empty: function() {
                return i = [],
                this
            },
            disable: function() {
                return i = j = c = b,
                this
            },
            disabled: function() {
                return !i
            },
            lock: function() {
                return j = b,
                c || l.disable(),
                this
            },
            locked: function() {
                return !j
            },
            fireWith: function(a, b) {
                return b = b || [],
                b = [a, b.slice ? b.slice() : b],
                i && (!d || j) && (e ? j.push(b) : k(b)),
                this
            },
            fire: function() {
                return l.fireWith(this, arguments),
                this
            },
            fired: function() {
                return !!d
            }
        };
        return l
    }
    ,
    p.extend({
        Deferred: function(a) {
            var b = [["resolve", "done", p.Callbacks("once memory"), "resolved"], ["reject", "fail", p.Callbacks("once memory"), "rejected"], ["notify", "progress", p.Callbacks("memory")]]
              , c = "pending"
              , d = {
                state: function() {
                    return c
                },
                always: function() {
                    return e.done(arguments).fail(arguments),
                    this
                },
                then: function() {
                    var a = arguments;
                    return p.Deferred(function(c) {
                        p.each(b, function(b, d) {
                            var f = d[0]
                              , g = a[b];
                            e[d[1]](p.isFunction(g) ? function() {
                                var a = g.apply(this, arguments);
                                a && p.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f + "With"](this === e ? c : this, [a])
                            }
                            : c[f])
                        }),
                        a = null
                    }).promise()
                },
                promise: function(a) {
                    return a != null ? p.extend(a, d) : d
                }
            }
              , e = {};
            return d.pipe = d.then,
            p.each(b, function(a, f) {
                var g = f[2]
                  , h = f[3];
                d[f[1]] = g.add,
                h && g.add(function() {
                    c = h
                }, b[a ^ 1][2].disable, b[2][2].lock),
                e[f[0]] = g.fire,
                e[f[0] + "With"] = g.fireWith
            }),
            d.promise(e),
            a && a.call(e, e),
            e
        },
        when: function(a) {
            var b = 0, c = k.call(arguments), d = c.length, e = d !== 1 || a && p.isFunction(a.promise) ? d : 0, f = e === 1 ? a : p.Deferred(), g = function(a, b, c) {
                return function(d) {
                    b[a] = this,
                    c[a] = arguments.length > 1 ? k.call(arguments) : d,
                    c === h ? f.notifyWith(b, c) : --e || f.resolveWith(b, c)
                }
            }, h, i, j;
            if (d > 1) {
                h = new Array(d),
                i = new Array(d),
                j = new Array(d);
                for (; b < d; b++)
                    c[b] && p.isFunction(c[b].promise) ? c[b].promise().done(g(b, j, c)).fail(f.reject).progress(g(b, i, h)) : --e
            }
            return e || f.resolveWith(j, c),
            f.promise()
        }
    }),
    p.support = function() {
        var b, c, d, f, g, h, i, j, k, l, m, n = e.createElement("div");
        n.setAttribute("className", "t"),
        n.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",
        c = n.getElementsByTagName("*"),
        d = n.getElementsByTagName("a")[0],
        d.style.cssText = "top:1px;float:left;opacity:.5";
        if (!c || !c.length)
            return {};
        f = e.createElement("select"),
        g = f.appendChild(e.createElement("option")),
        h = n.getElementsByTagName("input")[0],
        b = {
            leadingWhitespace: n.firstChild.nodeType === 3,
            tbody: !n.getElementsByTagName("tbody").length,
            htmlSerialize: !!n.getElementsByTagName("link").length,
            style: /top/.test(d.getAttribute("style")),
            hrefNormalized: d.getAttribute("href") === "/a",
            opacity: /^0.5/.test(d.style.opacity),
            cssFloat: !!d.style.cssFloat,
            checkOn: h.value === "on",
            optSelected: g.selected,
            getSetAttribute: n.className !== "t",
            enctype: !!e.createElement("form").enctype,
            html5Clone: e.createElement("nav").cloneNode(!0).outerHTML !== "<:nav></:nav>",
            boxModel: e.compatMode === "CSS1Compat",
            submitBubbles: !0,
            changeBubbles: !0,
            focusinBubbles: !1,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        },
        h.checked = !0,
        b.noCloneChecked = h.cloneNode(!0).checked,
        f.disabled = !0,
        b.optDisabled = !g.disabled;
        try {
            delete n.test
        } catch (o) {
            b.deleteExpando = !1
        }
        !n.addEventListener && n.attachEvent && n.fireEvent && (n.attachEvent("onclick", m = function() {
            b.noCloneEvent = !1
        }
        ),
        n.cloneNode(!0).fireEvent("onclick"),
        n.detachEvent("onclick", m)),
        h = e.createElement("input"),
        h.value = "t",
        h.setAttribute("type", "radio"),
        b.radioValue = h.value === "t",
        h.setAttribute("checked", "checked"),
        h.setAttribute("name", "t"),
        n.appendChild(h),
        i = e.createDocumentFragment(),
        i.appendChild(n.lastChild),
        b.checkClone = i.cloneNode(!0).cloneNode(!0).lastChild.checked,
        b.appendChecked = h.checked,
        i.removeChild(h),
        i.appendChild(n);
        if (n.attachEvent)
            for (k in {
                submit: !0,
                change: !0,
                focusin: !0
            })
                j = "on" + k,
                l = j in n,
                l || (n.setAttribute(j, "return;"),
                l = typeof n[j] == "function"),
                b[k + "Bubbles"] = l;
        return p(function() {
            var c, d, f, g, h = "padding:0;margin:0;border:0;display:block;overflow:hidden;", i = e.getElementsByTagName("body")[0];
            if (!i)
                return;
            c = e.createElement("div"),
            c.style.cssText = "visibility:hidden;border:0;width:0;height:0;position:static;top:0;margin-top:1px",
            i.insertBefore(c, i.firstChild),
            d = e.createElement("div"),
            c.appendChild(d),
            d.innerHTML = "<table><tr><td></td><td>t</td></tr></table>",
            f = d.getElementsByTagName("td"),
            f[0].style.cssText = "padding:0;margin:0;border:0;display:none",
            l = f[0].offsetHeight === 0,
            f[0].style.display = "",
            f[1].style.display = "none",
            b.reliableHiddenOffsets = l && f[0].offsetHeight === 0,
            d.innerHTML = "",
            d.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;",
            b.boxSizing = d.offsetWidth === 4,
            b.doesNotIncludeMarginInBodyOffset = i.offsetTop !== 1,
            a.getComputedStyle && (b.pixelPosition = (a.getComputedStyle(d, null) || {}).top !== "1%",
            b.boxSizingReliable = (a.getComputedStyle(d, null) || {
                width: "4px"
            }).width === "4px",
            g = e.createElement("div"),
            g.style.cssText = d.style.cssText = h,
            g.style.marginRight = g.style.width = "0",
            d.style.width = "1px",
            d.appendChild(g),
            b.reliableMarginRight = !parseFloat((a.getComputedStyle(g, null) || {}).marginRight)),
            typeof d.style.zoom != "undefined" && (d.innerHTML = "",
            d.style.cssText = h + "width:1px;padding:1px;display:inline;zoom:1",
            b.inlineBlockNeedsLayout = d.offsetWidth === 3,
            d.style.display = "block",
            d.style.overflow = "visible",
            d.innerHTML = "<div></div>",
            d.firstChild.style.width = "5px",
            b.shrinkWrapBlocks = d.offsetWidth !== 3,
            c.style.zoom = 1),
            i.removeChild(c),
            c = d = f = g = null
        }),
        i.removeChild(n),
        c = d = f = g = h = i = n = null,
        b
    }();
    var H = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/
      , I = /([A-Z])/g;
    p.extend({
        cache: {},
        deletedIds: [],
        uuid: 0,
        expando: "jQuery" + (p.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(a) {
            return a = a.nodeType ? p.cache[a[p.expando]] : a[p.expando],
            !!a && !K(a)
        },
        data: function(a, c, d, e) {
            if (!p.acceptData(a))
                return;
            var f, g, h = p.expando, i = typeof c == "string", j = a.nodeType, k = j ? p.cache : a, l = j ? a[h] : a[h] && h;
            if ((!l || !k[l] || !e && !k[l].data) && i && d === b)
                return;
            l || (j ? a[h] = l = p.deletedIds.pop() || p.guid++ : l = h),
            k[l] || (k[l] = {},
            j || (k[l].toJSON = p.noop));
            if (typeof c == "object" || typeof c == "function")
                e ? k[l] = p.extend(k[l], c) : k[l].data = p.extend(k[l].data, c);
            return f = k[l],
            e || (f.data || (f.data = {}),
            f = f.data),
            d !== b && (f[p.camelCase(c)] = d),
            i ? (g = f[c],
            g == null && (g = f[p.camelCase(c)])) : g = f,
            g
        },
        removeData: function(a, b, c) {
            if (!p.acceptData(a))
                return;
            var d, e, f, g = a.nodeType, h = g ? p.cache : a, i = g ? a[p.expando] : p.expando;
            if (!h[i])
                return;
            if (b) {
                d = c ? h[i] : h[i].data;
                if (d) {
                    p.isArray(b) || (b in d ? b = [b] : (b = p.camelCase(b),
                    b in d ? b = [b] : b = b.split(" ")));
                    for (e = 0,
                    f = b.length; e < f; e++)
                        delete d[b[e]];
                    if (!(c ? K : p.isEmptyObject)(d))
                        return
                }
            }
            if (!c) {
                delete h[i].data;
                if (!K(h[i]))
                    return
            }
            g ? p.cleanData([a], !0) : p.support.deleteExpando || h != h.window ? delete h[i] : h[i] = null
        },
        _data: function(a, b, c) {
            return p.data(a, b, c, !0)
        },
        acceptData: function(a) {
            var b = a.nodeName && p.noData[a.nodeName.toLowerCase()];
            return !b || b !== !0 && a.getAttribute("classid") === b
        }
    }),
    p.fn.extend({
        data: function(a, c) {
            var d, e, f, g, h, i = this[0], j = 0, k = null;
            if (a === b) {
                if (this.length) {
                    k = p.data(i);
                    if (i.nodeType === 1 && !p._data(i, "parsedAttrs")) {
                        f = i.attributes;
                        for (h = f.length; j < h; j++)
                            g = f[j].name,
                            g.indexOf("data-") || (g = p.camelCase(g.substring(5)),
                            J(i, g, k[g]));
                        p._data(i, "parsedAttrs", !0)
                    }
                }
                return k
            }
            return typeof a == "object" ? this.each(function() {
                p.data(this, a)
            }) : (d = a.split(".", 2),
            d[1] = d[1] ? "." + d[1] : "",
            e = d[1] + "!",
            p.access(this, function(c) {
                if (c === b)
                    return k = this.triggerHandler("getData" + e, [d[0]]),
                    k === b && i && (k = p.data(i, a),
                    k = J(i, a, k)),
                    k === b && d[1] ? this.data(d[0]) : k;
                d[1] = c,
                this.each(function() {
                    var b = p(this);
                    b.triggerHandler("setData" + e, d),
                    p.data(this, a, c),
                    b.triggerHandler("changeData" + e, d)
                })
            }, null, c, arguments.length > 1, null, !1))
        },
        removeData: function(a) {
            return this.each(function() {
                p.removeData(this, a)
            })
        }
    }),
    p.extend({
        queue: function(a, b, c) {
            var d;
            if (a)
                return b = (b || "fx") + "queue",
                d = p._data(a, b),
                c && (!d || p.isArray(c) ? d = p._data(a, b, p.makeArray(c)) : d.push(c)),
                d || []
        },
        dequeue: function(a, b) {
            b = b || "fx";
            var c = p.queue(a, b)
              , d = c.length
              , e = c.shift()
              , f = p._queueHooks(a, b)
              , g = function() {
                p.dequeue(a, b)
            };
            e === "inprogress" && (e = c.shift(),
            d--),
            e && (b === "fx" && c.unshift("inprogress"),
            delete f.stop,
            e.call(a, g, f)),
            !d && f && f.empty.fire()
        },
        _queueHooks: function(a, b) {
            var c = b + "queueHooks";
            return p._data(a, c) || p._data(a, c, {
                empty: p.Callbacks("once memory").add(function() {
                    p.removeData(a, b + "queue", !0),
                    p.removeData(a, c, !0)
                })
            })
        }
    }),
    p.fn.extend({
        queue: function(a, c) {
            var d = 2;
            return typeof a != "string" && (c = a,
            a = "fx",
            d--),
            arguments.length < d ? p.queue(this[0], a) : c === b ? this : this.each(function() {
                var b = p.queue(this, a, c);
                p._queueHooks(this, a),
                a === "fx" && b[0] !== "inprogress" && p.dequeue(this, a)
            })
        },
        dequeue: function(a) {
            return this.each(function() {
                p.dequeue(this, a)
            })
        },
        delay: function(a, b) {
            return a = p.fx ? p.fx.speeds[a] || a : a,
            b = b || "fx",
            this.queue(b, function(b, c) {
                var d = setTimeout(b, a);
                c.stop = function() {
                    clearTimeout(d)
                }
            })
        },
        clearQueue: function(a) {
            return this.queue(a || "fx", [])
        },
        promise: function(a, c) {
            var d, e = 1, f = p.Deferred(), g = this, h = this.length, i = function() {
                --e || f.resolveWith(g, [g])
            };
            typeof a != "string" && (c = a,
            a = b),
            a = a || "fx";
            while (h--)
                d = p._data(g[h], a + "queueHooks"),
                d && d.empty && (e++,
                d.empty.add(i));
            return i(),
            f.promise(c)
        }
    });
    var L, M, N, O = /[\t\r\n]/g, P = /\r/g, Q = /^(?:button|input)$/i, R = /^(?:button|input|object|select|textarea)$/i, S = /^a(?:rea|)$/i, T = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, U = p.support.getSetAttribute;
    p.fn.extend({
        attr: function(a, b) {
            return p.access(this, p.attr, a, b, arguments.length > 1)
        },
        removeAttr: function(a) {
            return this.each(function() {
                p.removeAttr(this, a)
            })
        },
        prop: function(a, b) {
            return p.access(this, p.prop, a, b, arguments.length > 1)
        },
        removeProp: function(a) {
            return a = p.propFix[a] || a,
            this.each(function() {
                try {
                    this[a] = b,
                    delete this[a]
                } catch (c) {}
            })
        },
        addClass: function(a) {
            var b, c, d, e, f, g, h;
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).addClass(a.call(this, b, this.className))
                });
            if (a && typeof a == "string") {
                b = a.split(s);
                for (c = 0,
                d = this.length; c < d; c++) {
                    e = this[c];
                    if (e.nodeType === 1)
                        if (!e.className && b.length === 1)
                            e.className = a;
                        else {
                            f = " " + e.className + " ";
                            for (g = 0,
                            h = b.length; g < h; g++)
                                f.indexOf(" " + b[g] + " ") < 0 && (f += b[g] + " ");
                            e.className = p.trim(f)
                        }
                }
            }
            return this
        },
        removeClass: function(a) {
            var c, d, e, f, g, h, i;
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).removeClass(a.call(this, b, this.className))
                });
            if (a && typeof a == "string" || a === b) {
                c = (a || "").split(s);
                for (h = 0,
                i = this.length; h < i; h++) {
                    e = this[h];
                    if (e.nodeType === 1 && e.className) {
                        d = (" " + e.className + " ").replace(O, " ");
                        for (f = 0,
                        g = c.length; f < g; f++)
                            while (d.indexOf(" " + c[f] + " ") >= 0)
                                d = d.replace(" " + c[f] + " ", " ");
                        e.className = a ? p.trim(d) : ""
                    }
                }
            }
            return this
        },
        toggleClass: function(a, b) {
            var c = typeof a
              , d = typeof b == "boolean";
            return p.isFunction(a) ? this.each(function(c) {
                p(this).toggleClass(a.call(this, c, this.className, b), b)
            }) : this.each(function() {
                if (c === "string") {
                    var e, f = 0, g = p(this), h = b, i = a.split(s);
                    while (e = i[f++])
                        h = d ? h : !g.hasClass(e),
                        g[h ? "addClass" : "removeClass"](e)
                } else if (c === "undefined" || c === "boolean")
                    this.className && p._data(this, "__className__", this.className),
                    this.className = this.className || a === !1 ? "" : p._data(this, "__className__") || ""
            })
        },
        hasClass: function(a) {
            var b = " " + a + " "
              , c = 0
              , d = this.length;
            for (; c < d; c++)
                if (this[c].nodeType === 1 && (" " + this[c].className + " ").replace(O, " ").indexOf(b) >= 0)
                    return !0;
            return !1
        },
        val: function(a) {
            var c, d, e, f = this[0];
            if (!arguments.length) {
                if (f)
                    return c = p.valHooks[f.type] || p.valHooks[f.nodeName.toLowerCase()],
                    c && "get"in c && (d = c.get(f, "value")) !== b ? d : (d = f.value,
                    typeof d == "string" ? d.replace(P, "") : d == null ? "" : d);
                return
            }
            return e = p.isFunction(a),
            this.each(function(d) {
                var f, g = p(this);
                if (this.nodeType !== 1)
                    return;
                e ? f = a.call(this, d, g.val()) : f = a,
                f == null ? f = "" : typeof f == "number" ? f += "" : p.isArray(f) && (f = p.map(f, function(a) {
                    return a == null ? "" : a + ""
                })),
                c = p.valHooks[this.type] || p.valHooks[this.nodeName.toLowerCase()];
                if (!c || !("set"in c) || c.set(this, f, "value") === b)
                    this.value = f
            })
        }
    }),
    p.extend({
        valHooks: {
            option: {
                get: function(a) {
                    var b = a.attributes.value;
                    return !b || b.specified ? a.value : a.text
                }
            },
            select: {
                get: function(a) {
                    var b, c, d, e, f = a.selectedIndex, g = [], h = a.options, i = a.type === "select-one";
                    if (f < 0)
                        return null;
                    c = i ? f : 0,
                    d = i ? f + 1 : h.length;
                    for (; c < d; c++) {
                        e = h[c];
                        if (e.selected && (p.support.optDisabled ? !e.disabled : e.getAttribute("disabled") === null) && (!e.parentNode.disabled || !p.nodeName(e.parentNode, "optgroup"))) {
                            b = p(e).val();
                            if (i)
                                return b;
                            g.push(b)
                        }
                    }
                    return i && !g.length && h.length ? p(h[f]).val() : g
                },
                set: function(a, b) {
                    var c = p.makeArray(b);
                    return p(a).find("option").each(function() {
                        this.selected = p.inArray(p(this).val(), c) >= 0
                    }),
                    c.length || (a.selectedIndex = -1),
                    c
                }
            }
        },
        attrFn: {},
        attr: function(a, c, d, e) {
            var f, g, h, i = a.nodeType;
            if (!a || i === 3 || i === 8 || i === 2)
                return;
            if (e && p.isFunction(p.fn[c]))
                return p(a)[c](d);
            if (typeof a.getAttribute == "undefined")
                return p.prop(a, c, d);
            h = i !== 1 || !p.isXMLDoc(a),
            h && (c = c.toLowerCase(),
            g = p.attrHooks[c] || (T.test(c) ? M : L));
            if (d !== b) {
                if (d === null) {
                    p.removeAttr(a, c);
                    return
                }
                return g && "set"in g && h && (f = g.set(a, d, c)) !== b ? f : (a.setAttribute(c, d + ""),
                d)
            }
            return g && "get"in g && h && (f = g.get(a, c)) !== null ? f : (f = a.getAttribute(c),
            f === null ? b : f)
        },
        removeAttr: function(a, b) {
            var c, d, e, f, g = 0;
            if (b && a.nodeType === 1) {
                d = b.split(s);
                for (; g < d.length; g++)
                    e = d[g],
                    e && (c = p.propFix[e] || e,
                    f = T.test(e),
                    f || p.attr(a, e, ""),
                    a.removeAttribute(U ? e : c),
                    f && c in a && (a[c] = !1))
            }
        },
        attrHooks: {
            type: {
                set: function(a, b) {
                    if (Q.test(a.nodeName) && a.parentNode)
                        p.error("type property can't be changed");
                    else if (!p.support.radioValue && b === "radio" && p.nodeName(a, "input")) {
                        var c = a.value;
                        return a.setAttribute("type", b),
                        c && (a.value = c),
                        b
                    }
                }
            },
            value: {
                get: function(a, b) {
                    return L && p.nodeName(a, "button") ? L.get(a, b) : b in a ? a.value : null
                },
                set: function(a, b, c) {
                    if (L && p.nodeName(a, "button"))
                        return L.set(a, b, c);
                    a.value = b
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(a, c, d) {
            var e, f, g, h = a.nodeType;
            if (!a || h === 3 || h === 8 || h === 2)
                return;
            return g = h !== 1 || !p.isXMLDoc(a),
            g && (c = p.propFix[c] || c,
            f = p.propHooks[c]),
            d !== b ? f && "set"in f && (e = f.set(a, d, c)) !== b ? e : a[c] = d : f && "get"in f && (e = f.get(a, c)) !== null ? e : a[c]
        },
        propHooks: {
            tabIndex: {
                get: function(a) {
                    var c = a.getAttributeNode("tabindex");
                    return c && c.specified ? parseInt(c.value, 10) : R.test(a.nodeName) || S.test(a.nodeName) && a.href ? 0 : b
                }
            }
        }
    }),
    M = {
        get: function(a, c) {
            var d, e = p.prop(a, c);
            return e === !0 || typeof e != "boolean" && (d = a.getAttributeNode(c)) && d.nodeValue !== !1 ? c.toLowerCase() : b
        },
        set: function(a, b, c) {
            var d;
            return b === !1 ? p.removeAttr(a, c) : (d = p.propFix[c] || c,
            d in a && (a[d] = !0),
            a.setAttribute(c, c.toLowerCase())),
            c
        }
    },
    U || (N = {
        name: !0,
        id: !0,
        coords: !0
    },
    L = p.valHooks.button = {
        get: function(a, c) {
            var d;
            return d = a.getAttributeNode(c),
            d && (N[c] ? d.value !== "" : d.specified) ? d.value : b
        },
        set: function(a, b, c) {
            var d = a.getAttributeNode(c);
            return d || (d = e.createAttribute(c),
            a.setAttributeNode(d)),
            d.value = b + ""
        }
    },
    p.each(["width", "height"], function(a, b) {
        p.attrHooks[b] = p.extend(p.attrHooks[b], {
            set: function(a, c) {
                if (c === "")
                    return a.setAttribute(b, "auto"),
                    c
            }
        })
    }),
    p.attrHooks.contenteditable = {
        get: L.get,
        set: function(a, b, c) {
            b === "" && (b = "false"),
            L.set(a, b, c)
        }
    }),
    p.support.hrefNormalized || p.each(["href", "src", "width", "height"], function(a, c) {
        p.attrHooks[c] = p.extend(p.attrHooks[c], {
            get: function(a) {
                var d = a.getAttribute(c, 2);
                return d === null ? b : d
            }
        })
    }),
    p.support.style || (p.attrHooks.style = {
        get: function(a) {
            return a.style.cssText.toLowerCase() || b
        },
        set: function(a, b) {
            return a.style.cssText = b + ""
        }
    }),
    p.support.optSelected || (p.propHooks.selected = p.extend(p.propHooks.selected, {
        get: function(a) {
            var b = a.parentNode;
            return b && (b.selectedIndex,
            b.parentNode && b.parentNode.selectedIndex),
            null
        }
    })),
    p.support.enctype || (p.propFix.enctype = "encoding"),
    p.support.checkOn || p.each(["radio", "checkbox"], function() {
        p.valHooks[this] = {
            get: function(a) {
                return a.getAttribute("value") === null ? "on" : a.value
            }
        }
    }),
    p.each(["radio", "checkbox"], function() {
        p.valHooks[this] = p.extend(p.valHooks[this], {
            set: function(a, b) {
                if (p.isArray(b))
                    return a.checked = p.inArray(p(a).val(), b) >= 0
            }
        })
    });
    var V = /^(?:textarea|input|select)$/i
      , W = /^([^\.]*|)(?:\.(.+)|)$/
      , X = /(?:^|\s)hover(\.\S+|)\b/
      , Y = /^key/
      , Z = /^(?:mouse|contextmenu)|click/
      , $ = /^(?:focusinfocus|focusoutblur)$/
      , _ = function(a) {
        return p.event.special.hover ? a : a.replace(X, "mouseenter$1 mouseleave$1")
    };
    p.event = {
        add: function(a, c, d, e, f) {
            var g, h, i, j, k, l, m, n, o, q, r;
            if (a.nodeType === 3 || a.nodeType === 8 || !c || !d || !(g = p._data(a)))
                return;
            d.handler && (o = d,
            d = o.handler,
            f = o.selector),
            d.guid || (d.guid = p.guid++),
            i = g.events,
            i || (g.events = i = {}),
            h = g.handle,
            h || (g.handle = h = function(a) {
                return typeof p != "undefined" && (!a || p.event.triggered !== a.type) ? p.event.dispatch.apply(h.elem, arguments) : b
            }
            ,
            h.elem = a),
            c = p.trim(_(c)).split(" ");
            for (j = 0; j < c.length; j++) {
                k = W.exec(c[j]) || [],
                l = k[1],
                m = (k[2] || "").split(".").sort(),
                r = p.event.special[l] || {},
                l = (f ? r.delegateType : r.bindType) || l,
                r = p.event.special[l] || {},
                n = p.extend({
                    type: l,
                    origType: k[1],
                    data: e,
                    handler: d,
                    guid: d.guid,
                    selector: f,
                    needsContext: f && p.expr.match.needsContext.test(f),
                    namespace: m.join(".")
                }, o),
                q = i[l];
                if (!q) {
                    q = i[l] = [],
                    q.delegateCount = 0;
                    if (!r.setup || r.setup.call(a, e, m, h) === !1)
                        a.addEventListener ? a.addEventListener(l, h, !1) : a.attachEvent && a.attachEvent("on" + l, h)
                }
                r.add && (r.add.call(a, n),
                n.handler.guid || (n.handler.guid = d.guid)),
                f ? q.splice(q.delegateCount++, 0, n) : q.push(n),
                p.event.global[l] = !0
            }
            a = null
        },
        global: {},
        remove: function(a, b, c, d, e) {
            var f, g, h, i, j, k, l, m, n, o, q, r = p.hasData(a) && p._data(a);
            if (!r || !(m = r.events))
                return;
            b = p.trim(_(b || "")).split(" ");
            for (f = 0; f < b.length; f++) {
                g = W.exec(b[f]) || [],
                h = i = g[1],
                j = g[2];
                if (!h) {
                    for (h in m)
                        p.event.remove(a, h + b[f], c, d, !0);
                    continue
                }
                n = p.event.special[h] || {},
                h = (d ? n.delegateType : n.bindType) || h,
                o = m[h] || [],
                k = o.length,
                j = j ? new RegExp("(^|\\.)" + j.split(".").sort().join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
                for (l = 0; l < o.length; l++)
                    q = o[l],
                    (e || i === q.origType) && (!c || c.guid === q.guid) && (!j || j.test(q.namespace)) && (!d || d === q.selector || d === "**" && q.selector) && (o.splice(l--, 1),
                    q.selector && o.delegateCount--,
                    n.remove && n.remove.call(a, q));
                o.length === 0 && k !== o.length && ((!n.teardown || n.teardown.call(a, j, r.handle) === !1) && p.removeEvent(a, h, r.handle),
                delete m[h])
            }
            p.isEmptyObject(m) && (delete r.handle,
            p.removeData(a, "events", !0))
        },
        customEvent: {
            getData: !0,
            setData: !0,
            changeData: !0
        },
        trigger: function(c, d, f, g) {
            if (!f || f.nodeType !== 3 && f.nodeType !== 8) {
                var h, i, j, k, l, m, n, o, q, r, s = c.type || c, t = [];
                if ($.test(s + p.event.triggered))
                    return;
                s.indexOf("!") >= 0 && (s = s.slice(0, -1),
                i = !0),
                s.indexOf(".") >= 0 && (t = s.split("."),
                s = t.shift(),
                t.sort());
                if ((!f || p.event.customEvent[s]) && !p.event.global[s])
                    return;
                c = typeof c == "object" ? c[p.expando] ? c : new p.Event(s,c) : new p.Event(s),
                c.type = s,
                c.isTrigger = !0,
                c.exclusive = i,
                c.namespace = t.join("."),
                c.namespace_re = c.namespace ? new RegExp("(^|\\.)" + t.join("\\.(?:.*\\.|)") + "(\\.|$)") : null,
                m = s.indexOf(":") < 0 ? "on" + s : "";
                if (!f) {
                    h = p.cache;
                    for (j in h)
                        h[j].events && h[j].events[s] && p.event.trigger(c, d, h[j].handle.elem, !0);
                    return
                }
                c.result = b,
                c.target || (c.target = f),
                d = d != null ? p.makeArray(d) : [],
                d.unshift(c),
                n = p.event.special[s] || {};
                if (n.trigger && n.trigger.apply(f, d) === !1)
                    return;
                q = [[f, n.bindType || s]];
                if (!g && !n.noBubble && !p.isWindow(f)) {
                    r = n.delegateType || s,
                    k = $.test(r + s) ? f : f.parentNode;
                    for (l = f; k; k = k.parentNode)
                        q.push([k, r]),
                        l = k;
                    l === (f.ownerDocument || e) && q.push([l.defaultView || l.parentWindow || a, r])
                }
                for (j = 0; j < q.length && !c.isPropagationStopped(); j++)
                    k = q[j][0],
                    c.type = q[j][1],
                    o = (p._data(k, "events") || {})[c.type] && p._data(k, "handle"),
                    o && o.apply(k, d),
                    o = m && k[m],
                    o && p.acceptData(k) && o.apply && o.apply(k, d) === !1 && c.preventDefault();
                return c.type = s,
                !g && !c.isDefaultPrevented() && (!n._default || n._default.apply(f.ownerDocument, d) === !1) && (s !== "click" || !p.nodeName(f, "a")) && p.acceptData(f) && m && f[s] && (s !== "focus" && s !== "blur" || c.target.offsetWidth !== 0) && !p.isWindow(f) && (l = f[m],
                l && (f[m] = null),
                p.event.triggered = s,
                f[s](),
                p.event.triggered = b,
                l && (f[m] = l)),
                c.result
            }
            return
        },
        dispatch: function(c) {
            c = p.event.fix(c || a.event);
            var d, e, f, g, h, i, j, l, m, n, o = (p._data(this, "events") || {})[c.type] || [], q = o.delegateCount, r = k.call(arguments), s = !c.exclusive && !c.namespace, t = p.event.special[c.type] || {}, u = [];
            r[0] = c,
            c.delegateTarget = this;
            if (t.preDispatch && t.preDispatch.call(this, c) === !1)
                return;
            if (q && (!c.button || c.type !== "click"))
                for (f = c.target; f != this; f = f.parentNode || this)
                    if (f.disabled !== !0 || c.type !== "click") {
                        h = {},
                        j = [];
                        for (d = 0; d < q; d++)
                            l = o[d],
                            m = l.selector,
                            h[m] === b && (h[m] = l.needsContext ? p(m, this).index(f) >= 0 : p.find(m, this, null, [f]).length),
                            h[m] && j.push(l);
                        j.length && u.push({
                            elem: f,
                            matches: j
                        })
                    }
            o.length > q && u.push({
                elem: this,
                matches: o.slice(q)
            });
            for (d = 0; d < u.length && !c.isPropagationStopped(); d++) {
                i = u[d],
                c.currentTarget = i.elem;
                for (e = 0; e < i.matches.length && !c.isImmediatePropagationStopped(); e++) {
                    l = i.matches[e];
                    if (s || !c.namespace && !l.namespace || c.namespace_re && c.namespace_re.test(l.namespace))
                        c.data = l.data,
                        c.handleObj = l,
                        g = ((p.event.special[l.origType] || {}).handle || l.handler).apply(i.elem, r),
                        g !== b && (c.result = g,
                        g === !1 && (c.preventDefault(),
                        c.stopPropagation()))
                }
            }
            return t.postDispatch && t.postDispatch.call(this, c),
            c.result
        },
        props: "attrChange attrName relatedNode srcElement altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(a, b) {
                return a.which == null && (a.which = b.charCode != null ? b.charCode : b.keyCode),
                a
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(a, c) {
                var d, f, g, h = c.button, i = c.fromElement;
                return a.pageX == null && c.clientX != null && (d = a.target.ownerDocument || e,
                f = d.documentElement,
                g = d.body,
                a.pageX = c.clientX + (f && f.scrollLeft || g && g.scrollLeft || 0) - (f && f.clientLeft || g && g.clientLeft || 0),
                a.pageY = c.clientY + (f && f.scrollTop || g && g.scrollTop || 0) - (f && f.clientTop || g && g.clientTop || 0)),
                !a.relatedTarget && i && (a.relatedTarget = i === a.target ? c.toElement : i),
                !a.which && h !== b && (a.which = h & 1 ? 1 : h & 2 ? 3 : h & 4 ? 2 : 0),
                a
            }
        },
        fix: function(a) {
            if (a[p.expando])
                return a;
            var b, c, d = a, f = p.event.fixHooks[a.type] || {}, g = f.props ? this.props.concat(f.props) : this.props;
            a = p.Event(d);
            for (b = g.length; b; )
                c = g[--b],
                a[c] = d[c];
            return a.target || (a.target = d.srcElement || e),
            a.target.nodeType === 3 && (a.target = a.target.parentNode),
            a.metaKey = !!a.metaKey,
            f.filter ? f.filter(a, d) : a
        },
        special: {
            load: {
                noBubble: !0
            },
            focus: {
                delegateType: "focusin"
            },
            blur: {
                delegateType: "focusout"
            },
            beforeunload: {
                setup: function(a, b, c) {
                    p.isWindow(this) && (this.onbeforeunload = c)
                },
                teardown: function(a, b) {
                    this.onbeforeunload === b && (this.onbeforeunload = null)
                }
            }
        },
        simulate: function(a, b, c, d) {
            var e = p.extend(new p.Event, c, {
                type: a,
                isSimulated: !0,
                originalEvent: {}
            });
            d ? p.event.trigger(e, null, b) : p.event.dispatch.call(b, e),
            e.isDefaultPrevented() && c.preventDefault()
        }
    },
    p.event.handle = p.event.dispatch,
    p.removeEvent = e.removeEventListener ? function(a, b, c) {
        a.removeEventListener && a.removeEventListener(b, c, !1)
    }
    : function(a, b, c) {
        var d = "on" + b;
        a.detachEvent && (typeof a[d] == "undefined" && (a[d] = null),
        a.detachEvent(d, c))
    }
    ,
    p.Event = function(a, b) {
        if (this instanceof p.Event)
            a && a.type ? (this.originalEvent = a,
            this.type = a.type,
            this.isDefaultPrevented = a.defaultPrevented || a.returnValue === !1 || a.getPreventDefault && a.getPreventDefault() ? bb : ba) : this.type = a,
            b && p.extend(this, b),
            this.timeStamp = a && a.timeStamp || p.now(),
            this[p.expando] = !0;
        else
            return new p.Event(a,b)
    }
    ,
    p.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = bb;
            var a = this.originalEvent;
            if (!a)
                return;
            a.preventDefault ? a.preventDefault() : a.returnValue = !1
        },
        stopPropagation: function() {
            this.isPropagationStopped = bb;
            var a = this.originalEvent;
            if (!a)
                return;
            a.stopPropagation && a.stopPropagation(),
            a.cancelBubble = !0
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = bb,
            this.stopPropagation()
        },
        isDefaultPrevented: ba,
        isPropagationStopped: ba,
        isImmediatePropagationStopped: ba
    },
    p.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(a, b) {
        p.event.special[a] = {
            delegateType: b,
            bindType: b,
            handle: function(a) {
                var c, d = this, e = a.relatedTarget, f = a.handleObj, g = f.selector;
                if (!e || e !== d && !p.contains(d, e))
                    a.type = f.origType,
                    c = f.handler.apply(this, arguments),
                    a.type = b;
                return c
            }
        }
    }),
    p.support.submitBubbles || (p.event.special.submit = {
        setup: function() {
            if (p.nodeName(this, "form"))
                return !1;
            p.event.add(this, "click._submit keypress._submit", function(a) {
                var c = a.target
                  , d = p.nodeName(c, "input") || p.nodeName(c, "button") ? c.form : b;
                d && !p._data(d, "_submit_attached") && (p.event.add(d, "submit._submit", function(a) {
                    a._submit_bubble = !0
                }),
                p._data(d, "_submit_attached", !0))
            })
        },
        postDispatch: function(a) {
            a._submit_bubble && (delete a._submit_bubble,
            this.parentNode && !a.isTrigger && p.event.simulate("submit", this.parentNode, a, !0))
        },
        teardown: function() {
            if (p.nodeName(this, "form"))
                return !1;
            p.event.remove(this, "._submit")
        }
    }),
    p.support.changeBubbles || (p.event.special.change = {
        setup: function() {
            if (V.test(this.nodeName)) {
                if (this.type === "checkbox" || this.type === "radio")
                    p.event.add(this, "propertychange._change", function(a) {
                        a.originalEvent.propertyName === "checked" && (this._just_changed = !0)
                    }),
                    p.event.add(this, "click._change", function(a) {
                        this._just_changed && !a.isTrigger && (this._just_changed = !1),
                        p.event.simulate("change", this, a, !0)
                    });
                return !1
            }
            p.event.add(this, "beforeactivate._change", function(a) {
                var b = a.target;
                V.test(b.nodeName) && !p._data(b, "_change_attached") && (p.event.add(b, "change._change", function(a) {
                    this.parentNode && !a.isSimulated && !a.isTrigger && p.event.simulate("change", this.parentNode, a, !0)
                }),
                p._data(b, "_change_attached", !0))
            })
        },
        handle: function(a) {
            var b = a.target;
            if (this !== b || a.isSimulated || a.isTrigger || b.type !== "radio" && b.type !== "checkbox")
                return a.handleObj.handler.apply(this, arguments)
        },
        teardown: function() {
            return p.event.remove(this, "._change"),
            !V.test(this.nodeName)
        }
    }),
    p.support.focusinBubbles || p.each({
        focus: "focusin",
        blur: "focusout"
    }, function(a, b) {
        var c = 0
          , d = function(a) {
            p.event.simulate(b, a.target, p.event.fix(a), !0)
        };
        p.event.special[b] = {
            setup: function() {
                c++ === 0 && e.addEventListener(a, d, !0)
            },
            teardown: function() {
                --c === 0 && e.removeEventListener(a, d, !0)
            }
        }
    }),
    p.fn.extend({
        on: function(a, c, d, e, f) {
            var g, h;
            if (typeof a == "object") {
                typeof c != "string" && (d = d || c,
                c = b);
                for (h in a)
                    this.on(h, c, d, a[h], f);
                return this
            }
            d == null && e == null ? (e = c,
            d = c = b) : e == null && (typeof c == "string" ? (e = d,
            d = b) : (e = d,
            d = c,
            c = b));
            if (e === !1)
                e = ba;
            else if (!e)
                return this;
            return f === 1 && (g = e,
            e = function(a) {
                return p().off(a),
                g.apply(this, arguments)
            }
            ,
            e.guid = g.guid || (g.guid = p.guid++)),
            this.each(function() {
                p.event.add(this, a, e, d, c)
            })
        },
        one: function(a, b, c, d) {
            return this.on(a, b, c, d, 1)
        },
        off: function(a, c, d) {
            var e, f;
            if (a && a.preventDefault && a.handleObj)
                return e = a.handleObj,
                p(a.delegateTarget).off(e.namespace ? e.origType + "." + e.namespace : e.origType, e.selector, e.handler),
                this;
            if (typeof a == "object") {
                for (f in a)
                    this.off(f, c, a[f]);
                return this
            }
            if (c === !1 || typeof c == "function")
                d = c,
                c = b;
            return d === !1 && (d = ba),
            this.each(function() {
                p.event.remove(this, a, d, c)
            })
        },
        bind: function(a, b, c) {
            return this.on(a, null, b, c)
        },
        unbind: function(a, b) {
            return this.off(a, null, b)
        },
        live: function(a, b, c) {
            return p(this.context).on(a, this.selector, b, c),
            this
        },
        die: function(a, b) {
            return p(this.context).off(a, this.selector || "**", b),
            this
        },
        delegate: function(a, b, c, d) {
            return this.on(b, a, c, d)
        },
        undelegate: function(a, b, c) {
            return arguments.length === 1 ? this.off(a, "**") : this.off(b, a || "**", c)
        },
        trigger: function(a, b) {
            return this.each(function() {
                p.event.trigger(a, b, this)
            })
        },
        triggerHandler: function(a, b) {
            if (this[0])
                return p.event.trigger(a, b, this[0], !0)
        },
        toggle: function(a) {
            var b = arguments
              , c = a.guid || p.guid++
              , d = 0
              , e = function(c) {
                var e = (p._data(this, "lastToggle" + a.guid) || 0) % d;
                return p._data(this, "lastToggle" + a.guid, e + 1),
                c.preventDefault(),
                b[e].apply(this, arguments) || !1
            };
            e.guid = c;
            while (d < b.length)
                b[d++].guid = c;
            return this.click(e)
        },
        hover: function(a, b) {
            return this.mouseenter(a).mouseleave(b || a)
        }
    }),
    p.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
        p.fn[b] = function(a, c) {
            return c == null && (c = a,
            a = null),
            arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b)
        }
        ,
        Y.test(b) && (p.event.fixHooks[b] = p.event.keyHooks),
        Z.test(b) && (p.event.fixHooks[b] = p.event.mouseHooks)
    }),
    function(a, b) {
        function bc(a, b, c, d) {
            c = c || [],
            b = b || r;
            var e, f, i, j, k = b.nodeType;
            if (!a || typeof a != "string")
                return c;
            if (k !== 1 && k !== 9)
                return [];
            i = g(b);
            if (!i && !d)
                if (e = P.exec(a))
                    if (j = e[1]) {
                        if (k === 9) {
                            f = b.getElementById(j);
                            if (!f || !f.parentNode)
                                return c;
                            if (f.id === j)
                                return c.push(f),
                                c
                        } else if (b.ownerDocument && (f = b.ownerDocument.getElementById(j)) && h(b, f) && f.id === j)
                            return c.push(f),
                            c
                    } else {
                        if (e[2])
                            return w.apply(c, x.call(b.getElementsByTagName(a), 0)),
                            c;
                        if ((j = e[3]) && _ && b.getElementsByClassName)
                            return w.apply(c, x.call(b.getElementsByClassName(j), 0)),
                            c
                    }
            return bp(a.replace(L, "$1"), b, c, d, i)
        }
        function bd(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return c === "input" && b.type === a
            }
        }
        function be(a) {
            return function(b) {
                var c = b.nodeName.toLowerCase();
                return (c === "input" || c === "button") && b.type === a
            }
        }
        function bf(a) {
            return z(function(b) {
                return b = +b,
                z(function(c, d) {
                    var e, f = a([], c.length, b), g = f.length;
                    while (g--)
                        c[e = f[g]] && (c[e] = !(d[e] = c[e]))
                })
            })
        }
        function bg(a, b, c) {
            if (a === b)
                return c;
            var d = a.nextSibling;
            while (d) {
                if (d === b)
                    return -1;
                d = d.nextSibling
            }
            return 1
        }
        function bh(a, b) {
            var c, d, f, g, h, i, j, k = C[o][a];
            if (k)
                return b ? 0 : k.slice(0);
            h = a,
            i = [],
            j = e.preFilter;
            while (h) {
                if (!c || (d = M.exec(h)))
                    d && (h = h.slice(d[0].length)),
                    i.push(f = []);
                c = !1;
                if (d = N.exec(h))
                    f.push(c = new q(d.shift())),
                    h = h.slice(c.length),
                    c.type = d[0].replace(L, " ");
                for (g in e.filter)
                    (d = W[g].exec(h)) && (!j[g] || (d = j[g](d, r, !0))) && (f.push(c = new q(d.shift())),
                    h = h.slice(c.length),
                    c.type = g,
                    c.matches = d);
                if (!c)
                    break
            }
            return b ? h.length : h ? bc.error(a) : C(a, i).slice(0)
        }
        function bi(a, b, d) {
            var e = b.dir
              , f = d && b.dir === "parentNode"
              , g = u++;
            return b.first ? function(b, c, d) {
                while (b = b[e])
                    if (f || b.nodeType === 1)
                        return a(b, c, d)
            }
            : function(b, d, h) {
                if (!h) {
                    var i, j = t + " " + g + " ", k = j + c;
                    while (b = b[e])
                        if (f || b.nodeType === 1) {
                            if ((i = b[o]) === k)
                                return b.sizset;
                            if (typeof i == "string" && i.indexOf(j) === 0) {
                                if (b.sizset)
                                    return b
                            } else {
                                b[o] = k;
                                if (a(b, d, h))
                                    return b.sizset = !0,
                                    b;
                                b.sizset = !1
                            }
                        }
                } else
                    while (b = b[e])
                        if (f || b.nodeType === 1)
                            if (a(b, d, h))
                                return b
            }
        }
        function bj(a) {
            return a.length > 1 ? function(b, c, d) {
                var e = a.length;
                while (e--)
                    if (!a[e](b, c, d))
                        return !1;
                return !0
            }
            : a[0]
        }
        function bk(a, b, c, d, e) {
            var f, g = [], h = 0, i = a.length, j = b != null;
            for (; h < i; h++)
                if (f = a[h])
                    if (!c || c(f, d, e))
                        g.push(f),
                        j && b.push(h);
            return g
        }
        function bl(a, b, c, d, e, f) {
            return d && !d[o] && (d = bl(d)),
            e && !e[o] && (e = bl(e, f)),
            z(function(f, g, h, i) {
                if (f && e)
                    return;
                var j, k, l, m = [], n = [], o = g.length, p = f || bo(b || "*", h.nodeType ? [h] : h, [], f), q = a && (f || !b) ? bk(p, m, a, h, i) : p, r = c ? e || (f ? a : o || d) ? [] : g : q;
                c && c(q, r, h, i);
                if (d) {
                    l = bk(r, n),
                    d(l, [], h, i),
                    j = l.length;
                    while (j--)
                        if (k = l[j])
                            r[n[j]] = !(q[n[j]] = k)
                }
                if (f) {
                    j = a && r.length;
                    while (j--)
                        if (k = r[j])
                            f[m[j]] = !(g[m[j]] = k)
                } else
                    r = bk(r === g ? r.splice(o, r.length) : r),
                    e ? e(null, g, r, i) : w.apply(g, r)
            })
        }
        function bm(a) {
            var b, c, d, f = a.length, g = e.relative[a[0].type], h = g || e.relative[" "], i = g ? 1 : 0, j = bi(function(a) {
                return a === b
            }, h, !0), k = bi(function(a) {
                return y.call(b, a) > -1
            }, h, !0), m = [function(a, c, d) {
                return !g && (d || c !== l) || ((b = c).nodeType ? j(a, c, d) : k(a, c, d))
            }
            ];
            for (; i < f; i++)
                if (c = e.relative[a[i].type])
                    m = [bi(bj(m), c)];
                else {
                    c = e.filter[a[i].type].apply(null, a[i].matches);
                    if (c[o]) {
                        d = ++i;
                        for (; d < f; d++)
                            if (e.relative[a[d].type])
                                break;
                        return bl(i > 1 && bj(m), i > 1 && a.slice(0, i - 1).join("").replace(L, "$1"), c, i < d && bm(a.slice(i, d)), d < f && bm(a = a.slice(d)), d < f && a.join(""))
                    }
                    m.push(c)
                }
            return bj(m)
        }
        function bn(a, b) {
            var d = b.length > 0
              , f = a.length > 0
              , g = function(h, i, j, k, m) {
                var n, o, p, q = [], s = 0, u = "0", x = h && [], y = m != null, z = l, A = h || f && e.find.TAG("*", m && i.parentNode || i), B = t += z == null ? 1 : Math.E;
                y && (l = i !== r && i,
                c = g.el);
                for (; (n = A[u]) != null; u++) {
                    if (f && n) {
                        for (o = 0; p = a[o]; o++)
                            if (p(n, i, j)) {
                                k.push(n);
                                break
                            }
                        y && (t = B,
                        c = ++g.el)
                    }
                    d && ((n = !p && n) && s--,
                    h && x.push(n))
                }
                s += u;
                if (d && u !== s) {
                    for (o = 0; p = b[o]; o++)
                        p(x, q, i, j);
                    if (h) {
                        if (s > 0)
                            while (u--)
                                !x[u] && !q[u] && (q[u] = v.call(k));
                        q = bk(q)
                    }
                    w.apply(k, q),
                    y && !h && q.length > 0 && s + b.length > 1 && bc.uniqueSort(k)
                }
                return y && (t = B,
                l = z),
                x
            };
            return g.el = 0,
            d ? z(g) : g
        }
        function bo(a, b, c, d) {
            var e = 0
              , f = b.length;
            for (; e < f; e++)
                bc(a, b[e], c, d);
            return c
        }
        function bp(a, b, c, d, f) {
            var g, h, j, k, l, m = bh(a), n = m.length;
            if (!d && m.length === 1) {
                h = m[0] = m[0].slice(0);
                if (h.length > 2 && (j = h[0]).type === "ID" && b.nodeType === 9 && !f && e.relative[h[1].type]) {
                    b = e.find.ID(j.matches[0].replace(V, ""), b, f)[0];
                    if (!b)
                        return c;
                    a = a.slice(h.shift().length)
                }
                for (g = W.POS.test(a) ? -1 : h.length - 1; g >= 0; g--) {
                    j = h[g];
                    if (e.relative[k = j.type])
                        break;
                    if (l = e.find[k])
                        if (d = l(j.matches[0].replace(V, ""), R.test(h[0].type) && b.parentNode || b, f)) {
                            h.splice(g, 1),
                            a = d.length && h.join("");
                            if (!a)
                                return w.apply(c, x.call(d, 0)),
                                c;
                            break
                        }
                }
            }
            return i(a, m)(d, b, f, c, R.test(a)),
            c
        }
        function bq() {}
        var c, d, e, f, g, h, i, j, k, l, m = !0, n = "undefined", o = ("sizcache" + Math.random()).replace(".", ""), q = String, r = a.document, s = r.documentElement, t = 0, u = 0, v = [].pop, w = [].push, x = [].slice, y = [].indexOf || function(a) {
            var b = 0
              , c = this.length;
            for (; b < c; b++)
                if (this[b] === a)
                    return b;
            return -1
        }
        , z = function(a, b) {
            return a[o] = b == null || b,
            a
        }, A = function() {
            var a = {}
              , b = [];
            return z(function(c, d) {
                return b.push(c) > e.cacheLength && delete a[b.shift()],
                a[c] = d
            }, a)
        }, B = A(), C = A(), D = A(), E = "[\\x20\\t\\r\\n\\f]", F = "(?:\\\\.|[-\\w]|[^\\x00-\\xa0])+", G = F.replace("w", "w#"), H = "([*^$|!~]?=)", I = "\\[" + E + "*(" + F + ")" + E + "*(?:" + H + E + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + G + ")|)|)" + E + "*\\]", J = ":(" + F + ")(?:\\((?:(['\"])((?:\\\\.|[^\\\\])*?)\\2|([^()[\\]]*|(?:(?:" + I + ")|[^:]|\\\\.)*|.*))\\)|)", K = ":(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + E + "*((?:-\\d)?\\d*)" + E + "*\\)|)(?=[^-]|$)", L = new RegExp("^" + E + "+|((?:^|[^\\\\])(?:\\\\.)*)" + E + "+$","g"), M = new RegExp("^" + E + "*," + E + "*"), N = new RegExp("^" + E + "*([\\x20\\t\\r\\n\\f>+~])" + E + "*"), O = new RegExp(J), P = /^(?:#([\w\-]+)|(\w+)|\.([\w\-]+))$/, Q = /^:not/, R = /[\x20\t\r\n\f]*[+~]/, S = /:not\($/, T = /h\d/i, U = /input|select|textarea|button/i, V = /\\(?!\\)/g, W = {
            ID: new RegExp("^#(" + F + ")"),
            CLASS: new RegExp("^\\.(" + F + ")"),
            NAME: new RegExp("^\\[name=['\"]?(" + F + ")['\"]?\\]"),
            TAG: new RegExp("^(" + F.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + I),
            PSEUDO: new RegExp("^" + J),
            POS: new RegExp(K,"i"),
            CHILD: new RegExp("^:(only|nth|first|last)-child(?:\\(" + E + "*(even|odd|(([+-]|)(\\d*)n|)" + E + "*(?:([+-]|)" + E + "*(\\d+)|))" + E + "*\\)|)","i"),
            needsContext: new RegExp("^" + E + "*[>+~]|" + K,"i")
        }, X = function(a) {
            var b = r.createElement("div");
            try {
                return a(b)
            } catch (c) {
                return !1
            } finally {
                b = null
            }
        }, Y = X(function(a) {
            return a.appendChild(r.createComment("")),
            !a.getElementsByTagName("*").length
        }), Z = X(function(a) {
            return a.innerHTML = "<a href='#'></a>",
            a.firstChild && typeof a.firstChild.getAttribute !== n && a.firstChild.getAttribute("href") === "#"
        }), $ = X(function(a) {
            a.innerHTML = "<select></select>";
            var b = typeof a.lastChild.getAttribute("multiple");
            return b !== "boolean" && b !== "string"
        }), _ = X(function(a) {
            return a.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>",
            !a.getElementsByClassName || !a.getElementsByClassName("e").length ? !1 : (a.lastChild.className = "e",
            a.getElementsByClassName("e").length === 2)
        }), ba = X(function(a) {
            a.id = o + 0,
            a.innerHTML = "<a name='" + o + "'></a><div name='" + o + "'></div>",
            s.insertBefore(a, s.firstChild);
            var b = r.getElementsByName && r.getElementsByName(o).length === 2 + r.getElementsByName(o + 0).length;
            return d = !r.getElementById(o),
            s.removeChild(a),
            b
        });
        try {
            x.call(s.childNodes, 0)[0].nodeType
        } catch (bb) {
            x = function(a) {
                var b, c = [];
                for (; b = this[a]; a++)
                    c.push(b);
                return c
            }
        }
        bc.matches = function(a, b) {
            return bc(a, null, null, b)
        }
        ,
        bc.matchesSelector = function(a, b) {
            return bc(b, null, null, [a]).length > 0
        }
        ,
        f = bc.getText = function(a) {
            var b, c = "", d = 0, e = a.nodeType;
            if (e) {
                if (e === 1 || e === 9 || e === 11) {
                    if (typeof a.textContent == "string")
                        return a.textContent;
                    for (a = a.firstChild; a; a = a.nextSibling)
                        c += f(a)
                } else if (e === 3 || e === 4)
                    return a.nodeValue
            } else
                for (; b = a[d]; d++)
                    c += f(b);
            return c
        }
        ,
        g = bc.isXML = function(a) {
            var b = a && (a.ownerDocument || a).documentElement;
            return b ? b.nodeName !== "HTML" : !1
        }
        ,
        h = bc.contains = s.contains ? function(a, b) {
            var c = a.nodeType === 9 ? a.documentElement : a
              , d = b && b.parentNode;
            return a === d || !!(d && d.nodeType === 1 && c.contains && c.contains(d))
        }
        : s.compareDocumentPosition ? function(a, b) {
            return b && !!(a.compareDocumentPosition(b) & 16)
        }
        : function(a, b) {
            while (b = b.parentNode)
                if (b === a)
                    return !0;
            return !1
        }
        ,
        bc.attr = function(a, b) {
            var c, d = g(a);
            return d || (b = b.toLowerCase()),
            (c = e.attrHandle[b]) ? c(a) : d || $ ? a.getAttribute(b) : (c = a.getAttributeNode(b),
            c ? typeof a[b] == "boolean" ? a[b] ? b : null : c.specified ? c.value : null : null)
        }
        ,
        e = bc.selectors = {
            cacheLength: 50,
            createPseudo: z,
            match: W,
            attrHandle: Z ? {} : {
                href: function(a) {
                    return a.getAttribute("href", 2)
                },
                type: function(a) {
                    return a.getAttribute("type")
                }
            },
            find: {
                ID: d ? function(a, b, c) {
                    if (typeof b.getElementById !== n && !c) {
                        var d = b.getElementById(a);
                        return d && d.parentNode ? [d] : []
                    }
                }
                : function(a, c, d) {
                    if (typeof c.getElementById !== n && !d) {
                        var e = c.getElementById(a);
                        return e ? e.id === a || typeof e.getAttributeNode !== n && e.getAttributeNode("id").value === a ? [e] : b : []
                    }
                }
                ,
                TAG: Y ? function(a, b) {
                    if (typeof b.getElementsByTagName !== n)
                        return b.getElementsByTagName(a)
                }
                : function(a, b) {
                    var c = b.getElementsByTagName(a);
                    if (a === "*") {
                        var d, e = [], f = 0;
                        for (; d = c[f]; f++)
                            d.nodeType === 1 && e.push(d);
                        return e
                    }
                    return c
                }
                ,
                NAME: ba && function(a, b) {
                    if (typeof b.getElementsByName !== n)
                        return b.getElementsByName(name)
                }
                ,
                CLASS: _ && function(a, b, c) {
                    if (typeof b.getElementsByClassName !== n && !c)
                        return b.getElementsByClassName(a)
                }
            },
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(a) {
                    return a[1] = a[1].replace(V, ""),
                    a[3] = (a[4] || a[5] || "").replace(V, ""),
                    a[2] === "~=" && (a[3] = " " + a[3] + " "),
                    a.slice(0, 4)
                },
                CHILD: function(a) {
                    return a[1] = a[1].toLowerCase(),
                    a[1] === "nth" ? (a[2] || bc.error(a[0]),
                    a[3] = +(a[3] ? a[4] + (a[5] || 1) : 2 * (a[2] === "even" || a[2] === "odd")),
                    a[4] = +(a[6] + a[7] || a[2] === "odd")) : a[2] && bc.error(a[0]),
                    a
                },
                PSEUDO: function(a) {
                    var b, c;
                    if (W.CHILD.test(a[0]))
                        return null;
                    if (a[3])
                        a[2] = a[3];
                    else if (b = a[4])
                        O.test(b) && (c = bh(b, !0)) && (c = b.indexOf(")", b.length - c) - b.length) && (b = b.slice(0, c),
                        a[0] = a[0].slice(0, c)),
                        a[2] = b;
                    return a.slice(0, 3)
                }
            },
            filter: {
                ID: d ? function(a) {
                    return a = a.replace(V, ""),
                    function(b) {
                        return b.getAttribute("id") === a
                    }
                }
                : function(a) {
                    return a = a.replace(V, ""),
                    function(b) {
                        var c = typeof b.getAttributeNode !== n && b.getAttributeNode("id");
                        return c && c.value === a
                    }
                }
                ,
                TAG: function(a) {
                    return a === "*" ? function() {
                        return !0
                    }
                    : (a = a.replace(V, "").toLowerCase(),
                    function(b) {
                        return b.nodeName && b.nodeName.toLowerCase() === a
                    }
                    )
                },
                CLASS: function(a) {
                    var b = B[o][a];
                    return b || (b = B(a, new RegExp("(^|" + E + ")" + a + "(" + E + "|$)"))),
                    function(a) {
                        return b.test(a.className || typeof a.getAttribute !== n && a.getAttribute("class") || "")
                    }
                },
                ATTR: function(a, b, c) {
                    return function(d, e) {
                        var f = bc.attr(d, a);
                        return f == null ? b === "!=" : b ? (f += "",
                        b === "=" ? f === c : b === "!=" ? f !== c : b === "^=" ? c && f.indexOf(c) === 0 : b === "*=" ? c && f.indexOf(c) > -1 : b === "$=" ? c && f.substr(f.length - c.length) === c : b === "~=" ? (" " + f + " ").indexOf(c) > -1 : b === "|=" ? f === c || f.substr(0, c.length + 1) === c + "-" : !1) : !0
                    }
                },
                CHILD: function(a, b, c, d) {
                    return a === "nth" ? function(a) {
                        var b, e, f = a.parentNode;
                        if (c === 1 && d === 0)
                            return !0;
                        if (f) {
                            e = 0;
                            for (b = f.firstChild; b; b = b.nextSibling)
                                if (b.nodeType === 1) {
                                    e++;
                                    if (a === b)
                                        break
                                }
                        }
                        return e -= d,
                        e === c || e % c === 0 && e / c >= 0
                    }
                    : function(b) {
                        var c = b;
                        switch (a) {
                        case "only":
                        case "first":
                            while (c = c.previousSibling)
                                if (c.nodeType === 1)
                                    return !1;
                            if (a === "first")
                                return !0;
                            c = b;
                        case "last":
                            while (c = c.nextSibling)
                                if (c.nodeType === 1)
                                    return !1;
                            return !0
                        }
                    }
                },
                PSEUDO: function(a, b) {
                    var c, d = e.pseudos[a] || e.setFilters[a.toLowerCase()] || bc.error("unsupported pseudo: " + a);
                    return d[o] ? d(b) : d.length > 1 ? (c = [a, a, "", b],
                    e.setFilters.hasOwnProperty(a.toLowerCase()) ? z(function(a, c) {
                        var e, f = d(a, b), g = f.length;
                        while (g--)
                            e = y.call(a, f[g]),
                            a[e] = !(c[e] = f[g])
                    }) : function(a) {
                        return d(a, 0, c)
                    }
                    ) : d
                }
            },
            pseudos: {
                not: z(function(a) {
                    var b = []
                      , c = []
                      , d = i(a.replace(L, "$1"));
                    return d[o] ? z(function(a, b, c, e) {
                        var f, g = d(a, null, e, []), h = a.length;
                        while (h--)
                            if (f = g[h])
                                a[h] = !(b[h] = f)
                    }) : function(a, e, f) {
                        return b[0] = a,
                        d(b, null, f, c),
                        !c.pop()
                    }
                }),
                has: z(function(a) {
                    return function(b) {
                        return bc(a, b).length > 0
                    }
                }),
                contains: z(function(a) {
                    return function(b) {
                        return (b.textContent || b.innerText || f(b)).indexOf(a) > -1
                    }
                }),
                enabled: function(a) {
                    return a.disabled === !1
                },
                disabled: function(a) {
                    return a.disabled === !0
                },
                checked: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return b === "input" && !!a.checked || b === "option" && !!a.selected
                },
                selected: function(a) {
                    return a.parentNode && a.parentNode.selectedIndex,
                    a.selected === !0
                },
                parent: function(a) {
                    return !e.pseudos.empty(a)
                },
                empty: function(a) {
                    var b;
                    a = a.firstChild;
                    while (a) {
                        if (a.nodeName > "@" || (b = a.nodeType) === 3 || b === 4)
                            return !1;
                        a = a.nextSibling
                    }
                    return !0
                },
                header: function(a) {
                    return T.test(a.nodeName)
                },
                text: function(a) {
                    var b, c;
                    return a.nodeName.toLowerCase() === "input" && (b = a.type) === "text" && ((c = a.getAttribute("type")) == null || c.toLowerCase() === b)
                },
                radio: bd("radio"),
                checkbox: bd("checkbox"),
                file: bd("file"),
                password: bd("password"),
                image: bd("image"),
                submit: be("submit"),
                reset: be("reset"),
                button: function(a) {
                    var b = a.nodeName.toLowerCase();
                    return b === "input" && a.type === "button" || b === "button"
                },
                input: function(a) {
                    return U.test(a.nodeName)
                },
                focus: function(a) {
                    var b = a.ownerDocument;
                    return a === b.activeElement && (!b.hasFocus || b.hasFocus()) && (!!a.type || !!a.href)
                },
                active: function(a) {
                    return a === a.ownerDocument.activeElement
                },
                first: bf(function(a, b, c) {
                    return [0]
                }),
                last: bf(function(a, b, c) {
                    return [b - 1]
                }),
                eq: bf(function(a, b, c) {
                    return [c < 0 ? c + b : c]
                }),
                even: bf(function(a, b, c) {
                    for (var d = 0; d < b; d += 2)
                        a.push(d);
                    return a
                }),
                odd: bf(function(a, b, c) {
                    for (var d = 1; d < b; d += 2)
                        a.push(d);
                    return a
                }),
                lt: bf(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; --d >= 0; )
                        a.push(d);
                    return a
                }),
                gt: bf(function(a, b, c) {
                    for (var d = c < 0 ? c + b : c; ++d < b; )
                        a.push(d);
                    return a
                })
            }
        },
        j = s.compareDocumentPosition ? function(a, b) {
            return a === b ? (k = !0,
            0) : (!a.compareDocumentPosition || !b.compareDocumentPosition ? a.compareDocumentPosition : a.compareDocumentPosition(b) & 4) ? -1 : 1
        }
        : function(a, b) {
            if (a === b)
                return k = !0,
                0;
            if (a.sourceIndex && b.sourceIndex)
                return a.sourceIndex - b.sourceIndex;
            var c, d, e = [], f = [], g = a.parentNode, h = b.parentNode, i = g;
            if (g === h)
                return bg(a, b);
            if (!g)
                return -1;
            if (!h)
                return 1;
            while (i)
                e.unshift(i),
                i = i.parentNode;
            i = h;
            while (i)
                f.unshift(i),
                i = i.parentNode;
            c = e.length,
            d = f.length;
            for (var j = 0; j < c && j < d; j++)
                if (e[j] !== f[j])
                    return bg(e[j], f[j]);
            return j === c ? bg(a, f[j], -1) : bg(e[j], b, 1)
        }
        ,
        [0, 0].sort(j),
        m = !k,
        bc.uniqueSort = function(a) {
            var b, c = 1;
            k = m,
            a.sort(j);
            if (k)
                for (; b = a[c]; c++)
                    b === a[c - 1] && a.splice(c--, 1);
            return a
        }
        ,
        bc.error = function(a) {
            throw new Error("Syntax error, unrecognized expression: " + a)
        }
        ,
        i = bc.compile = function(a, b) {
            var c, d = [], e = [], f = D[o][a];
            if (!f) {
                b || (b = bh(a)),
                c = b.length;
                while (c--)
                    f = bm(b[c]),
                    f[o] ? d.push(f) : e.push(f);
                f = D(a, bn(e, d))
            }
            return f
        }
        ,
        r.querySelectorAll && function() {
            var a, b = bp, c = /'|\\/g, d = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, e = [":focus"], f = [":active", ":focus"], h = s.matchesSelector || s.mozMatchesSelector || s.webkitMatchesSelector || s.oMatchesSelector || s.msMatchesSelector;
            X(function(a) {
                a.innerHTML = "<select><option selected=''></option></select>",
                a.querySelectorAll("[selected]").length || e.push("\\[" + E + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"),
                a.querySelectorAll(":checked").length || e.push(":checked")
            }),
            X(function(a) {
                a.innerHTML = "<p test=''></p>",
                a.querySelectorAll("[test^='']").length && e.push("[*^$]=" + E + "*(?:\"\"|'')"),
                a.innerHTML = "<input type='hidden'/>",
                a.querySelectorAll(":enabled").length || e.push(":enabled", ":disabled")
            }),
            e = new RegExp(e.join("|")),
            bp = function(a, d, f, g, h) {
                if (!g && !h && (!e || !e.test(a))) {
                    var i, j, k = !0, l = o, m = d, n = d.nodeType === 9 && a;
                    if (d.nodeType === 1 && d.nodeName.toLowerCase() !== "object") {
                        i = bh(a),
                        (k = d.getAttribute("id")) ? l = k.replace(c, "\\$&") : d.setAttribute("id", l),
                        l = "[id='" + l + "'] ",
                        j = i.length;
                        while (j--)
                            i[j] = l + i[j].join("");
                        m = R.test(a) && d.parentNode || d,
                        n = i.join(",")
                    }
                    if (n)
                        try {
                            return w.apply(f, x.call(m.querySelectorAll(n), 0)),
                            f
                        } catch (p) {} finally {
                            k || d.removeAttribute("id")
                        }
                }
                return b(a, d, f, g, h)
            }
            ,
            h && (X(function(b) {
                a = h.call(b, "div");
                try {
                    h.call(b, "[test!='']:sizzle"),
                    f.push("!=", J)
                } catch (c) {}
            }),
            f = new RegExp(f.join("|")),
            bc.matchesSelector = function(b, c) {
                c = c.replace(d, "='$1']");
                if (!g(b) && !f.test(c) && (!e || !e.test(c)))
                    try {
                        var i = h.call(b, c);
                        if (i || a || b.document && b.document.nodeType !== 11)
                            return i
                    } catch (j) {}
                return bc(c, null, null, [b]).length > 0
            }
            )
        }(),
        e.pseudos.nth = e.pseudos.eq,
        e.filters = bq.prototype = e.pseudos,
        e.setFilters = new bq,
        bc.attr = p.attr,
        p.find = bc,
        p.expr = bc.selectors,
        p.expr[":"] = p.expr.pseudos,
        p.unique = bc.uniqueSort,
        p.text = bc.getText,
        p.isXMLDoc = bc.isXML,
        p.contains = bc.contains
    }(a);
    var bc = /Until$/
      , bd = /^(?:parents|prev(?:Until|All))/
      , be = /^.[^:#\[\.,]*$/
      , bf = p.expr.match.needsContext
      , bg = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    p.fn.extend({
        find: function(a) {
            var b, c, d, e, f, g, h = this;
            if (typeof a != "string")
                return p(a).filter(function() {
                    for (b = 0,
                    c = h.length; b < c; b++)
                        if (p.contains(h[b], this))
                            return !0
                });
            g = this.pushStack("", "find", a);
            for (b = 0,
            c = this.length; b < c; b++) {
                d = g.length,
                p.find(a, this[b], g);
                if (b > 0)
                    for (e = d; e < g.length; e++)
                        for (f = 0; f < d; f++)
                            if (g[f] === g[e]) {
                                g.splice(e--, 1);
                                break
                            }
            }
            return g
        },
        has: function(a) {
            var b, c = p(a, this), d = c.length;
            return this.filter(function() {
                for (b = 0; b < d; b++)
                    if (p.contains(this, c[b]))
                        return !0
            })
        },
        not: function(a) {
            return this.pushStack(bj(this, a, !1), "not", a)
        },
        filter: function(a) {
            return this.pushStack(bj(this, a, !0), "filter", a)
        },
        is: function(a) {
            return !!a && (typeof a == "string" ? bf.test(a) ? p(a, this.context).index(this[0]) >= 0 : p.filter(a, this).length > 0 : this.filter(a).length > 0)
        },
        closest: function(a, b) {
            var c, d = 0, e = this.length, f = [], g = bf.test(a) || typeof a != "string" ? p(a, b || this.context) : 0;
            for (; d < e; d++) {
                c = this[d];
                while (c && c.ownerDocument && c !== b && c.nodeType !== 11) {
                    if (g ? g.index(c) > -1 : p.find.matchesSelector(c, a)) {
                        f.push(c);
                        break
                    }
                    c = c.parentNode
                }
            }
            return f = f.length > 1 ? p.unique(f) : f,
            this.pushStack(f, "closest", a)
        },
        index: function(a) {
            return a ? typeof a == "string" ? p.inArray(this[0], p(a)) : p.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1
        },
        add: function(a, b) {
            var c = typeof a == "string" ? p(a, b) : p.makeArray(a && a.nodeType ? [a] : a)
              , d = p.merge(this.get(), c);
            return this.pushStack(bh(c[0]) || bh(d[0]) ? d : p.unique(d))
        },
        addBack: function(a) {
            return this.add(a == null ? this.prevObject : this.prevObject.filter(a))
        }
    }),
    p.fn.andSelf = p.fn.addBack,
    p.each({
        parent: function(a) {
            var b = a.parentNode;
            return b && b.nodeType !== 11 ? b : null
        },
        parents: function(a) {
            return p.dir(a, "parentNode")
        },
        parentsUntil: function(a, b, c) {
            return p.dir(a, "parentNode", c)
        },
        next: function(a) {
            return bi(a, "nextSibling")
        },
        prev: function(a) {
            return bi(a, "previousSibling")
        },
        nextAll: function(a) {
            return p.dir(a, "nextSibling")
        },
        prevAll: function(a) {
            return p.dir(a, "previousSibling")
        },
        nextUntil: function(a, b, c) {
            return p.dir(a, "nextSibling", c)
        },
        prevUntil: function(a, b, c) {
            return p.dir(a, "previousSibling", c)
        },
        siblings: function(a) {
            return p.sibling((a.parentNode || {}).firstChild, a)
        },
        children: function(a) {
            return p.sibling(a.firstChild)
        },
        contents: function(a) {
            return p.nodeName(a, "iframe") ? a.contentDocument || a.contentWindow.document : p.merge([], a.childNodes)
        }
    }, function(a, b) {
        p.fn[a] = function(c, d) {
            var e = p.map(this, b, c);
            return bc.test(a) || (d = c),
            d && typeof d == "string" && (e = p.filter(d, e)),
            e = this.length > 1 && !bg[a] ? p.unique(e) : e,
            this.length > 1 && bd.test(a) && (e = e.reverse()),
            this.pushStack(e, a, k.call(arguments).join(","))
        }
    }),
    p.extend({
        filter: function(a, b, c) {
            return c && (a = ":not(" + a + ")"),
            b.length === 1 ? p.find.matchesSelector(b[0], a) ? [b[0]] : [] : p.find.matches(a, b)
        },
        dir: function(a, c, d) {
            var e = []
              , f = a[c];
            while (f && f.nodeType !== 9 && (d === b || f.nodeType !== 1 || !p(f).is(d)))
                f.nodeType === 1 && e.push(f),
                f = f[c];
            return e
        },
        sibling: function(a, b) {
            var c = [];
            for (; a; a = a.nextSibling)
                a.nodeType === 1 && a !== b && c.push(a);
            return c
        }
    });
    var bl = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video"
      , bm = / jQuery\d+="(?:null|\d+)"/g
      , bn = /^\s+/
      , bo = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi
      , bp = /<([\w:]+)/
      , bq = /<tbody/i
      , br = /<|&#?\w+;/
      , bs = /<(?:script|style|link)/i
      , bt = /<(?:script|object|embed|option|style)/i
      , bu = new RegExp("<(?:" + bl + ")[\\s/>]","i")
      , bv = /^(?:checkbox|radio)$/
      , bw = /checked\s*(?:[^=]|=\s*.checked.)/i
      , bx = /\/(java|ecma)script/i
      , by = /^\s*<!(?:\[CDATA\[|\-\-)|[\]\-]{2}>\s*$/g
      , bz = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        legend: [1, "<fieldset>", "</fieldset>"],
        thead: [1, "<table>", "</table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
        area: [1, "<map>", "</map>"],
        _default: [0, "", ""]
    }
      , bA = bk(e)
      , bB = bA.appendChild(e.createElement("div"));
    bz.optgroup = bz.option,
    bz.tbody = bz.tfoot = bz.colgroup = bz.caption = bz.thead,
    bz.th = bz.td,
    p.support.htmlSerialize || (bz._default = [1, "X<div>", "</div>"]),
    p.fn.extend({
        text: function(a) {
            return p.access(this, function(a) {
                return a === b ? p.text(this) : this.empty().append((this[0] && this[0].ownerDocument || e).createTextNode(a))
            }, null, a, arguments.length)
        },
        wrapAll: function(a) {
            if (p.isFunction(a))
                return this.each(function(b) {
                    p(this).wrapAll(a.call(this, b))
                });
            if (this[0]) {
                var b = p(a, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && b.insertBefore(this[0]),
                b.map(function() {
                    var a = this;
                    while (a.firstChild && a.firstChild.nodeType === 1)
                        a = a.firstChild;
                    return a
                }).append(this)
            }
            return this
        },
        wrapInner: function(a) {
            return p.isFunction(a) ? this.each(function(b) {
                p(this).wrapInner(a.call(this, b))
            }) : this.each(function() {
                var b = p(this)
                  , c = b.contents();
                c.length ? c.wrapAll(a) : b.append(a)
            })
        },
        wrap: function(a) {
            var b = p.isFunction(a);
            return this.each(function(c) {
                p(this).wrapAll(b ? a.call(this, c) : a)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                p.nodeName(this, "body") || p(this).replaceWith(this.childNodes)
            }).end()
        },
        append: function() {
            return this.domManip(arguments, !0, function(a) {
                (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(a)
            })
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(a) {
                (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(a, this.firstChild)
            })
        },
        before: function() {
            if (!bh(this[0]))
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this)
                });
            if (arguments.length) {
                var a = p.clean(arguments);
                return this.pushStack(p.merge(a, this), "before", this.selector)
            }
        },
        after: function() {
            if (!bh(this[0]))
                return this.domManip(arguments, !1, function(a) {
                    this.parentNode.insertBefore(a, this.nextSibling)
                });
            if (arguments.length) {
                var a = p.clean(arguments);
                return this.pushStack(p.merge(this, a), "after", this.selector)
            }
        },
        remove: function(a, b) {
            var c, d = 0;
            for (; (c = this[d]) != null; d++)
                if (!a || p.filter(a, [c]).length)
                    !b && c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")),
                    p.cleanData([c])),
                    c.parentNode && c.parentNode.removeChild(c);
            return this
        },
        empty: function() {
            var a, b = 0;
            for (; (a = this[b]) != null; b++) {
                a.nodeType === 1 && p.cleanData(a.getElementsByTagName("*"));
                while (a.firstChild)
                    a.removeChild(a.firstChild)
            }
            return this
        },
        clone: function(a, b) {
            return a = a == null ? !1 : a,
            b = b == null ? a : b,
            this.map(function() {
                return p.clone(this, a, b)
            })
        },
        html: function(a) {
            return p.access(this, function(a) {
                var c = this[0] || {}
                  , d = 0
                  , e = this.length;
                if (a === b)
                    return c.nodeType === 1 ? c.innerHTML.replace(bm, "") : b;
                if (typeof a == "string" && !bs.test(a) && (p.support.htmlSerialize || !bu.test(a)) && (p.support.leadingWhitespace || !bn.test(a)) && !bz[(bp.exec(a) || ["", ""])[1].toLowerCase()]) {
                    a = a.replace(bo, "<$1></$2>");
                    try {
                        for (; d < e; d++)
                            c = this[d] || {},
                            c.nodeType === 1 && (p.cleanData(c.getElementsByTagName("*")),
                            c.innerHTML = a);
                        c = 0
                    } catch (f) {}
                }
                c && this.empty().append(a)
            }, null, a, arguments.length)
        },
        replaceWith: function(a) {
            return bh(this[0]) ? this.length ? this.pushStack(p(p.isFunction(a) ? a() : a), "replaceWith", a) : this : p.isFunction(a) ? this.each(function(b) {
                var c = p(this)
                  , d = c.html();
                c.replaceWith(a.call(this, b, d))
            }) : (typeof a != "string" && (a = p(a).detach()),
            this.each(function() {
                var b = this.nextSibling
                  , c = this.parentNode;
                p(this).remove(),
                b ? p(b).before(a) : p(c).append(a)
            }))
        },
        detach: function(a) {
            return this.remove(a, !0)
        },
        domManip: function(a, c, d) {
            a = [].concat.apply([], a);
            var e, f, g, h, i = 0, j = a[0], k = [], l = this.length;
            if (!p.support.checkClone && l > 1 && typeof j == "string" && bw.test(j))
                return this.each(function() {
                    p(this).domManip(a, c, d)
                });
            if (p.isFunction(j))
                return this.each(function(e) {
                    var f = p(this);
                    a[0] = j.call(this, e, c ? f.html() : b),
                    f.domManip(a, c, d)
                });
            if (this[0]) {
                e = p.buildFragment(a, this, k),
                g = e.fragment,
                f = g.firstChild,
                g.childNodes.length === 1 && (g = f);
                if (f) {
                    c = c && p.nodeName(f, "tr");
                    for (h = e.cacheable || l - 1; i < l; i++)
                        d.call(c && p.nodeName(this[i], "table") ? bC(this[i], "tbody") : this[i], i === h ? g : p.clone(g, !0, !0))
                }
                g = f = null,
                k.length && p.each(k, function(a, b) {
                    b.src ? p.ajax ? p.ajax({
                        url: b.src,
                        type: "GET",
                        dataType: "script",
                        async: !1,
                        global: !1,
                        "throws": !0
                    }) : p.error("no ajax") : p.globalEval((b.text || b.textContent || b.innerHTML || "").replace(by, "")),
                    b.parentNode && b.parentNode.removeChild(b)
                })
            }
            return this
        }
    }),
    p.buildFragment = function(a, c, d) {
        var f, g, h, i = a[0];
        return c = c || e,
        c = !c.nodeType && c[0] || c,
        c = c.ownerDocument || c,
        a.length === 1 && typeof i == "string" && i.length < 512 && c === e && i.charAt(0) === "<" && !bt.test(i) && (p.support.checkClone || !bw.test(i)) && (p.support.html5Clone || !bu.test(i)) && (g = !0,
        f = p.fragments[i],
        h = f !== b),
        f || (f = c.createDocumentFragment(),
        p.clean(a, c, f, d),
        g && (p.fragments[i] = h && f)),
        {
            fragment: f,
            cacheable: g
        }
    }
    ,
    p.fragments = {},
    p.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(a, b) {
        p.fn[a] = function(c) {
            var d, e = 0, f = [], g = p(c), h = g.length, i = this.length === 1 && this[0].parentNode;
            if ((i == null || i && i.nodeType === 11 && i.childNodes.length === 1) && h === 1)
                return g[b](this[0]),
                this;
            for (; e < h; e++)
                d = (e > 0 ? this.clone(!0) : this).get(),
                p(g[e])[b](d),
                f = f.concat(d);
            return this.pushStack(f, a, g.selector)
        }
    }),
    p.extend({
        clone: function(a, b, c) {
            var d, e, f, g;
            p.support.html5Clone || p.isXMLDoc(a) || !bu.test("<" + a.nodeName + ">") ? g = a.cloneNode(!0) : (bB.innerHTML = a.outerHTML,
            bB.removeChild(g = bB.firstChild));
            if ((!p.support.noCloneEvent || !p.support.noCloneChecked) && (a.nodeType === 1 || a.nodeType === 11) && !p.isXMLDoc(a)) {
                bE(a, g),
                d = bF(a),
                e = bF(g);
                for (f = 0; d[f]; ++f)
                    e[f] && bE(d[f], e[f])
            }
            if (b) {
                bD(a, g);
                if (c) {
                    d = bF(a),
                    e = bF(g);
                    for (f = 0; d[f]; ++f)
                        bD(d[f], e[f])
                }
            }
            return d = e = null,
            g
        },
        clean: function(a, b, c, d) {
            var f, g, h, i, j, k, l, m, n, o, q, r, s = b === e && bA, t = [];
            if (!b || typeof b.createDocumentFragment == "undefined")
                b = e;
            for (f = 0; (h = a[f]) != null; f++) {
                typeof h == "number" && (h += "");
                if (!h)
                    continue;
                if (typeof h == "string")
                    if (!br.test(h))
                        h = b.createTextNode(h);
                    else {
                        s = s || bk(b),
                        l = b.createElement("div"),
                        s.appendChild(l),
                        h = h.replace(bo, "<$1></$2>"),
                        i = (bp.exec(h) || ["", ""])[1].toLowerCase(),
                        j = bz[i] || bz._default,
                        k = j[0],
                        l.innerHTML = j[1] + h + j[2];
                        while (k--)
                            l = l.lastChild;
                        if (!p.support.tbody) {
                            m = bq.test(h),
                            n = i === "table" && !m ? l.firstChild && l.firstChild.childNodes : j[1] === "<table>" && !m ? l.childNodes : [];
                            for (g = n.length - 1; g >= 0; --g)
                                p.nodeName(n[g], "tbody") && !n[g].childNodes.length && n[g].parentNode.removeChild(n[g])
                        }
                        !p.support.leadingWhitespace && bn.test(h) && l.insertBefore(b.createTextNode(bn.exec(h)[0]), l.firstChild),
                        h = l.childNodes,
                        l.parentNode.removeChild(l)
                    }
                h.nodeType ? t.push(h) : p.merge(t, h)
            }
            l && (h = l = s = null);
            if (!p.support.appendChecked)
                for (f = 0; (h = t[f]) != null; f++)
                    p.nodeName(h, "input") ? bG(h) : typeof h.getElementsByTagName != "undefined" && p.grep(h.getElementsByTagName("input"), bG);
            if (c) {
                q = function(a) {
                    if (!a.type || bx.test(a.type))
                        return d ? d.push(a.parentNode ? a.parentNode.removeChild(a) : a) : c.appendChild(a)
                }
                ;
                for (f = 0; (h = t[f]) != null; f++)
                    if (!p.nodeName(h, "script") || !q(h))
                        c.appendChild(h),
                        typeof h.getElementsByTagName != "undefined" && (r = p.grep(p.merge([], h.getElementsByTagName("script")), q),
                        t.splice.apply(t, [f + 1, 0].concat(r)),
                        f += r.length)
            }
            return t
        },
        cleanData: function(a, b) {
            var c, d, e, f, g = 0, h = p.expando, i = p.cache, j = p.support.deleteExpando, k = p.event.special;
            for (; (e = a[g]) != null; g++)
                if (b || p.acceptData(e)) {
                    d = e[h],
                    c = d && i[d];
                    if (c) {
                        if (c.events)
                            for (f in c.events)
                                k[f] ? p.event.remove(e, f) : p.removeEvent(e, f, c.handle);
                        i[d] && (delete i[d],
                        j ? delete e[h] : e.removeAttribute ? e.removeAttribute(h) : e[h] = null,
                        p.deletedIds.push(d))
                    }
                }
        }
    }),
    function() {
        var a, b;
        p.uaMatch = function(a) {
            a = a.toLowerCase();
            var b = /(chrome)[ \/]([\w.]+)/.exec(a) || /(webkit)[ \/]([\w.]+)/.exec(a) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a) || /(msie) ([\w.]+)/.exec(a) || a.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a) || [];
            return {
                browser: b[1] || "",
                version: b[2] || "0"
            }
        }
        ,
        a = p.uaMatch(g.userAgent),
        b = {},
        a.browser && (b[a.browser] = !0,
        b.version = a.version),
        b.chrome ? b.webkit = !0 : b.webkit && (b.safari = !0),
        p.browser = b,
        p.sub = function() {
            function a(b, c) {
                return new a.fn.init(b,c)
            }
            p.extend(!0, a, this),
            a.superclass = this,
            a.fn = a.prototype = this(),
            a.fn.constructor = a,
            a.sub = this.sub,
            a.fn.init = function c(c, d) {
                return d && d instanceof p && !(d instanceof a) && (d = a(d)),
                p.fn.init.call(this, c, d, b)
            }
            ,
            a.fn.init.prototype = a.fn;
            var b = a(e);
            return a
        }
    }();
    var bH, bI, bJ, bK = /alpha\([^)]*\)/i, bL = /opacity=([^)]*)/, bM = /^(top|right|bottom|left)$/, bN = /^(none|table(?!-c[ea]).+)/, bO = /^margin/, bP = new RegExp("^(" + q + ")(.*)$","i"), bQ = new RegExp("^(" + q + ")(?!px)[a-z%]+$","i"), bR = new RegExp("^([-+])=(" + q + ")","i"), bS = {}, bT = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, bU = {
        letterSpacing: 0,
        fontWeight: 400
    }, bV = ["Top", "Right", "Bottom", "Left"], bW = ["Webkit", "O", "Moz", "ms"], bX = p.fn.toggle;
    p.fn.extend({
        css: function(a, c) {
            return p.access(this, function(a, c, d) {
                return d !== b ? p.style(a, c, d) : p.css(a, c)
            }, a, c, arguments.length > 1)
        },
        show: function() {
            return b$(this, !0)
        },
        hide: function() {
            return b$(this)
        },
        toggle: function(a, b) {
            var c = typeof a == "boolean";
            return p.isFunction(a) && p.isFunction(b) ? bX.apply(this, arguments) : this.each(function() {
                (c ? a : bZ(this)) ? p(this).show() : p(this).hide()
            })
        }
    }),
    p.extend({
        cssHooks: {
            opacity: {
                get: function(a, b) {
                    if (b) {
                        var c = bH(a, "opacity");
                        return c === "" ? "1" : c
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": p.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(a, c, d, e) {
            if (!a || a.nodeType === 3 || a.nodeType === 8 || !a.style)
                return;
            var f, g, h, i = p.camelCase(c), j = a.style;
            c = p.cssProps[i] || (p.cssProps[i] = bY(j, i)),
            h = p.cssHooks[c] || p.cssHooks[i];
            if (d === b)
                return h && "get"in h && (f = h.get(a, !1, e)) !== b ? f : j[c];
            g = typeof d,
            g === "string" && (f = bR.exec(d)) && (d = (f[1] + 1) * f[2] + parseFloat(p.css(a, c)),
            g = "number");
            if (d == null || g === "number" && isNaN(d))
                return;
            g === "number" && !p.cssNumber[i] && (d += "px");
            if (!h || !("set"in h) || (d = h.set(a, d, e)) !== b)
                try {
                    j[c] = d
                } catch (k) {}
        },
        css: function(a, c, d, e) {
            var f, g, h, i = p.camelCase(c);
            return c = p.cssProps[i] || (p.cssProps[i] = bY(a.style, i)),
            h = p.cssHooks[c] || p.cssHooks[i],
            h && "get"in h && (f = h.get(a, !0, e)),
            f === b && (f = bH(a, c)),
            f === "normal" && c in bU && (f = bU[c]),
            d || e !== b ? (g = parseFloat(f),
            d || p.isNumeric(g) ? g || 0 : f) : f
        },
        swap: function(a, b, c) {
            var d, e, f = {};
            for (e in b)
                f[e] = a.style[e],
                a.style[e] = b[e];
            d = c.call(a);
            for (e in b)
                a.style[e] = f[e];
            return d
        }
    }),
    a.getComputedStyle ? bH = function(b, c) {
        var d, e, f, g, h = a.getComputedStyle(b, null), i = b.style;
        return h && (d = h[c],
        d === "" && !p.contains(b.ownerDocument, b) && (d = p.style(b, c)),
        bQ.test(d) && bO.test(c) && (e = i.width,
        f = i.minWidth,
        g = i.maxWidth,
        i.minWidth = i.maxWidth = i.width = d,
        d = h.width,
        i.width = e,
        i.minWidth = f,
        i.maxWidth = g)),
        d
    }
    : e.documentElement.currentStyle && (bH = function(a, b) {
        var c, d, e = a.currentStyle && a.currentStyle[b], f = a.style;
        return e == null && f && f[b] && (e = f[b]),
        bQ.test(e) && !bM.test(b) && (c = f.left,
        d = a.runtimeStyle && a.runtimeStyle.left,
        d && (a.runtimeStyle.left = a.currentStyle.left),
        f.left = b === "fontSize" ? "1em" : e,
        e = f.pixelLeft + "px",
        f.left = c,
        d && (a.runtimeStyle.left = d)),
        e === "" ? "auto" : e
    }
    ),
    p.each(["height", "width"], function(a, b) {
        p.cssHooks[b] = {
            get: function(a, c, d) {
                if (c)
                    return a.offsetWidth === 0 && bN.test(bH(a, "display")) ? p.swap(a, bT, function() {
                        return cb(a, b, d)
                    }) : cb(a, b, d)
            },
            set: function(a, c, d) {
                return b_(a, c, d ? ca(a, b, d, p.support.boxSizing && p.css(a, "boxSizing") === "border-box") : 0)
            }
        }
    }),
    p.support.opacity || (p.cssHooks.opacity = {
        get: function(a, b) {
            return bL.test((b && a.currentStyle ? a.currentStyle.filter : a.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : b ? "1" : ""
        },
        set: function(a, b) {
            var c = a.style
              , d = a.currentStyle
              , e = p.isNumeric(b) ? "alpha(opacity=" + b * 100 + ")" : ""
              , f = d && d.filter || c.filter || "";
            c.zoom = 1;
            if (b >= 1 && p.trim(f.replace(bK, "")) === "" && c.removeAttribute) {
                c.removeAttribute("filter");
                if (d && !d.filter)
                    return
            }
            c.filter = bK.test(f) ? f.replace(bK, e) : f + " " + e
        }
    }),
    p(function() {
        p.support.reliableMarginRight || (p.cssHooks.marginRight = {
            get: function(a, b) {
                return p.swap(a, {
                    display: "inline-block"
                }, function() {
                    if (b)
                        return bH(a, "marginRight")
                })
            }
        }),
        !p.support.pixelPosition && p.fn.position && p.each(["top", "left"], function(a, b) {
            p.cssHooks[b] = {
                get: function(a, c) {
                    if (c) {
                        var d = bH(a, b);
                        return bQ.test(d) ? p(a).position()[b] + "px" : d
                    }
                }
            }
        })
    }),
    p.expr && p.expr.filters && (p.expr.filters.hidden = function(a) {
        return a.offsetWidth === 0 && a.offsetHeight === 0 || !p.support.reliableHiddenOffsets && (a.style && a.style.display || bH(a, "display")) === "none"
    }
    ,
    p.expr.filters.visible = function(a) {
        return !p.expr.filters.hidden(a)
    }
    ),
    p.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(a, b) {
        p.cssHooks[a + b] = {
            expand: function(c) {
                var d, e = typeof c == "string" ? c.split(" ") : [c], f = {};
                for (d = 0; d < 4; d++)
                    f[a + bV[d] + b] = e[d] || e[d - 2] || e[0];
                return f
            }
        },
        bO.test(a) || (p.cssHooks[a + b].set = b_)
    });
    var cd = /%20/g
      , ce = /\[\]$/
      , cf = /\r?\n/g
      , cg = /^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i
      , ch = /^(?:select|textarea)/i;
    p.fn.extend({
        serialize: function() {
            return p.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? p.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || ch.test(this.nodeName) || cg.test(this.type))
            }).map(function(a, b) {
                var c = p(this).val();
                return c == null ? null : p.isArray(c) ? p.map(c, function(a, c) {
                    return {
                        name: b.name,
                        value: a.replace(cf, "\r\n")
                    }
                }) : {
                    name: b.name,
                    value: c.replace(cf, "\r\n")
                }
            }).get()
        }
    }),
    p.param = function(a, c) {
        var d, e = [], f = function(a, b) {
            b = p.isFunction(b) ? b() : b == null ? "" : b,
            e[e.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b)
        };
        c === b && (c = p.ajaxSettings && p.ajaxSettings.traditional);
        if (p.isArray(a) || a.jquery && !p.isPlainObject(a))
            p.each(a, function() {
                f(this.name, this.value)
            });
        else
            for (d in a)
                ci(d, a[d], c, f);
        return e.join("&").replace(cd, "+")
    }
    ;
    var cj, ck, cl = /#.*$/, cm = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, cn = /^(?:about|app|app\-storage|.+\-extension|file|res|widget):$/, co = /^(?:GET|HEAD)$/, cp = /^\/\//, cq = /\?/, cr = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, cs = /([?&])_=[^&]*/, ct = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, cu = p.fn.load, cv = {}, cw = {}, cx = ["*/"] + ["*"];
    try {
        ck = f.href
    } catch (cy) {
        ck = e.createElement("a"),
        ck.href = "",
        ck = ck.href
    }
    cj = ct.exec(ck.toLowerCase()) || [],
    p.fn.load = function(a, c, d) {
        if (typeof a != "string" && cu)
            return cu.apply(this, arguments);
        if (!this.length)
            return this;
        var e, f, g, h = this, i = a.indexOf(" ");
        return i >= 0 && (e = a.slice(i, a.length),
        a = a.slice(0, i)),
        p.isFunction(c) ? (d = c,
        c = b) : c && typeof c == "object" && (f = "POST"),
        p.ajax({
            url: a,
            type: f,
            dataType: "html",
            data: c,
            complete: function(a, b) {
                d && h.each(d, g || [a.responseText, b, a])
            }
        }).done(function(a) {
            g = arguments,
            h.html(e ? p("<div>").append(a.replace(cr, "")).find(e) : a)
        }),
        this
    }
    ,
    p.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(a, b) {
        p.fn[b] = function(a) {
            return this.on(b, a)
        }
    }),
    p.each(["get", "post"], function(a, c) {
        p[c] = function(a, d, e, f) {
            return p.isFunction(d) && (f = f || e,
            e = d,
            d = b),
            p.ajax({
                type: c,
                url: a,
                data: d,
                success: e,
                dataType: f
            })
        }
    }),
    p.extend({
        getScript: function(a, c) {
            return p.get(a, b, c, "script")
        },
        getJSON: function(a, b, c) {
            return p.get(a, b, c, "json")
        },
        ajaxSetup: function(a, b) {
            return b ? cB(a, p.ajaxSettings) : (b = a,
            a = p.ajaxSettings),
            cB(a, b),
            a
        },
        ajaxSettings: {
            url: ck,
            isLocal: cn.test(cj[1]),
            global: !0,
            type: "GET",
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            processData: !0,
            async: !0,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": cx
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": a.String,
                "text html": !0,
                "text json": p.parseJSON,
                "text xml": p.parseXML
            },
            flatOptions: {
                context: !0,
                url: !0
            }
        },
        ajaxPrefilter: cz(cv),
        ajaxTransport: cz(cw),
        ajax: function(a, c) {
            function y(a, c, f, i) {
                var k, s, t, u, w, y = c;
                if (v === 2)
                    return;
                v = 2,
                h && clearTimeout(h),
                g = b,
                e = i || "",
                x.readyState = a > 0 ? 4 : 0,
                f && (u = cC(l, x, f));
                if (a >= 200 && a < 300 || a === 304)
                    l.ifModified && (w = x.getResponseHeader("Last-Modified"),
                    w && (p.lastModified[d] = w),
                    w = x.getResponseHeader("Etag"),
                    w && (p.etag[d] = w)),
                    a === 304 ? (y = "notmodified",
                    k = !0) : (k = cD(l, u),
                    y = k.state,
                    s = k.data,
                    t = k.error,
                    k = !t);
                else {
                    t = y;
                    if (!y || a)
                        y = "error",
                        a < 0 && (a = 0)
                }
                x.status = a,
                x.statusText = (c || y) + "",
                k ? o.resolveWith(m, [s, y, x]) : o.rejectWith(m, [x, y, t]),
                x.statusCode(r),
                r = b,
                j && n.trigger("ajax" + (k ? "Success" : "Error"), [x, l, k ? s : t]),
                q.fireWith(m, [x, y]),
                j && (n.trigger("ajaxComplete", [x, l]),
                --p.active || p.event.trigger("ajaxStop"))
            }
            typeof a == "object" && (c = a,
            a = b),
            c = c || {};
            var d, e, f, g, h, i, j, k, l = p.ajaxSetup({}, c), m = l.context || l, n = m !== l && (m.nodeType || m instanceof p) ? p(m) : p.event, o = p.Deferred(), q = p.Callbacks("once memory"), r = l.statusCode || {}, t = {}, u = {}, v = 0, w = "canceled", x = {
                readyState: 0,
                setRequestHeader: function(a, b) {
                    if (!v) {
                        var c = a.toLowerCase();
                        a = u[c] = u[c] || a,
                        t[a] = b
                    }
                    return this
                },
                getAllResponseHeaders: function() {
                    return v === 2 ? e : null
                },
                getResponseHeader: function(a) {
                    var c;
                    if (v === 2) {
                        if (!f) {
                            f = {};
                            while (c = cm.exec(e))
                                f[c[1].toLowerCase()] = c[2]
                        }
                        c = f[a.toLowerCase()]
                    }
                    return c === b ? null : c
                },
                overrideMimeType: function(a) {
                    return v || (l.mimeType = a),
                    this
                },
                abort: function(a) {
                    return a = a || w,
                    g && g.abort(a),
                    y(0, a),
                    this
                }
            };
            o.promise(x),
            x.success = x.done,
            x.error = x.fail,
            x.complete = q.add,
            x.statusCode = function(a) {
                if (a) {
                    var b;
                    if (v < 2)
                        for (b in a)
                            r[b] = [r[b], a[b]];
                    else
                        b = a[x.status],
                        x.always(b)
                }
                return this
            }
            ,
            l.url = ((a || l.url) + "").replace(cl, "").replace(cp, cj[1] + "//"),
            l.dataTypes = p.trim(l.dataType || "*").toLowerCase().split(s),
            l.crossDomain == null && (i = ct.exec(l.url.toLowerCase()) || !1,
            l.crossDomain = i && i.join(":") + (i[3] ? "" : i[1] === "http:" ? 80 : 443) !== cj.join(":") + (cj[3] ? "" : cj[1] === "http:" ? 80 : 443)),
            l.data && l.processData && typeof l.data != "string" && (l.data = p.param(l.data, l.traditional)),
            cA(cv, l, c, x);
            if (v === 2)
                return x;
            j = l.global,
            l.type = l.type.toUpperCase(),
            l.hasContent = !co.test(l.type),
            j && p.active++ === 0 && p.event.trigger("ajaxStart");
            if (!l.hasContent) {
                l.data && (l.url += (cq.test(l.url) ? "&" : "?") + l.data,
                delete l.data),
                d = l.url;
                if (l.cache === !1) {
                    var z = p.now()
                      , A = l.url.replace(cs, "$1_=" + z);
                    l.url = A + (A === l.url ? (cq.test(l.url) ? "&" : "?") + "_=" + z : "")
                }
            }
            (l.data && l.hasContent && l.contentType !== !1 || c.contentType) && x.setRequestHeader("Content-Type", l.contentType),
            l.ifModified && (d = d || l.url,
            p.lastModified[d] && x.setRequestHeader("If-Modified-Since", p.lastModified[d]),
            p.etag[d] && x.setRequestHeader("If-None-Match", p.etag[d])),
            x.setRequestHeader("Accept", l.dataTypes[0] && l.accepts[l.dataTypes[0]] ? l.accepts[l.dataTypes[0]] + (l.dataTypes[0] !== "*" ? ", " + cx + "; q=0.01" : "") : l.accepts["*"]);
            for (k in l.headers)
                x.setRequestHeader(k, l.headers[k]);
            if (!l.beforeSend || l.beforeSend.call(m, x, l) !== !1 && v !== 2) {
                w = "abort";
                for (k in {
                    success: 1,
                    error: 1,
                    complete: 1
                })
                    x[k](l[k]);
                g = cA(cw, l, c, x);
                if (!g)
                    y(-1, "No Transport");
                else {
                    x.readyState = 1,
                    j && n.trigger("ajaxSend", [x, l]),
                    l.async && l.timeout > 0 && (h = setTimeout(function() {
                        x.abort("timeout")
                    }, l.timeout));
                    try {
                        v = 1,
                        g.send(t, y)
                    } catch (B) {
                        if (v < 2)
                            y(-1, B);
                        else
                            throw B
                    }
                }
                return x
            }
            return x.abort()
        },
        active: 0,
        lastModified: {},
        etag: {}
    });
    var cE = []
      , cF = /\?/
      , cG = /(=)\?(?=&|$)|\?\?/
      , cH = p.now();
    p.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var a = cE.pop() || p.expando + "_" + cH++;
            return this[a] = !0,
            a
        }
    }),
    p.ajaxPrefilter("json jsonp", function(c, d, e) {
        var f, g, h, i = c.data, j = c.url, k = c.jsonp !== !1, l = k && cG.test(j), m = k && !l && typeof i == "string" && !(c.contentType || "").indexOf("application/x-www-form-urlencoded") && cG.test(i);
        if (c.dataTypes[0] === "jsonp" || l || m)
            return f = c.jsonpCallback = p.isFunction(c.jsonpCallback) ? c.jsonpCallback() : c.jsonpCallback,
            g = a[f],
            l ? c.url = j.replace(cG, "$1" + f) : m ? c.data = i.replace(cG, "$1" + f) : k && (c.url += (cF.test(j) ? "&" : "?") + c.jsonp + "=" + f),
            c.converters["script json"] = function() {
                return h || p.error(f + " was not called"),
                h[0]
            }
            ,
            c.dataTypes[0] = "json",
            a[f] = function() {
                h = arguments
            }
            ,
            e.always(function() {
                a[f] = g,
                c[f] && (c.jsonpCallback = d.jsonpCallback,
                cE.push(f)),
                h && p.isFunction(g) && g(h[0]),
                h = g = b
            }),
            "script"
    }),
    p.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(a) {
                return p.globalEval(a),
                a
            }
        }
    }),
    p.ajaxPrefilter("script", function(a) {
        a.cache === b && (a.cache = !1),
        a.crossDomain && (a.type = "GET",
        a.global = !1)
    }),
    p.ajaxTransport("script", function(a) {
        if (a.crossDomain) {
            var c, d = e.head || e.getElementsByTagName("head")[0] || e.documentElement;
            return {
                send: function(f, g) {
                    c = e.createElement("script"),
                    c.async = "async",
                    a.scriptCharset && (c.charset = a.scriptCharset),
                    c.src = a.url,
                    c.onload = c.onreadystatechange = function(a, e) {
                        if (e || !c.readyState || /loaded|complete/.test(c.readyState))
                            c.onload = c.onreadystatechange = null,
                            d && c.parentNode && d.removeChild(c),
                            c = b,
                            e || g(200, "success")
                    }
                    ,
                    d.insertBefore(c, d.firstChild)
                },
                abort: function() {
                    c && c.onload(0, 1)
                }
            }
        }
    });
    var cI, cJ = a.ActiveXObject ? function() {
        for (var a in cI)
            cI[a](0, 1)
    }
    : !1, cK = 0;
    p.ajaxSettings.xhr = a.ActiveXObject ? function() {
        return !this.isLocal && cL() || cM()
    }
    : cL,
    function(a) {
        p.extend(p.support, {
            ajax: !!a,
            cors: !!a && "withCredentials"in a
        })
    }(p.ajaxSettings.xhr()),
    p.support.ajax && p.ajaxTransport(function(c) {
        if (!c.crossDomain || p.support.cors) {
            var d;
            return {
                send: function(e, f) {
                    var g, h, i = c.xhr();
                    c.username ? i.open(c.type, c.url, c.async, c.username, c.password) : i.open(c.type, c.url, c.async);
                    if (c.xhrFields)
                        for (h in c.xhrFields)
                            i[h] = c.xhrFields[h];
                    c.mimeType && i.overrideMimeType && i.overrideMimeType(c.mimeType),
                    !c.crossDomain && !e["X-Requested-With"] && (e["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (h in e)
                            i.setRequestHeader(h, e[h])
                    } catch (j) {}
                    i.send(c.hasContent && c.data || null),
                    d = function(a, e) {
                        var h, j, k, l, m;
                        try {
                            if (d && (e || i.readyState === 4)) {
                                d = b,
                                g && (i.onreadystatechange = p.noop,
                                cJ && delete cI[g]);
                                if (e)
                                    i.readyState !== 4 && i.abort();
                                else {
                                    h = i.status,
                                    k = i.getAllResponseHeaders(),
                                    l = {},
                                    m = i.responseXML,
                                    m && m.documentElement && (l.xml = m);
                                    try {
                                        l.text = i.responseText
                                    } catch (a) {}
                                    try {
                                        j = i.statusText
                                    } catch (n) {
                                        j = ""
                                    }
                                    !h && c.isLocal && !c.crossDomain ? h = l.text ? 200 : 404 : h === 1223 && (h = 204)
                                }
                            }
                        } catch (o) {
                            e || f(-1, o)
                        }
                        l && f(h, j, l, k)
                    }
                    ,
                    c.async ? i.readyState === 4 ? setTimeout(d, 0) : (g = ++cK,
                    cJ && (cI || (cI = {},
                    p(a).unload(cJ)),
                    cI[g] = d),
                    i.onreadystatechange = d) : d()
                },
                abort: function() {
                    d && d(0, 1)
                }
            }
        }
    });
    var cN, cO, cP = /^(?:toggle|show|hide)$/, cQ = new RegExp("^(?:([-+])=|)(" + q + ")([a-z%]*)$","i"), cR = /queueHooks$/, cS = [cY], cT = {
        "*": [function(a, b) {
            var c, d, e = this.createTween(a, b), f = cQ.exec(b), g = e.cur(), h = +g || 0, i = 1, j = 20;
            if (f) {
                c = +f[2],
                d = f[3] || (p.cssNumber[a] ? "" : "px");
                if (d !== "px" && h) {
                    h = p.css(e.elem, a, !0) || c || 1;
                    do
                        i = i || ".5",
                        h = h / i,
                        p.style(e.elem, a, h + d);
                    while (i !== (i = e.cur() / g) && i !== 1 && --j)
                }
                e.unit = d,
                e.start = h,
                e.end = f[1] ? h + (f[1] + 1) * c : c
            }
            return e
        }
        ]
    };
    p.Animation = p.extend(cW, {
        tweener: function(a, b) {
            p.isFunction(a) ? (b = a,
            a = ["*"]) : a = a.split(" ");
            var c, d = 0, e = a.length;
            for (; d < e; d++)
                c = a[d],
                cT[c] = cT[c] || [],
                cT[c].unshift(b)
        },
        prefilter: function(a, b) {
            b ? cS.unshift(a) : cS.push(a)
        }
    }),
    p.Tween = cZ,
    cZ.prototype = {
        constructor: cZ,
        init: function(a, b, c, d, e, f) {
            this.elem = a,
            this.prop = c,
            this.easing = e || "swing",
            this.options = b,
            this.start = this.now = this.cur(),
            this.end = d,
            this.unit = f || (p.cssNumber[c] ? "" : "px")
        },
        cur: function() {
            var a = cZ.propHooks[this.prop];
            return a && a.get ? a.get(this) : cZ.propHooks._default.get(this)
        },
        run: function(a) {
            var b, c = cZ.propHooks[this.prop];
            return this.options.duration ? this.pos = b = p.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a,
            this.now = (this.end - this.start) * b + this.start,
            this.options.step && this.options.step.call(this.elem, this.now, this),
            c && c.set ? c.set(this) : cZ.propHooks._default.set(this),
            this
        }
    },
    cZ.prototype.init.prototype = cZ.prototype,
    cZ.propHooks = {
        _default: {
            get: function(a) {
                var b;
                return a.elem[a.prop] == null || !!a.elem.style && a.elem.style[a.prop] != null ? (b = p.css(a.elem, a.prop, !1, ""),
                !b || b === "auto" ? 0 : b) : a.elem[a.prop]
            },
            set: function(a) {
                p.fx.step[a.prop] ? p.fx.step[a.prop](a) : a.elem.style && (a.elem.style[p.cssProps[a.prop]] != null || p.cssHooks[a.prop]) ? p.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now
            }
        }
    },
    cZ.propHooks.scrollTop = cZ.propHooks.scrollLeft = {
        set: function(a) {
            a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)
        }
    },
    p.each(["toggle", "show", "hide"], function(a, b) {
        var c = p.fn[b];
        p.fn[b] = function(d, e, f) {
            return d == null || typeof d == "boolean" || !a && p.isFunction(d) && p.isFunction(e) ? c.apply(this, arguments) : this.animate(c$(b, !0), d, e, f)
        }
    }),
    p.fn.extend({
        fadeTo: function(a, b, c, d) {
            return this.filter(bZ).css("opacity", 0).show().end().animate({
                opacity: b
            }, a, c, d)
        },
        animate: function(a, b, c, d) {
            var e = p.isEmptyObject(a)
              , f = p.speed(b, c, d)
              , g = function() {
                var b = cW(this, p.extend({}, a), f);
                e && b.stop(!0)
            };
            return e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g)
        },
        stop: function(a, c, d) {
            var e = function(a) {
                var b = a.stop;
                delete a.stop,
                b(d)
            };
            return typeof a != "string" && (d = c,
            c = a,
            a = b),
            c && a !== !1 && this.queue(a || "fx", []),
            this.each(function() {
                var b = !0
                  , c = a != null && a + "queueHooks"
                  , f = p.timers
                  , g = p._data(this);
                if (c)
                    g[c] && g[c].stop && e(g[c]);
                else
                    for (c in g)
                        g[c] && g[c].stop && cR.test(c) && e(g[c]);
                for (c = f.length; c--; )
                    f[c].elem === this && (a == null || f[c].queue === a) && (f[c].anim.stop(d),
                    b = !1,
                    f.splice(c, 1));
                (b || !d) && p.dequeue(this, a)
            })
        }
    }),
    p.each({
        slideDown: c$("show"),
        slideUp: c$("hide"),
        slideToggle: c$("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(a, b) {
        p.fn[a] = function(a, c, d) {
            return this.animate(b, a, c, d)
        }
    }),
    p.speed = function(a, b, c) {
        var d = a && typeof a == "object" ? p.extend({}, a) : {
            complete: c || !c && b || p.isFunction(a) && a,
            duration: a,
            easing: c && b || b && !p.isFunction(b) && b
        };
        d.duration = p.fx.off ? 0 : typeof d.duration == "number" ? d.duration : d.duration in p.fx.speeds ? p.fx.speeds[d.duration] : p.fx.speeds._default;
        if (d.queue == null || d.queue === !0)
            d.queue = "fx";
        return d.old = d.complete,
        d.complete = function() {
            p.isFunction(d.old) && d.old.call(this),
            d.queue && p.dequeue(this, d.queue)
        }
        ,
        d
    }
    ,
    p.easing = {
        linear: function(a) {
            return a
        },
        swing: function(a) {
            return .5 - Math.cos(a * Math.PI) / 2
        }
    },
    p.timers = [],
    p.fx = cZ.prototype.init,
    p.fx.tick = function() {
        var a, b = p.timers, c = 0;
        for (; c < b.length; c++)
            a = b[c],
            !a() && b[c] === a && b.splice(c--, 1);
        b.length || p.fx.stop()
    }
    ,
    p.fx.timer = function(a) {
        a() && p.timers.push(a) && !cO && (cO = setInterval(p.fx.tick, p.fx.interval))
    }
    ,
    p.fx.interval = 13,
    p.fx.stop = function() {
        clearInterval(cO),
        cO = null
    }
    ,
    p.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    },
    p.fx.step = {},
    p.expr && p.expr.filters && (p.expr.filters.animated = function(a) {
        return p.grep(p.timers, function(b) {
            return a === b.elem
        }).length
    }
    );
    var c_ = /^(?:body|html)$/i;
    p.fn.offset = function(a) {
        if (arguments.length)
            return a === b ? this : this.each(function(b) {
                p.offset.setOffset(this, a, b)
            });
        var c, d, e, f, g, h, i, j = {
            top: 0,
            left: 0
        }, k = this[0], l = k && k.ownerDocument;
        if (!l)
            return;
        return (d = l.body) === k ? p.offset.bodyOffset(k) : (c = l.documentElement,
        p.contains(c, k) ? (typeof k.getBoundingClientRect != "undefined" && (j = k.getBoundingClientRect()),
        e = da(l),
        f = c.clientTop || d.clientTop || 0,
        g = c.clientLeft || d.clientLeft || 0,
        h = e.pageYOffset || c.scrollTop,
        i = e.pageXOffset || c.scrollLeft,
        {
            top: j.top + h - f,
            left: j.left + i - g
        }) : j)
    }
    ,
    p.offset = {
        bodyOffset: function(a) {
            var b = a.offsetTop
              , c = a.offsetLeft;
            return p.support.doesNotIncludeMarginInBodyOffset && (b += parseFloat(p.css(a, "marginTop")) || 0,
            c += parseFloat(p.css(a, "marginLeft")) || 0),
            {
                top: b,
                left: c
            }
        },
        setOffset: function(a, b, c) {
            var d = p.css(a, "position");
            d === "static" && (a.style.position = "relative");
            var e = p(a), f = e.offset(), g = p.css(a, "top"), h = p.css(a, "left"), i = (d === "absolute" || d === "fixed") && p.inArray("auto", [g, h]) > -1, j = {}, k = {}, l, m;
            i ? (k = e.position(),
            l = k.top,
            m = k.left) : (l = parseFloat(g) || 0,
            m = parseFloat(h) || 0),
            p.isFunction(b) && (b = b.call(a, c, f)),
            b.top != null && (j.top = b.top - f.top + l),
            b.left != null && (j.left = b.left - f.left + m),
            "using"in b ? b.using.call(a, j) : e.css(j)
        }
    },
    p.fn.extend({
        position: function() {
            if (!this[0])
                return;
            var a = this[0]
              , b = this.offsetParent()
              , c = this.offset()
              , d = c_.test(b[0].nodeName) ? {
                top: 0,
                left: 0
            } : b.offset();
            return c.top -= parseFloat(p.css(a, "marginTop")) || 0,
            c.left -= parseFloat(p.css(a, "marginLeft")) || 0,
            d.top += parseFloat(p.css(b[0], "borderTopWidth")) || 0,
            d.left += parseFloat(p.css(b[0], "borderLeftWidth")) || 0,
            {
                top: c.top - d.top,
                left: c.left - d.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var a = this.offsetParent || e.body;
                while (a && !c_.test(a.nodeName) && p.css(a, "position") === "static")
                    a = a.offsetParent;
                return a || e.body
            })
        }
    }),
    p.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(a, c) {
        var d = /Y/.test(c);
        p.fn[a] = function(e) {
            return p.access(this, function(a, e, f) {
                var g = da(a);
                if (f === b)
                    return g ? c in g ? g[c] : g.document.documentElement[e] : a[e];
                g ? g.scrollTo(d ? p(g).scrollLeft() : f, d ? f : p(g).scrollTop()) : a[e] = f
            }, a, e, arguments.length, null)
        }
    }),
    p.each({
        Height: "height",
        Width: "width"
    }, function(a, c) {
        p.each({
            padding: "inner" + a,
            content: c,
            "": "outer" + a
        }, function(d, e) {
            p.fn[e] = function(e, f) {
                var g = arguments.length && (d || typeof e != "boolean")
                  , h = d || (e === !0 || f === !0 ? "margin" : "border");
                return p.access(this, function(c, d, e) {
                    var f;
                    return p.isWindow(c) ? c.document.documentElement["client" + a] : c.nodeType === 9 ? (f = c.documentElement,
                    Math.max(c.body["scroll" + a], f["scroll" + a], c.body["offset" + a], f["offset" + a], f["client" + a])) : e === b ? p.css(c, d, e, h) : p.style(c, d, e, h)
                }, c, g ? e : b, g, null)
            }
        })
    }),
    a.jQuery = a.$ = p,
    typeof define == "function" && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return p
    })
})(window);
(function(e, t) {
    function i(t, n) {
        var r, i, o, u = t.nodeName.toLowerCase();
        return "area" === u ? (r = t.parentNode,
        i = r.name,
        !t.href || !i || r.nodeName.toLowerCase() !== "map" ? !1 : (o = e("img[usemap=#" + i + "]")[0],
        !!o && s(o))) : (/input|select|textarea|button|object/.test(u) ? !t.disabled : "a" === u ? t.href || n : n) && s(t)
    }
    function s(t) {
        return e.expr.filters.visible(t) && !e(t).parents().andSelf().filter(function() {
            return e.css(this, "visibility") === "hidden"
        }).length
    }
    var n = 0
      , r = /^ui-id-\d+$/;
    e.ui = e.ui || {};
    if (e.ui.version)
        return;
    e.extend(e.ui, {
        version: "1.9.2",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }),
    e.fn.extend({
        _focus: e.fn.focus,
        focus: function(t, n) {
            return typeof t == "number" ? this.each(function() {
                var r = this;
                setTimeout(function() {
                    e(r).focus(),
                    n && n.call(r)
                }, t)
            }) : this._focus.apply(this, arguments)
        },
        scrollParent: function() {
            var t;
            return e.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? t = this.parents().filter(function() {
                return /(relative|absolute|fixed)/.test(e.css(this, "position")) && /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0) : t = this.parents().filter(function() {
                return /(auto|scroll)/.test(e.css(this, "overflow") + e.css(this, "overflow-y") + e.css(this, "overflow-x"))
            }).eq(0),
            /fixed/.test(this.css("position")) || !t.length ? e(document) : t
        },
        zIndex: function(n) {
            if (n !== t)
                return this.css("zIndex", n);
            if (this.length) {
                var r = e(this[0]), i, s;
                while (r.length && r[0] !== document) {
                    i = r.css("position");
                    if (i === "absolute" || i === "relative" || i === "fixed") {
                        s = parseInt(r.css("zIndex"), 10);
                        if (!isNaN(s) && s !== 0)
                            return s
                    }
                    r = r.parent()
                }
            }
            return 0
        },
        uniqueId: function() {
            return this.each(function() {
                this.id || (this.id = "ui-id-" + ++n)
            })
        },
        removeUniqueId: function() {
            return this.each(function() {
                r.test(this.id) && e(this).removeAttr("id")
            })
        }
    }),
    e.extend(e.expr[":"], {
        data: e.expr.createPseudo ? e.expr.createPseudo(function(t) {
            return function(n) {
                return !!e.data(n, t)
            }
        }) : function(t, n, r) {
            return !!e.data(t, r[3])
        }
        ,
        focusable: function(t) {
            return i(t, !isNaN(e.attr(t, "tabindex")))
        },
        tabbable: function(t) {
            var n = e.attr(t, "tabindex")
              , r = isNaN(n);
            return (r || n >= 0) && i(t, !r)
        }
    }),
    e(function() {
        var t = document.body
          , n = t.appendChild(n = document.createElement("div"));
        n.offsetHeight,
        e.extend(n.style, {
            minHeight: "100px",
            height: "auto",
            padding: 0,
            borderWidth: 0
        }),
        e.support.minHeight = n.offsetHeight === 100,
        e.support.selectstart = "onselectstart"in n,
        t.removeChild(n).style.display = "none"
    }),
    e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function(n, r) {
        function u(t, n, r, s) {
            return e.each(i, function() {
                n -= parseFloat(e.css(t, "padding" + this)) || 0,
                r && (n -= parseFloat(e.css(t, "border" + this + "Width")) || 0),
                s && (n -= parseFloat(e.css(t, "margin" + this)) || 0)
            }),
            n
        }
        var i = r === "Width" ? ["Left", "Right"] : ["Top", "Bottom"]
          , s = r.toLowerCase()
          , o = {
            innerWidth: e.fn.innerWidth,
            innerHeight: e.fn.innerHeight,
            outerWidth: e.fn.outerWidth,
            outerHeight: e.fn.outerHeight
        };
        e.fn["inner" + r] = function(n) {
            return n === t ? o["inner" + r].call(this) : this.each(function() {
                e(this).css(s, u(this, n) + "px")
            })
        }
        ,
        e.fn["outer" + r] = function(t, n) {
            return typeof t != "number" ? o["outer" + r].call(this, t) : this.each(function() {
                e(this).css(s, u(this, t, !0, n) + "px")
            })
        }
    }),
    e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function(t) {
        return function(n) {
            return arguments.length ? t.call(this, e.camelCase(n)) : t.call(this)
        }
    }(e.fn.removeData)),
    function() {
        var t = /msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase()) || [];
        e.ui.ie = t.length ? !0 : !1,
        e.ui.ie6 = parseFloat(t[1], 10) === 6
    }(),
    e.fn.extend({
        disableSelection: function() {
            return this.bind((e.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(e) {
                e.preventDefault()
            })
        },
        enableSelection: function() {
            return this.unbind(".ui-disableSelection")
        }
    }),
    e.extend(e.ui, {
        plugin: {
            add: function(t, n, r) {
                var i, s = e.ui[t].prototype;
                for (i in r)
                    s.plugins[i] = s.plugins[i] || [],
                    s.plugins[i].push([n, r[i]])
            },
            call: function(e, t, n) {
                var r, i = e.plugins[t];
                if (!i || !e.element[0].parentNode || e.element[0].parentNode.nodeType === 11)
                    return;
                for (r = 0; r < i.length; r++)
                    e.options[i[r][0]] && i[r][1].apply(e.element, n)
            }
        },
        contains: e.contains,
        hasScroll: function(t, n) {
            if (e(t).css("overflow") === "hidden")
                return !1;
            var r = n && n === "left" ? "scrollLeft" : "scrollTop"
              , i = !1;
            return t[r] > 0 ? !0 : (t[r] = 1,
            i = t[r] > 0,
            t[r] = 0,
            i)
        },
        isOverAxis: function(e, t, n) {
            return e > t && e < t + n
        },
        isOver: function(t, n, r, i, s, o) {
            return e.ui.isOverAxis(t, r, s) && e.ui.isOverAxis(n, i, o)
        }
    })
})(jQuery);
(function(e, t) {
    var n = 0
      , r = Array.prototype.slice
      , i = e.cleanData;
    e.cleanData = function(t) {
        for (var n = 0, r; (r = t[n]) != null; n++)
            try {
                e(r).triggerHandler("remove")
            } catch (s) {}
        i(t)
    }
    ,
    e.widget = function(t, n, r) {
        var i, s, o, u, a = t.split(".")[0];
        t = t.split(".")[1],
        i = a + "-" + t,
        r || (r = n,
        n = e.Widget),
        e.expr[":"][i.toLowerCase()] = function(t) {
            return !!e.data(t, i)
        }
        ,
        e[a] = e[a] || {},
        s = e[a][t],
        o = e[a][t] = function(e, t) {
            if (!this._createWidget)
                return new o(e,t);
            arguments.length && this._createWidget(e, t)
        }
        ,
        e.extend(o, s, {
            version: r.version,
            _proto: e.extend({}, r),
            _childConstructors: []
        }),
        u = new n,
        u.options = e.widget.extend({}, u.options),
        e.each(r, function(t, i) {
            e.isFunction(i) && (r[t] = function() {
                var e = function() {
                    return n.prototype[t].apply(this, arguments)
                }
                  , r = function(e) {
                    return n.prototype[t].apply(this, e)
                };
                return function() {
                    var t = this._super, n = this._superApply, s;
                    return this._super = e,
                    this._superApply = r,
                    s = i.apply(this, arguments),
                    this._super = t,
                    this._superApply = n,
                    s
                }
            }())
        }),
        o.prototype = e.widget.extend(u, {
            widgetEventPrefix: s ? u.widgetEventPrefix : t
        }, r, {
            constructor: o,
            namespace: a,
            widgetName: t,
            widgetBaseClass: i,
            widgetFullName: i
        }),
        s ? (e.each(s._childConstructors, function(t, n) {
            var r = n.prototype;
            e.widget(r.namespace + "." + r.widgetName, o, n._proto)
        }),
        delete s._childConstructors) : n._childConstructors.push(o),
        e.widget.bridge(t, o)
    }
    ,
    e.widget.extend = function(n) {
        var i = r.call(arguments, 1), s = 0, o = i.length, u, a;
        for (; s < o; s++)
            for (u in i[s])
                a = i[s][u],
                i[s].hasOwnProperty(u) && a !== t && (e.isPlainObject(a) ? n[u] = e.isPlainObject(n[u]) ? e.widget.extend({}, n[u], a) : e.widget.extend({}, a) : n[u] = a);
        return n
    }
    ,
    e.widget.bridge = function(n, i) {
        var s = i.prototype.widgetFullName || n;
        e.fn[n] = function(o) {
            var u = typeof o == "string"
              , a = r.call(arguments, 1)
              , f = this;
            return o = !u && a.length ? e.widget.extend.apply(null, [o].concat(a)) : o,
            u ? this.each(function() {
                var r, i = e.data(this, s);
                if (!i)
                    return e.error("cannot call methods on " + n + " prior to initialization; " + "attempted to call method '" + o + "'");
                if (!e.isFunction(i[o]) || o.charAt(0) === "_")
                    return e.error("no such method '" + o + "' for " + n + " widget instance");
                r = i[o].apply(i, a);
                if (r !== i && r !== t)
                    return f = r && r.jquery ? f.pushStack(r.get()) : r,
                    !1
            }) : this.each(function() {
                var t = e.data(this, s);
                t ? t.option(o || {})._init() : e.data(this, s, new i(o,this))
            }),
            f
        }
    }
    ,
    e.Widget = function() {}
    ,
    e.Widget._childConstructors = [],
    e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {
            disabled: !1,
            create: null
        },
        _createWidget: function(t, r) {
            r = e(r || this.defaultElement || this)[0],
            this.element = e(r),
            this.uuid = n++,
            this.eventNamespace = "." + this.widgetName + this.uuid,
            this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t),
            this.bindings = e(),
            this.hoverable = e(),
            this.focusable = e(),
            r !== this && (e.data(r, this.widgetName, this),
            e.data(r, this.widgetFullName, this),
            this._on(!0, this.element, {
                remove: function(e) {
                    e.target === r && this.destroy()
                }
            }),
            this.document = e(r.style ? r.ownerDocument : r.document || r),
            this.window = e(this.document[0].defaultView || this.document[0].parentWindow)),
            this._create(),
            this._trigger("create", null, this._getCreateEventData()),
            this._init()
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function() {
            this._destroy(),
            this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),
            this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"),
            this.bindings.unbind(this.eventNamespace),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")
        },
        _destroy: e.noop,
        widget: function() {
            return this.element
        },
        option: function(n, r) {
            var i = n, s, o, u;
            if (arguments.length === 0)
                return e.widget.extend({}, this.options);
            if (typeof n == "string") {
                i = {},
                s = n.split("."),
                n = s.shift();
                if (s.length) {
                    o = i[n] = e.widget.extend({}, this.options[n]);
                    for (u = 0; u < s.length - 1; u++)
                        o[s[u]] = o[s[u]] || {},
                        o = o[s[u]];
                    n = s.pop();
                    if (r === t)
                        return o[n] === t ? null : o[n];
                    o[n] = r
                } else {
                    if (r === t)
                        return this.options[n] === t ? null : this.options[n];
                    i[n] = r
                }
            }
            return this._setOptions(i),
            this
        },
        _setOptions: function(e) {
            var t;
            for (t in e)
                this._setOption(t, e[t]);
            return this
        },
        _setOption: function(e, t) {
            return this.options[e] = t,
            e === "disabled" && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!t).attr("aria-disabled", t),
            this.hoverable.removeClass("ui-state-hover"),
            this.focusable.removeClass("ui-state-focus")),
            this
        },
        enable: function() {
            return this._setOption("disabled", !1)
        },
        disable: function() {
            return this._setOption("disabled", !0)
        },
        _on: function(t, n, r) {
            var i, s = this;
            typeof t != "boolean" && (r = n,
            n = t,
            t = !1),
            r ? (n = i = e(n),
            this.bindings = this.bindings.add(n)) : (r = n,
            n = this.element,
            i = this.widget()),
            e.each(r, function(r, o) {
                function u() {
                    if (!t && (s.options.disabled === !0 || e(this).hasClass("ui-state-disabled")))
                        return;
                    return (typeof o == "string" ? s[o] : o).apply(s, arguments)
                }
                typeof o != "string" && (u.guid = o.guid = o.guid || u.guid || e.guid++);
                var a = r.match(/^(\w+)\s*(.*)$/)
                  , f = a[1] + s.eventNamespace
                  , l = a[2];
                l ? i.delegate(l, f, u) : n.bind(f, u)
            })
        },
        _off: function(e, t) {
            t = (t || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
            e.unbind(t).undelegate(t)
        },
        _delay: function(e, t) {
            function n() {
                return (typeof e == "string" ? r[e] : e).apply(r, arguments)
            }
            var r = this;
            return setTimeout(n, t || 0)
        },
        _hoverable: function(t) {
            this.hoverable = this.hoverable.add(t),
            this._on(t, {
                mouseenter: function(t) {
                    e(t.currentTarget).addClass("ui-state-hover")
                },
                mouseleave: function(t) {
                    e(t.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function(t) {
            this.focusable = this.focusable.add(t),
            this._on(t, {
                focusin: function(t) {
                    e(t.currentTarget).addClass("ui-state-focus")
                },
                focusout: function(t) {
                    e(t.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function(t, n, r) {
            var i, s, o = this.options[t];
            r = r || {},
            n = e.Event(n),
            n.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(),
            n.target = this.element[0],
            s = n.originalEvent;
            if (s)
                for (i in s)
                    i in n || (n[i] = s[i]);
            return this.element.trigger(n, r),
            !(e.isFunction(o) && o.apply(this.element[0], [n].concat(r)) === !1 || n.isDefaultPrevented())
        }
    },
    e.each({
        show: "fadeIn",
        hide: "fadeOut"
    }, function(t, n) {
        e.Widget.prototype["_" + t] = function(r, i, s) {
            typeof i == "string" && (i = {
                effect: i
            });
            var o, u = i ? i === !0 || typeof i == "number" ? n : i.effect || n : t;
            i = i || {},
            typeof i == "number" && (i = {
                duration: i
            }),
            o = !e.isEmptyObject(i),
            i.complete = s,
            i.delay && r.delay(i.delay),
            o && e.effects && (e.effects.effect[u] || e.uiBackCompat !== !1 && e.effects[u]) ? r[t](i) : u !== t && r[u] ? r[u](i.duration, i.easing, s) : r.queue(function(n) {
                e(this)[t](),
                s && s.call(r[0]),
                n()
            })
        }
    }),
    e.uiBackCompat !== !1 && (e.Widget.prototype._getCreateOptions = function() {
        return e.metadata && e.metadata.get(this.element[0])[this.widgetName]
    }
    )
})(jQuery);
(function(e, t) {
    var n = !1;
    e(document).mouseup(function(e) {
        n = !1
    }),
    e.widget("ui.mouse", {
        version: "1.9.2",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function() {
            var t = this;
            this.element.bind("mousedown." + this.widgetName, function(e) {
                return t._mouseDown(e)
            }).bind("click." + this.widgetName, function(n) {
                if (!0 === e.data(n.target, t.widgetName + ".preventClickEvent"))
                    return e.removeData(n.target, t.widgetName + ".preventClickEvent"),
                    n.stopImmediatePropagation(),
                    !1
            }),
            this.started = !1
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName),
            this._mouseMoveDelegate && e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function(t) {
            if (n)
                return;
            this._mouseStarted && this._mouseUp(t),
            this._mouseDownEvent = t;
            var r = this
              , i = t.which === 1
              , s = typeof this.options.cancel == "string" && t.target.nodeName ? e(t.target).closest(this.options.cancel).length : !1;
            if (!i || s || !this._mouseCapture(t))
                return !0;
            this.mouseDelayMet = !this.options.delay,
            this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                r.mouseDelayMet = !0
            }, this.options.delay));
            if (this._mouseDistanceMet(t) && this._mouseDelayMet(t)) {
                this._mouseStarted = this._mouseStart(t) !== !1;
                if (!this._mouseStarted)
                    return t.preventDefault(),
                    !0
            }
            return !0 === e.data(t.target, this.widgetName + ".preventClickEvent") && e.removeData(t.target, this.widgetName + ".preventClickEvent"),
            this._mouseMoveDelegate = function(e) {
                return r._mouseMove(e)
            }
            ,
            this._mouseUpDelegate = function(e) {
                return r._mouseUp(e)
            }
            ,
            e(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate),
            t.preventDefault(),
            n = !0,
            !0
        },
        _mouseMove: function(t) {
            return !e.ui.ie || document.documentMode >= 9 || !!t.button ? this._mouseStarted ? (this._mouseDrag(t),
            t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1,
            this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)),
            !this._mouseStarted) : this._mouseUp(t)
        },
        _mouseUp: function(t) {
            return e(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
            this._mouseStarted && (this._mouseStarted = !1,
            t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0),
            this._mouseStop(t)),
            !1
        },
        _mouseDistanceMet: function(e) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function(e) {
            return this.mouseDelayMet
        },
        _mouseStart: function(e) {},
        _mouseDrag: function(e) {},
        _mouseStop: function(e) {},
        _mouseCapture: function(e) {
            return !0
        }
    })
})(jQuery);
(function(e, t) {
    function h(e, t, n) {
        return [parseInt(e[0], 10) * (l.test(e[0]) ? t / 100 : 1), parseInt(e[1], 10) * (l.test(e[1]) ? n / 100 : 1)]
    }
    function p(t, n) {
        return parseInt(e.css(t, n), 10) || 0
    }
    e.ui = e.ui || {};
    var n, r = Math.max, i = Math.abs, s = Math.round, o = /left|center|right/, u = /top|center|bottom/, a = /[\+\-]\d+%?/, f = /^\w+/, l = /%$/, c = e.fn.position;
    e.position = {
        scrollbarWidth: function() {
            if (n !== t)
                return n;
            var r, i, s = e("<div style='display:block;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), o = s.children()[0];
            return e("body").append(s),
            r = o.offsetWidth,
            s.css("overflow", "scroll"),
            i = o.offsetWidth,
            r === i && (i = s[0].clientWidth),
            s.remove(),
            n = r - i
        },
        getScrollInfo: function(t) {
            var n = t.isWindow ? "" : t.element.css("overflow-x")
              , r = t.isWindow ? "" : t.element.css("overflow-y")
              , i = n === "scroll" || n === "auto" && t.width < t.element[0].scrollWidth
              , s = r === "scroll" || r === "auto" && t.height < t.element[0].scrollHeight;
            return {
                width: i ? e.position.scrollbarWidth() : 0,
                height: s ? e.position.scrollbarWidth() : 0
            }
        },
        getWithinInfo: function(t) {
            var n = e(t || window)
              , r = e.isWindow(n[0]);
            return {
                element: n,
                isWindow: r,
                offset: n.offset() || {
                    left: 0,
                    top: 0
                },
                scrollLeft: n.scrollLeft(),
                scrollTop: n.scrollTop(),
                width: r ? n.width() : n.outerWidth(),
                height: r ? n.height() : n.outerHeight()
            }
        }
    },
    e.fn.position = function(t) {
        if (!t || !t.of)
            return c.apply(this, arguments);
        t = e.extend({}, t);
        var n, l, d, v, m, g = e(t.of), y = e.position.getWithinInfo(t.within), b = e.position.getScrollInfo(y), w = g[0], E = (t.collision || "flip").split(" "), S = {};
        return w.nodeType === 9 ? (l = g.width(),
        d = g.height(),
        v = {
            top: 0,
            left: 0
        }) : e.isWindow(w) ? (l = g.width(),
        d = g.height(),
        v = {
            top: g.scrollTop(),
            left: g.scrollLeft()
        }) : w.preventDefault ? (t.at = "left top",
        l = d = 0,
        v = {
            top: w.pageY,
            left: w.pageX
        }) : (l = g.outerWidth(),
        d = g.outerHeight(),
        v = g.offset()),
        m = e.extend({}, v),
        e.each(["my", "at"], function() {
            var e = (t[this] || "").split(" "), n, r;
            e.length === 1 && (e = o.test(e[0]) ? e.concat(["center"]) : u.test(e[0]) ? ["center"].concat(e) : ["center", "center"]),
            e[0] = o.test(e[0]) ? e[0] : "center",
            e[1] = u.test(e[1]) ? e[1] : "center",
            n = a.exec(e[0]),
            r = a.exec(e[1]),
            S[this] = [n ? n[0] : 0, r ? r[0] : 0],
            t[this] = [f.exec(e[0])[0], f.exec(e[1])[0]]
        }),
        E.length === 1 && (E[1] = E[0]),
        t.at[0] === "right" ? m.left += l : t.at[0] === "center" && (m.left += l / 2),
        t.at[1] === "bottom" ? m.top += d : t.at[1] === "center" && (m.top += d / 2),
        n = h(S.at, l, d),
        m.left += n[0],
        m.top += n[1],
        this.each(function() {
            var o, u, a = e(this), f = a.outerWidth(), c = a.outerHeight(), w = p(this, "marginLeft"), x = p(this, "marginTop"), T = f + w + p(this, "marginRight") + b.width, N = c + x + p(this, "marginBottom") + b.height, C = e.extend({}, m), k = h(S.my, a.outerWidth(), a.outerHeight());
            t.my[0] === "right" ? C.left -= f : t.my[0] === "center" && (C.left -= f / 2),
            t.my[1] === "bottom" ? C.top -= c : t.my[1] === "center" && (C.top -= c / 2),
            C.left += k[0],
            C.top += k[1],
            e.support.offsetFractions || (C.left = s(C.left),
            C.top = s(C.top)),
            o = {
                marginLeft: w,
                marginTop: x
            },
            e.each(["left", "top"], function(r, i) {
                e.ui.position[E[r]] && e.ui.position[E[r]][i](C, {
                    targetWidth: l,
                    targetHeight: d,
                    elemWidth: f,
                    elemHeight: c,
                    collisionPosition: o,
                    collisionWidth: T,
                    collisionHeight: N,
                    offset: [n[0] + k[0], n[1] + k[1]],
                    my: t.my,
                    at: t.at,
                    within: y,
                    elem: a
                })
            }),
            e.fn.bgiframe && a.bgiframe(),
            t.using && (u = function(e) {
                var n = v.left - C.left
                  , s = n + l - f
                  , o = v.top - C.top
                  , u = o + d - c
                  , h = {
                    target: {
                        element: g,
                        left: v.left,
                        top: v.top,
                        width: l,
                        height: d
                    },
                    element: {
                        element: a,
                        left: C.left,
                        top: C.top,
                        width: f,
                        height: c
                    },
                    horizontal: s < 0 ? "left" : n > 0 ? "right" : "center",
                    vertical: u < 0 ? "top" : o > 0 ? "bottom" : "middle"
                };
                l < f && i(n + s) < l && (h.horizontal = "center"),
                d < c && i(o + u) < d && (h.vertical = "middle"),
                r(i(n), i(s)) > r(i(o), i(u)) ? h.important = "horizontal" : h.important = "vertical",
                t.using.call(this, e, h)
            }
            ),
            a.offset(e.extend(C, {
                using: u
            }))
        })
    }
    ,
    e.ui.position = {
        fit: {
            left: function(e, t) {
                var n = t.within, i = n.isWindow ? n.scrollLeft : n.offset.left, s = n.width, o = e.left - t.collisionPosition.marginLeft, u = i - o, a = o + t.collisionWidth - s - i, f;
                t.collisionWidth > s ? u > 0 && a <= 0 ? (f = e.left + u + t.collisionWidth - s - i,
                e.left += u - f) : a > 0 && u <= 0 ? e.left = i : u > a ? e.left = i + s - t.collisionWidth : e.left = i : u > 0 ? e.left += u : a > 0 ? e.left -= a : e.left = r(e.left - o, e.left)
            },
            top: function(e, t) {
                var n = t.within, i = n.isWindow ? n.scrollTop : n.offset.top, s = t.within.height, o = e.top - t.collisionPosition.marginTop, u = i - o, a = o + t.collisionHeight - s - i, f;
                t.collisionHeight > s ? u > 0 && a <= 0 ? (f = e.top + u + t.collisionHeight - s - i,
                e.top += u - f) : a > 0 && u <= 0 ? e.top = i : u > a ? e.top = i + s - t.collisionHeight : e.top = i : u > 0 ? e.top += u : a > 0 ? e.top -= a : e.top = r(e.top - o, e.top)
            }
        },
        flip: {
            left: function(e, t) {
                var n = t.within, r = n.offset.left + n.scrollLeft, s = n.width, o = n.isWindow ? n.scrollLeft : n.offset.left, u = e.left - t.collisionPosition.marginLeft, a = u - o, f = u + t.collisionWidth - s - o, l = t.my[0] === "left" ? -t.elemWidth : t.my[0] === "right" ? t.elemWidth : 0, c = t.at[0] === "left" ? t.targetWidth : t.at[0] === "right" ? -t.targetWidth : 0, h = -2 * t.offset[0], p, d;
                if (a < 0) {
                    p = e.left + l + c + h + t.collisionWidth - s - r;
                    if (p < 0 || p < i(a))
                        e.left += l + c + h
                } else if (f > 0) {
                    d = e.left - t.collisionPosition.marginLeft + l + c + h - o;
                    if (d > 0 || i(d) < f)
                        e.left += l + c + h
                }
            },
            top: function(e, t) {
                var n = t.within, r = n.offset.top + n.scrollTop, s = n.height, o = n.isWindow ? n.scrollTop : n.offset.top, u = e.top - t.collisionPosition.marginTop, a = u - o, f = u + t.collisionHeight - s - o, l = t.my[1] === "top", c = l ? -t.elemHeight : t.my[1] === "bottom" ? t.elemHeight : 0, h = t.at[1] === "top" ? t.targetHeight : t.at[1] === "bottom" ? -t.targetHeight : 0, p = -2 * t.offset[1], d, v;
                a < 0 ? (v = e.top + c + h + p + t.collisionHeight - s - r,
                e.top + c + h + p > a && (v < 0 || v < i(a)) && (e.top += c + h + p)) : f > 0 && (d = e.top - t.collisionPosition.marginTop + c + h + p - o,
                e.top + c + h + p > f && (d > 0 || i(d) < f) && (e.top += c + h + p))
            }
        },
        flipfit: {
            left: function() {
                e.ui.position.flip.left.apply(this, arguments),
                e.ui.position.fit.left.apply(this, arguments)
            },
            top: function() {
                e.ui.position.flip.top.apply(this, arguments),
                e.ui.position.fit.top.apply(this, arguments)
            }
        }
    },
    function() {
        var t, n, r, i, s, o = document.getElementsByTagName("body")[0], u = document.createElement("div");
        t = document.createElement(o ? "div" : "body"),
        r = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0,
            background: "none"
        },
        o && e.extend(r, {
            position: "absolute",
            left: "-1000px",
            top: "-1000px"
        });
        for (s in r)
            t.style[s] = r[s];
        t.appendChild(u),
        n = o || document.documentElement,
        n.insertBefore(t, n.firstChild),
        u.style.cssText = "position: absolute; left: 10.7432222px;",
        i = e(u).offset().left,
        e.support.offsetFractions = i > 10 && i < 11,
        t.innerHTML = "",
        n.removeChild(t)
    }(),
    e.uiBackCompat !== !1 && function(e) {
        var n = e.fn.position;
        e.fn.position = function(r) {
            if (!r || !r.offset)
                return n.call(this, r);
            var i = r.offset.split(" ")
              , s = r.at.split(" ");
            return i.length === 1 && (i[1] = i[0]),
            /^\d/.test(i[0]) && (i[0] = "+" + i[0]),
            /^\d/.test(i[1]) && (i[1] = "+" + i[1]),
            s.length === 1 && (/left|center|right/.test(s[0]) ? s[1] = "center" : (s[1] = s[0],
            s[0] = "center")),
            n.call(this, e.extend(r, {
                at: s[0] + i[0] + " " + s[1] + i[1],
                offset: t
            }))
        }
    }(jQuery)
})(jQuery);
(function($) {
    var escapeable = /["\\\x00-\x1f\x7f-\x9f]/g
      , meta = {
        '\b': '\\b',
        '\t': '\\t',
        '\n': '\\n',
        '\f': '\\f',
        '\r': '\\r',
        '"': '\\"',
        '\\': '\\\\'
    };
    $.toJSON = typeof JSON === 'object' && JSON.stringify ? JSON.stringify : function(o) {
        if (o === null) {
            return 'null';
        }
        var type = typeof o;
        if (type === 'undefined') {
            return undefined;
        }
        if (type === 'number' || type === 'boolean') {
            return '' + o;
        }
        if (type === 'string') {
            return $.quoteString(o);
        }
        if (type === 'object') {
            if (typeof o.toJSON === 'function') {
                return $.toJSON(o.toJSON());
            }
            if (o.constructor === Date) {
                var month = o.getUTCMonth() + 1
                  , day = o.getUTCDate()
                  , year = o.getUTCFullYear()
                  , hours = o.getUTCHours()
                  , minutes = o.getUTCMinutes()
                  , seconds = o.getUTCSeconds()
                  , milli = o.getUTCMilliseconds();
                if (month < 10) {
                    month = '0' + month;
                }
                if (day < 10) {
                    day = '0' + day;
                }
                if (hours < 10) {
                    hours = '0' + hours;
                }
                if (minutes < 10) {
                    minutes = '0' + minutes;
                }
                if (seconds < 10) {
                    seconds = '0' + seconds;
                }
                if (milli < 100) {
                    milli = '0' + milli;
                }
                if (milli < 10) {
                    milli = '0' + milli;
                }
                return '"' + year + '-' + month + '-' + day + 'T' + hours + ':' + minutes + ':' + seconds + '.' + milli + 'Z"';
            }
            if (o.constructor === Array) {
                var ret = [];
                for (var i = 0; i < o.length; i++) {
                    ret.push($.toJSON(o[i]) || 'null');
                }
                return '[' + ret.join(',') + ']';
            }
            var name, val, pairs = [];
            for (var k in o) {
                type = typeof k;
                if (type === 'number') {
                    name = '"' + k + '"';
                } else if (type === 'string') {
                    name = $.quoteString(k);
                } else {
                    continue;
                }
                type = typeof o[k];
                if (type === 'function' || type === 'undefined') {
                    continue;
                }
                val = $.toJSON(o[k]);
                pairs.push(name + ':' + val);
            }
            return '{' + pairs.join(',') + '}';
        }
    }
    ;
    $.evalJSON = typeof JSON === 'object' && JSON.parse ? JSON.parse : function(src) {
        return eval('(' + src + ')');
    }
    ;
    $.secureEvalJSON = typeof JSON === 'object' && JSON.parse ? JSON.parse : function(src) {
        var filtered = src.replace(/\\["\\\/bfnrtu]/g, '@').replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, ']').replace(/(?:^|:|,)(?:\s*\[)+/g, '');
        if (/^[\],:{}\s]*$/.test(filtered)) {
            return eval('(' + src + ')');
        } else {
            throw new SyntaxError('Error parsing JSON, source is not valid.');
        }
    }
    ;
    $.quoteString = function(string) {
        if (string.match(escapeable)) {
            return '"' + string.replace(escapeable, function(a) {
                var c = meta[a];
                if (typeof c === 'string') {
                    return c;
                }
                c = a.charCodeAt();
                return '\\u00' + Math.floor(c / 16).toString(16) + (c % 16).toString(16);
            }) + '"';
        }
        return '"' + string + '"';
    }
    ;
})(jQuery);
eval(function(p, a, c, k, e, r) {
    e = function(c) {
        return (c < a ? '' : e(parseInt(c / a))) + ((c = c % a) > 35 ? String.fromCharCode(c + 29) : c.toString(36))
    }
    ;
    if (!''.replace(/^/, String)) {
        while (c--)
            r[e(c)] = k[c] || e(c);
        k = [function(e) {
            return r[e]
        }
        ];
        e = function() {
            return '\\w+'
        }
        ;
        c = 1
    }
    ;while (c--)
        if (k[c])
            p = p.replace(new RegExp('\\b' + e(c) + '\\b','g'), k[c]);
    return p
}('B R(a,b,c){\'2p 2q\';6.1G=a;6.3E=b;6.2r=c;y 6}R.14={1v:\'3F\',2s:\'3G\',2t:\'3H\',22:\'3I\',2u:\'3J\',2v:\'3K\'};C 2w=(B(n){\'2p 2q\';C o=/(\\d+)(\\d{3})/;C q;C u={1H:B(a){C b=\'(\';O(C c 1n a){v(a.1h(c)){v(b.F>1){b+=\'|\'}b+=c}}y b+\')[\\\\.]?\'+\'(?!\\\\w)\'},1i:B(a,b,c){1I(a.F<c){a=b+a}y a},1o:B(a){y a.T(/^\\s*([\\S\\s]*?)\\s*$/,\'$1\')},1w:B(a,b){y(a.1p(b)===0)},23:B(a){v(a!==J&&a!==I&&a.U!==I){O(C i=a.U.F-1;i>=0;i--){v(a.U[i]!==I&&a.U[i].V!==I&&(a.U[i].V(\'N-Q\')!==J||a.U[i].V(\'N-Q-O\')!==J)){a.U[i].1J.3L(a.U[i])}}}},2x:B(a){C p=a.1J;1I(p){v(6.17(p,\'N-Q\')||6.17(p,\'N-Q-O\')){y W}p=p.1J}y 1j},2y:B(a,b){y a.1K()===b.1K()},2z:B(a,b){v(3M.3N.1p("3O")>-1&&u.2y(a.3P,\'3Q\')){C c=q.16.2A(\'3R\');c.1a=\'<2B><2C>\'+b+\'</2C></2B>\';C d=3;1I(d--){c=c.2D}c.2E(\'N-Q\',\'\');y c}K{a.1a=b;y a}},18:B(a){v(1b(a)==="1q"){v(a===J){y"J"}v(a.1r===([]).1r){y"1L"}v(a.1r===(P 2F()).1r){y"24"}v(a.1r===(P 1c()).1r){y"3S"}v(1b 2G==="1q"?a 2H 2G:a&&1b a==="1q"&&a.3T===1&&1b a.3U==="25"){y\'2r\'}v(1b 2I!==\'I\'&&a 2H 2I){y\'2J\'}y"1q"}y 1b(a)},17:B(a,b){v(a!==I){v(a.2K!==I){y a.2K(b)}K v(a.V!==I){y a.V(b)!==J}}y 1j},1s:B(a,b){v(a!==I){a.2E(b,\'\')}},2L:B(a,b){C c={};O(C d 1n a){v(a.1h(d)){c[d]=a[d]}}O(C e 1n b){v(b.1h(e)){c[e]=b[e]}}y c},1d:B(a,b){v(a!==I&&a.F>0){O(C i=0;i<a.F;i++){v(b.1G===a[i].1G){a[i].15(b)}}}},L:B(a){v(u.18(a)===\'25\'){v(a===\'*\'){a=q.16.2M(\'3V\')[0]}K{a=q.16.26(a)}}K v(u.18(a)===\'2J\'&&a.F>0){a=a[0]}y a},2N:B(a,b){v(!3W.27.1p){O(C i=0;i<6.F;i++){v(6[i]===b){y W}}y 1j}K{y a.1p(b)>-1}}};B 1k(a,b){6.2O=a;6.1M=J;6.1x={};6.L=J;6.1N=b!==I?b:J;6.1O=W;6.28=\'\\\\{\\\\{\';6.29=\'\\\\}\\\\}\';6.1y=\'\\\\{%\';6.1z=\'%\\\\}\';6.2a=1j;6.1l={};v(1b a!==\'I\'){O(C c 1n a){v(c===\'3X\'){6.28=a[c].X(0,a[c].F/2);6.29=a[c].X(a[c].F/2)}K v(c===\'3Y\'){6.1y=a[c].X(0,a[c].F/2);6.1z=a[c].X(a[c].F/2)}K v(1b 6[c]!==\'I\'){6[c]=a[c]}}}y 6}1k.27={2P:B(b,c){B 1P(a){y a.2Q?a.2Q.16.3Z.1a:a.2R?a.2R.2b.1a:a.16.2b.1a}v(q.16.26(b)!==J){c(1P(q.16.26(b)))}K{C d=q.16.2A(\'40\');d.41=b;d.Z=b;d.19.42=0;d.19.43=0;d.44=b;v(d.2S){d.2S(\'2T\',B(){c(1P(d))})}K{d.2T=B(){c(1P(d))}}q.16.2b.1Q(d)}},2U:B(b,c,d,e){y B(a){u.1s(b,\'N-Q-1t\');b.1a=a;c.1A(d,e)}},1A:B(a,b){6.L=a;C c=a.2M(\'*\');C d=W;O(C i=0;i<c.F;i++){v(d===W&&b!==I&&u.17(c[i],\'N-Q-1t\')){C e=c[i];v(e.V(\'N-Q-1t\').F>0){C f=6;d=1j;6.2P(e.V(\'N-Q-1t\'),6.2U(e,f,a,b))}}K v(u.17(c[i],\'N-Q-45\')){c[i].19.1R=\'46\'}}v(d){C g={};O(C s=0;s<c.F;s++){v(c[s].V!==I){v(u.17(c[s],\'N-Q-O\')&&c[s].V(\'N-Q-O\').F>0&&6.1N===c[s].V(\'N-Q-O\')&&!g[6.1N]){6.2c(c[s]);g[6.1N]=W}K v(u.17(c[s],\'N-Q\')&&!u.2x(c[s])){6.2c(c[s])}}}u.23(6.L);v(b!==I){b(6)}}},2c:B(b){C c=b.2d(W);v(c.19.2V){c.19.2V(\'1R\')}K v(c.19.2W){c.19.2W(\'1R\')}K{c.19.1R=\'47\'}6.L=b.1J;C d=1j;O(C a=0;a<c.1l.F;a++){C e=c.1l[a];v(u.1w(e.Z,\'N-v-\')){C f;v(e.11===\'\'){f=W}K v(e.11===\'J\'){f=J}K{f=\'\\\'\'+e.11+\'\\\'\'}6.1x[e.Z.X(8,e.Z.F)+\'==\'+f]=c;u.1s(c,e.Z);d=W}K v(e.Z===\'N-48\'){6.1x[e.11+\'!==I\']=c;u.1s(c,e.Z);d=W}K v(e.Z===\'N-49-4a\'){6.2a=W}K v(!u.1w(e.Z,\'N-Q\')&&u.1w(e.Z,\'N-\')){6.1l[e.Z.X(5,e.Z.F)]=e.11}}v(!d){6.1M=c}},2X:B(i){O(C a 1n 6.1x){v(1e(\'i.\'+a)){y 6.1x[a].2d(W)}}v(6.1M){y 6.1M.2d(W)}}};B 1u(a){6.G=a;6.15=[];6.1B=1j;6.2Y=P 1c(6.G.28+\'[ ]?([A-2Z-2e-9$\\\\.30\\\\[\\\\]]*?)([ ]?\\\\|[ ]?.*?)?[ ]?\'+6.G.29,\'g\');6.31=P 1c(6.G.1y+\'[ ]?([\\\\s\\\\S]*?)( [\\\\s\\\\S]*?)?[ ]?\'+6.G.1z+\'(([\\\\s\\\\S]*?)(?=\'+6.G.1y+\'[ ]?4b\\\\1[ ]?\'+6.G.1z+\'))?\',\'g\');6.32=P 1c(\'\\\\|[ ]?(?=\'+u.1H(6.1S)+\')\',\'g\');6.1T=J;y 6}1u.27={4c:B(a,b){6.15.33({\'1G\':a,\'15\':b});y 6},2f:B(a,b,i,t){C c=J;v(u.1w(b,\'34.\')){y 1e(\'t.\'+b.X(7,b.F))}v(b===\'.\'){c=1e(\'i\')}K v(b===\'6\'||b.1U(/6[\\\\[\\\\.]/)!==J){c=1e(\'i\'+b.X(4,b.F))}K v(u.18(i)===\'1L\'){c=1e(\'i\'+b)}K{c=1e(\'i.\'+b)}y c},2g:B(g,h,i,k){C l=6;y k.T(6.2Y,B(a,b,c){1C{C d=g.2f(g,b,i,h);v(c!==I&&c!==\'\'){C e=u.1o(u.1o(c).X(1)).1m(l.32);O(C p=0;p<e.F;p++){C f=u.1o(e[p]),1V,j=f.1p(\' \');v(~j){1V=f.1W(j).T(/(^ *[\'"])|([\'"] *$)/g,\'\').1m(/[\'"] *, *[\'"]/);f=f.1W(0,j)}K{1V=[]}d=g.1S[f](d,1V)}}v(d!==I){v(l.G.1O){d=l.1S.1O(d,{})}y d}}1D(1f){l.1E.1F(l,1f)}y\'\'})},35:B(e,f,i,g,h){y g.T(h,B(a,b,c){1C{C d=e.2f(e,b,i,f);v(d!==I){v(u.18(d)===\'25\'){y\'\\\'\'+d+\'\\\'\'}K{y d}}}1D(1f){36.1E.1F(36,1f)}y I})},37:B(d,e,f){y f.T(/(\\b[A-2e-9]+?)(?:="[^"\']*?"[^>]*?)N-\\1="(.*?)"/g,B(a,b,c){v(c!==\'\'){y b+\'="\'+c+\'"\'}y a})},2h:B(f,g,h){y h.T(6.31,B(a,b,c,d){v(f.2i.1h(b)){c=c.X(c.1p(\' \')).T(/^[ ]*|[ ]*$/g,\'\');C e=c.1m(/(?:[\'"])[ ]?,[ ]?(?:[\'"])/);y f.2i[b](f,g,a,e,d)}K{y\'\'}})},1X:B(a){6.1B=W;v(a===I){a=P R(R.14.1v,I,I)}u.1d(6.15,a);y 6},38:B(i,c){C d=6;y B(a){C r=P 1u(a);C b=J;v(c===\'*\'||i.1h(c.1m(\'.\')[0])){v(c===\'*\'){b=i}K{b=1e(\'i.\'+c)}v(b){1C{v(u.18(b)===\'1L\'){O(C s=0;s<b.F;s++){v(u.18(b[s])===\'1q\'){b[s].2j=B(){y i}()}}}K{b.2j=B(){y i}()}}1D(1f){d.1E.1F(d,1f)}}}r.39(b)}},3a:B(b,c,i,d){C e=P 1c(\'(?:4d[\\\\.]?)((34|\\\\[|\'+u.1H(i)+\'|6)([A-2Z-2e-9$\\\\.30\\\\[\\\\]]+)?)\',\'g\');C f=b.G.2X(i);C g=u.2L(c,b.G.1l);v(u.17(f,\'N-Q-O\')){u.1s(f,\'N-Q-O\')}v(u.17(f,\'N-Q-1t\')){u.1s(f,\'N-Q-1t\')}v(f&&i){u.1d(6.15,P R(R.14.2s,i,f));C h=f.1a.1U(/N-Q-O="([^"]+?)"/g);v(h){O(C p=0;p<h.F;p++){C j=h[p].1U(/N-Q-O="([^"]+?)"/);v(j&&j[1]){C t=P 1k(b.G.2O,j[1]);1C{t.1A(f,6.38(i,j[1]))}1D(1f){6.1E.1F(6,1f)}}}}O(C a=0;a<f.1l.F;a++){C k=f.1l[a];v(k!==J&&k.4e&&k.11!==J&&k.11.F>0&&k.Z.1U(/19|N-Q.*/)===J){k.11=6.2h(6,i,k.11);k.11=6.2g(6,g,i,k.11)}}C l=f.1a.T(/%3b%3b/g,\'{{\').T(/%3c%3c/g,\'}}\');l=6.2h(6,i,l);l=6.2g(6,g,i,l);l=6.35(6,g,i,l,e);l=6.37(6,i,l);d.1Q(u.2z(f,l));u.1d(6.15,P R(R.14.2t,i,f))}},2k:B(a){v(a){C b={};C c=q.16.4f();v(u.18(a)===\'1q\'){v(6.G.2a){C d=[];O(C e 1n a){v(a.1h(e)&&e!==\'2j\'){C f={};f.4g=e;f.11=a[e];d.33(f)}}a=d}K{a=[a]}}O(C i=0;i<a.F;i++){b.4h=i;b.4i=i<1;b.4j=i==a.F-1;6.3a(6,b,a[i],c)}y c}y J},4k:B(a){v(a!==I){6.G.L=u.L(a)}y 6},39:B(a){v(!6.1B){6.1X(P R(R.14.1v,a,6.G.L))}6.3d();6.2l(a);y 6},2l:B(a){v(!6.1B){6.1X(P R(R.14.1v,a,6.G.L))}C b=6.2k(a);v(b!==J&&6.G.L!==J){v(b!==J){C c=J;O(C i=6.G.L.U.F;i>=0;i--){v(6.G.L.U[i]!==I&&6.G.L.U[i].V!==I&&6.G.L.U[i].V(\'N-4l-Q\')!==J){c=6.G.L.U[i]}}v(c===J){c=6.G.L.2D}v(c!==J){6.G.L.3e(b,c)}K{6.G.L.1Q(b)}}}u.1d(6.15,P R(R.14.22,a,6.G.L));y 6},3f:B(a){v(!6.1B){6.1X(P R(R.14.1v,a,6.G.L))}C b=6.2k(a);v(b!==J){C c=J;O(C i=0;i<6.G.L.U.F;i++){v(6.G.L.U[i]!==I&&6.G.L.U[i].V!==I&&6.G.L.U[i].V(\'N-3g-Q\')!==J){c=6.G.L.U[i]}}v(c===J){c=6.G.L.4m}v(c!==J){v(c.3h!==J&&c.V&&c.V(\'N-3g-Q\')!==J){c=c.3h}6.G.L.3e(b,c)}K{6.G.L.1Q(b)}}u.1d(6.15,P R(R.14.22,a,6.G.L));y 6},4n:B(a){6.1T=a;y 6},1E:B(a){v(6.1T!==J){6.1T.1F(6,a)}},3d:B(){u.1d(6.15,P R(R.14.2u,{},6.G.L));u.23(6.G.L);u.1d(6.15,P R(R.14.2v,{},6.G.L))},2i:{\'v\':B(b,i,c,d,e){C f=u.1H(i);C g=d[0].T(/&3i;/g,\'&\').T(/&3j;/g,\'>\').T(/&3k;/g,\'<\');g=g.T(P 1c(f,\'4o\'),B(a){y\'i.\'+a});C h=P 1c(b.G.1y+\'[ ]?K[ ]?\'+b.G.1z,\'g\');C j=e.1m(h);v(1e(g)){y j[0]}K v(j.F>1){y j[1]}y\'\'}},1S:{\'1O\':B(a,b){y a.2m().T(/[&<>]/g,B(c){y{\'&\':\'&3i;\',\'<\':\'&3k;\',\'>\':\'&3j;\'}[c]||c})},\'3l\':B(a,b){y 3l(a.2m())},\'3m\':B(a,b){y 3m(a.2m())},\'4p\':B(a,b){v(a!==I){C c=0;C d=\'...\';v(b.F>0){c=3n(b[0],10)}v(b.F>1){d=b[1]}v(a.F>c-3){y a.1W(0,c-3)+d}y a}},\'4q\':B(a,b){v(a!==I){v(b.F===1){a=4r(a+\'\').1g(3n(b[0],10))}C x=(a+\'\').1m(\'.\');C c=x[0];C d=x.F>1?\'.\'+x[1]:\'\';1I(o.3o(c)){c=c.T(o,\'$1\'+\',\'+\'$2\')}y c+d}},\'4s\':B(a,b){y a.3p()},\'4t\':B(a,b){y a.1K()},\'4u\':B(a,b){C c=[];v(b!==I&&b.F===1){c=b[0].1m(\' \')}y a.T(/\\w[a-z]\\S*/g,B(m,i){v(c.F===0||!(u.2N(c,m)&&i>0)){y m.4v(0).3p()+m.1W(1).1K()}y m})},\'1o\':B(a,b){y u.1o(a)},\'T\':B(a,b){v(a!==I&&b.F===2){y a.T(P 1c(b[0],\'g\'),b[1])}y a},\'2l\':B(a,b){v(a!==I&&b.F===1){y a+\'\'+b[0]}y a},\'3f\':B(a,b){v(a!==I&&b.F===1){y b[0]+\'\'+a}y a},\'3q\':B(a,b){v(b.F===1&&a!==I&&u.18(a)===\'1L\'){y a.3q(b[0])}y a},\'4w\':B(a,b){v(a!==I&&a!==J){y a}v(b.F===1){y b[0]}y a},\'24\':B(d,e){v(d!==I&&e.F>=1&&e.F<=2){C f=P 2F(d);C g=e[0];C h=(e.F===2&&e[1]===\'4x\');v(g===\'4y\'){y f.4z()}K v(g===\'4A\'){y f.4B()}K v(g===\'24\'){y f.4C()}K v(g===\'4D\'){y f.4E()}K{C i=[\'4F\',\'4G\',\'4H\',\'4I\',\'4J\',\'4K\',\'4L\',\'4M\',\'4N\',\'4O\',\'4P\',\'4Q\'];C j=[\'4R\',\'4S\',\'4T\',\'4U\',\'4V\',\'4W\',\'4X\'];C k={\'4Y\':B(a){y(h?a.3r():a.3s())},\'4Z\':B(a){y(h?a.3r():a.3s()).1g().X(2)},\'50\':B(a){y i[(h?a.1Y():a.1Z())]},\'51\':B(a){y i[(h?a.1Y():a.1Z())].X(0,3)},\'52\':B(a){y u.1i(((h?a.1Y():a.1Z())+1).1g(),\'0\',2)},\'M\':B(a){y(h?a.1Y():a.1Z())+1},\'53\':B(a){y u.1i((h?a.3t():a.3u()).1g(),\'0\',2)},\'D\':B(a){y(h?a.3t():a.3u())},\'54\':B(a){y j[(h?a.2n():a.2o())]},\'55\':B(a){y j[(h?a.2n():a.2o())].X(0,3)},\'E\':B(a){y(h?a.2n():a.2o())},\'56\':B(a){y u.1i((h?a.20():a.21()).1g(),\'0\',2)},\'H\':B(a){y(h?a.20():a.21())},\'h\':B(a){C b=(h?a.20():a.21());y b<13?(b===0?12:b):b-12},\'57\':B(a){y u.1i((h?a.3v():a.3w()).1g(),\'0\',2)},\'m\':B(a){y(h?a.3v():a.3w())},\'58\':B(a){y u.1i((h?a.3x():a.3y()).1g(),\'0\',2)},\'s\':B(a){y(h?a.3x():a.3y())},\'59\':B(a){y u.1i((h?a.3z():a.3A()).1g(),\'0\',3)},\'S\':B(a){y(h?a.3z():a.3A())},\'a\':B(a){y(h?a.20():a.21())<12?\'5a\':\'5b\'}};g=g.T(/(\\\\)?(Y{2,4}|M{1,4}|D{1,2}|E{1,4}|H{1,2}|h|m{1,2}|s{1,2}|S{1,3}|a)/g,B(a,b,c){v(!b){v(k.1h(c)){y k[c](f)}}y c});y g}}y\'\'}}};n.3B=B(a){q=a;y 6};n.5c=B(b,c,d){b=u.L(b);C e=P 1k(c);v(d!==I){e.1A(b,B(a){d(P 1u(a))})}K{e.1A(b);y P 1u(e)}};n.3C={\'G\':1k,\'3D\':u};n.3o={\'3D\':u,\'G\':P 1k({}),\'5d\':P 1u(P 1k({}))};1C{n.3B(5e)}1D(e){3C.5f=n}y n})(2w||{});', 62, 326, '||||||this|||||||||||||||||||||||||if|||return|||function|var|||length|templates||undefined|null|else|container||data|for|new|template|TempoEvent||replace|childNodes|getAttribute|true|substring||name||value|||Types|listener|document|hasAttr|typeOf|style|innerHTML|typeof|RegExp|notify|eval|err|toFixed|hasOwnProperty|pad|false|Templates|attributes|split|in|trim|indexOf|object|constructor|removeAttr|file|Renderer|RENDER_STARTING|startsWith|namedTemplates|tag_brace_left|tag_brace_right|parse|started|try|catch|_onError|call|type|memberRegex|while|parentNode|toLowerCase|array|defaultTemplate|nestedItem|escape|contents|appendChild|display|filters|errorHandler|match|filter_args|substr|starting|getUTCMonth|getMonth|getUTCHours|getHours|RENDER_COMPLETE|clearContainer|date|string|getElementById|prototype|var_brace_left|var_brace_right|dataIsMap|body|createTemplate|cloneNode|z0|_getValue|_replaceVariables|_applyTags|tags|_parent|_createFragment|append|toString|getUTCDay|getDay|use|strict|element|ITEM_RENDER_STARTING|ITEM_RENDER_COMPLETE|BEFORE_CLEAR|AFTER_CLEAR|Tempo|isNested|equalsIgnoreCase|getElement|createElement|table|tbody|lastChild|setAttribute|Date|HTMLElement|instanceof|jQuery|jquery|hasAttribute|merge|getElementsByTagName|arrayContains|params|load|contentWindow|contentDocument|attachEvent|onload|_insertTemplate|removeAttribute|removeProperty|templateFor|varRegex|Za|_|tagRegex|filterSplitter|push|_tempo|_replaceObjects|self|_applyAttributeSetters|_renderNestedItem|render|renderItem|7B|7D|clear|insertBefore|prepend|before|nextSibling|amp|gt|lt|encodeURI|decodeURI|parseInt|test|toUpperCase|join|getUTCFullYear|getFullYear|getUTCDate|getDate|getUTCMinutes|getMinutes|getUTCSeconds|getSeconds|getUTCMilliseconds|getMilliseconds|init|exports|utils|item|render_starting|item_render_starting|item_render_complete|render_complete|before_clear|after_clear|removeChild|navigator|appVersion|MSIE|tagName|tr|div|regex|nodeType|nodeName|html|Array|var_braces|tag_braces|documentElement|iframe|id|height|width|src|fallback|none|block|has|from|map|end|when|__|specified|createDocumentFragment|key|index|first|last|into|after|firstChild|errors|gi|truncate|format|parseFloat|upper|lower|titlecase|charAt|default|UTC|localedate|toLocaleDateString|localetime|toLocaleTimeString|toDateString|time|toTimeString|January|February|March|April|May|June|July|August|September|October|November|December|Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|YYYY|YY|MMMM|MMM|MM|DD|EEEE|EEE|HH|mm|ss|SSS|AM|PM|prepare|renderer|window|tempo'.split('|'), 0, {}));
$(document).ready(function() {
    initFilters(document);
    initFacets(document);
    initFacetForms(document);
});
function getElementsByClassName(node, classname) {
    if (node != null) {
        if (node.getElementsByClassName) {
            return node.getElementsByClassName(classname);
        } else {
            return (function getElementsByClass(searchClass, node) {
                if (node == null)
                    node = document;
                var classElements = [], els = node.getElementsByTagName("*"), elsLen = els.length, pattern = new RegExp("(^|\\s)" + searchClass + "(\\s|$)"), i, j;
                for (i = 0,
                j = 0; i < elsLen; i++) {
                    if (pattern.test(els[i].className)) {
                        classElements[j] = els[i];
                        j++;
                    }
                }
                return classElements;
            })(classname, node);
        }
    }
}
function hasClass(ele, cls) {
    if (ele != null && ele.className != null) {
        var regexp = new RegExp('(\\s|^)' + cls + '(\\s|$)');
        return regexp.test(ele.className);
    }
    return false;
}
function addClass(ele, cls) {
    if (ele != null) {
        ele.className = ele.className + ' ' + cls;
    }
}
function setClass(ele, cls) {
    if (ele != null) {
        ele.className = cls;
        if (!this.hasClass(ele, cls))
            ele.className += " " + cls;
    }
}
function removeClass(ele, cls) {
    if (ele != null) {
        if (hasClass(ele, cls)) {
            var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
            ele.className = trim(ele.className.replace(reg, ' ').replace(/[ ]{1,}/g, ' '));
        }
    }
}
function addEvent(elem, event, fn) {
    if (elem.addEventListener) {
        elem.addEventListener(event, fn, false);
    } else {
        elem.attachEvent("on" + event, function() {
            return ( fn.call(elem, window.event)) ;
        });
    }
}
function children(ele) {
    var arr = [];
    if (typeof ele !== 'undefined') {
        var child = ele.firstChild;
        var lastChild = ele.lastChild;
        while (child != lastChild) {
            arr.push(child);
            child = child.nextSibling;
        }
        if (typeof ele.childNodes !== 'undefined' && ele.childNodes.length > 0) {
            arr.push(lastChild);
        }
    }
    return arr;
}
function trim(string) {
    return string.replace(/^\s*([\S\s]*?)\s*$/, '$1');
}
function arrayContains(array, obj) {
    if (typeOf(array) == 'array') {
        try {
            return array.indexOf(obj) > -1;
        } catch (e) {
            for (var i = 0, length = array.length; i < length; i++) {
                if (array[i] == obj) {
                    return true;
                }
            }
            return false;
        }
    }
    return false;
}
function equalsIgnoreCase(str1, str2) {
    if (typeof str1 === 'string' && typeof str2 === 'string') {
        return str1.toLowerCase() === str2.toLowerCase();
    }
    return false;
}
function typeOf(obj) {
    if (typeof (obj) === "object") {
        if (obj === null) {
            return "null";
        }
        if (obj.constructor === ([]).constructor) {
            return "array";
        }
        if (obj.constructor === (new Date()).constructor) {
            return "date";
        }
        if (obj.constructor === (new RegExp()).constructor) {
            return "regex";
        }
        return "object";
    }
    return typeof (obj);
}
function getStyle(oElm, strCssRule) {
    return $(oElm).css(strCssRule);
}
function Filters() {}
Filters.prototype.attachExpandEvent = function(filterList) {
    var expandArrows = getElementsByClassName(filterList, 'expand');
    if (typeof expandArrows !== 'undefined') {
        for (var i = 0; i < expandArrows.length; i++) {
            if (expandArrows[i]) {
                addEvent(expandArrows[i], 'click', function() {
                    var li = this.parentNode;
                    if (hasClass(li, 'expanded')) {
                        removeClass(li, 'expanded');
                    } else {
                        addClass(li, 'expanded');
                    }
                    return false;
                });
            }
        }
    }
}
;
Filters.prototype.attachMoreEvent = function(filterList) {
    var self = this;
    var moreLinkContainers = getElementsByClassName(filterList, 'more-link');
    if (typeof moreLinkContainers !== 'undefined' && moreLinkContainers.length > 0) {
        var lastIndex = (moreLinkContainers.length > 0) ? moreLinkContainers.length - 1 : 0;
        var moreLink = moreLinkContainers[lastIndex].getElementsByTagName('a')[0];
        moreLink.onclick = function() {
            if (hasClass(filterList, 'showing-more')) {
                removeClass(filterList, 'showing-more');
                self.updateMoreLink(moreLink);
            } else {
                addClass(filterList, 'showing-more');
                self.updateLessLink(moreLink);
            }
            return false;
        }
        ;
    }
}
;
Filters.prototype.updateMoreLink = function(moreLink) {
    if (moreLink && moreLink.getAttribute('data-show-more-text') != null) {
        moreLink.innerHTML = moreLink.getAttribute("data-show-more-text");
    }
}
;
Filters.prototype.updateLessLink = function(lessLink) {
    if (lessLink && lessLink.getAttribute('data-show-less-text') != null) {
        lessLink.innerHTML = lessLink.getAttribute("data-show-less-text");
    }
}
;
function Facets() {
    this.facet;
    this.facetName;
    this.facetExpandCollapse;
}
Facets.prototype.attachExpandCollapseEvent = function(facet) {
    var self = this;
    self.facet = facet;
    if (self.facet) {
        var collapsible = false;
        if (self.facet.className != null) {
            var cssClasses = self.facet.className.split(' ');
            self.facetName = cssClasses[cssClasses.length - 1];
            self.facetExpandCollapse = getElementsByClassName(self.facet, 'facet-title')[0];
            collapsible = hasClass(self.facet, 'collapsible');
        }
        if (collapsible) {
            var facetNameEncoded = encodeURIComponent(self.facetName);
            var facetNameCookie = getCookie(facetNameEncoded);
            if (facetNameCookie == "expanded") {
                self.showFacet();
            } else if (facetNameCookie == "collapsed" || hasClass(self.facet, 'collapsed-facet')) {
                self.hideFacet();
            } else {
                addClass(self.facet, 'expanded-facet');
            }
            if (typeof self.facetExpandCollapse !== 'undefined' && self.facetExpandCollapse) {
                addEvent(self.facetExpandCollapse, 'click', function() {
                    if (hasClass(self.facet, 'expanded-facet')) {
                        self.hideFacet();
                    } else {
                        self.showFacet();
                    }
                    return false;
                });
            }
        }
    }
}
;
Facets.prototype.showFacet = function() {
    var self = this;
    if (self.facetExpandCollapse && self.facetExpandCollapse.getAttribute('data-hide-label') != null) {
        self.facetExpandCollapse.innerHTML = self.facetExpandCollapse.getAttribute('data-hide-label');
    }
    removeClass(self.facet, 'collapsed-facet');
    addClass(self.facet, 'expanded-facet');
    var facetNameEncoded = encodeURIComponent(self.facetName);
    setCookie(facetNameEncoded, "expanded", 30);
}
;
Facets.prototype.hideFacet = function() {
    var self = this;
    if (self.facetExpandCollapse && self.facetExpandCollapse.getAttribute('data-show-label') != null) {
        self.facetExpandCollapse.innerHTML = self.facetExpandCollapse.getAttribute('data-show-label');
    }
    removeClass(self.facet, 'expanded-facet');
    addClass(self.facet, 'collapsed-facet');
    var facetNameEncoded = encodeURIComponent(self.facetName);
    setCookie(facetNameEncoded, "collapsed", 30);
}
;
function FacetForms() {
    this.facetForm;
    this.renderer;
}
FacetForms.prototype.resetForm = function(facetForm) {
    facetForm.reset();
}
;
FacetForms.prototype.attachChangeEvent = function(facetForm) {
    var self = this;
    self.facetForm = facetForm;
    var container = getElementsByClassName(self.facetForm, 'apply-filters-container');
    self.renderer = (container !== null && typeof container !== 'undefined' && container.length > 0) ? Tempo.prepare(container[0]) : null;
    $(self.facetForm).on('change', function() {
        self.showSubmitButton();
    });
}
;
FacetForms.prototype.showSubmitButton = function() {
    var self = this;
    var submitButton = getElementsByClassName(self.facetForm, 'submit')[0];
    if (typeof submitButton !== 'undefined' && submitButton) {
        submitButton.style.display = 'block';
    }
    if (self.facetForm && self.facetForm.getAttribute('data-check-result-count') != null) {
        var checkResultCount = self.facetForm.getAttribute('data-check-result-count');
    }
    if (checkResultCount === 'true') {
        if (self.facetForm && self.facetForm.getAttribute('data-service-url') != null) {
            var serviceUrl = self.facetForm.getAttribute('data-service-url');
            var query = $(self.facetForm).serialize();
            var action = serviceUrl + '?' + query;
            jQuery.ajax({
                url: action,
                type: 'GET',
                async: true,
                success: function(data) {
                    var hits = (typeof data !== 'undefined' && data !== '') ? parseInt(data) : 0;
                    var displayData = {
                        hits: hits
                    };
                    if (hits === 0) {
                        submitButton.disabled = true;
                    } else {
                        submitButton.disabled = false;
                    }
                    if (self.renderer !== null) {
                        self.renderer.render(displayData);
                    }
                }
            });
        }
    }
}
;
function initFilters(elem) {
    var filterLists = getElementsByClassName(elem, 'filter-list');
    if (typeof filterLists !== 'undefined') {
        for (var i = 0; i < filterLists.length; i++) {
            var filter = new Filters();
            filter.attachMoreEvent(filterLists[i]);
            if (hasClass(filterLists[i], 'hierarchical')) {
                filter.attachExpandEvent(filterLists[i]);
            }
        }
    }
}
function initFacets(elem) {
    var facets = getElementsByClassName(elem, 'facet');
    if (typeof facets !== 'undefined') {
        for (var i = 0; i < facets.length; i++) {
            var facet = new Facets();
            facet.attachExpandCollapseEvent(facets[i]);
        }
    }
}
function initFacetForms(elem) {
    var facetForms = getElementsByClassName(elem, 'filter-list-form');
    if (typeof facetForms !== 'undefined') {
        for (var i = 0; i < facetForms.length; i++) {
            var facetForm = new FacetForms();
            facetForm.resetForm(facetForms[i]);
            facetForm.attachChangeEvent(facetForms[i]);
        }
    }
}
function clickableParent(selectors) {
    var selector = selectors.split(", ");
    for (var i = 0; i < selector.length; i++) {
        var s = selector[i];
        jQuery(s + " a").each(function() {
            var url = jQuery(this).attr('href');
            jQuery(this).parents(selector[i]).bind("click", function() {
                location.href = url;
                return false;
            });
        });
    }
}
function setCookie(c_name, value, expiredays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + expiredays);
    document.cookie = c_name + "=" + escape(value) + ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString());
}
function getCookie(c_name) {
    var c_start, c_end;
    if (document.cookie.length > 0) {
        c_start = document.cookie.indexOf(c_name + "=");
        if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1)
                c_end = document.cookie.length;
            return unescape(document.cookie.substring(c_start, c_end));
        }
    }
    return "";
}
function getWidgetProperty(widget, property) {
    console.warn("Calling deprecated function!");
    var classString = jQuery(widget + ":first").attr('class');
    var classes = classString.split(' ');
    for (var i in classes) {
        var cssProperty = classes[i].split('-');
        if (cssProperty[0] == property) {
            return cssProperty[1];
        }
    }
}
var TWIGKIT = function(parameters) {
    if (typeof parameters != 'undefined') {
        for (var property in parameters) {
            if (typeof this[property] != 'undefined') {
                this[property] = parameters[property];
            }
        }
    }
};
TWIGKIT.prototype = {
    createFilter: function(field, queryValue, displayValue, exclude) {
        if (exclude) {
            exclude = '-';
        } else {
            exclude = '';
        }
        if (queryValue == displayValue) {
            return exclude + field + '["' + this.encode(queryValue) + '"]';
        } else {
            return exclude + field + '["' + this.encode(queryValue) + '"]' + '["' + this.encode(displayValue) + '"]';
        }
    },
    createDateFilter: function(field, direction, date, displayValue) {
        if (direction == 'to') {
            return field + '[,' + date + ']' + '["' + this.encode(displayValue) + '"]';
        } else {
            return field + '[' + date + ',]' + '["' + this.encode(displayValue) + '"]';
        }
    },
    createRangeFilter: function(field, from, to, displayValue) {
        return createRangeFilter(field, from, to, displayValue, false, false);
    },
    createRangeFilter: function(field, from, to, displayValue, fromExclusive, toExclusive) {
        var leftBracket = fromExclusive ? '(' : '[';
        var rightBracket = toExclusive ? ')' : ']';
        if (displayValue) {
            return field + leftBracket + from + ',' + to + rightBracket + '["' + this.encode(displayValue) + '"]';
        } else {
            return field + leftBracket + from + ',' + to + rightBracket;
        }
    },
    addFilter: function(queryString, filter) {
        return queryString + '&f=' + filter;
    },
    parseFilter: function(filterString) {
        var filter = {};
        filter['value'] = {};
        var regex = /(^.*)\["(.*)"\]\["(.*)"\]/;
        var match = regex.exec(filterString);
        filter['field'] = (match !== null) ? match[1] : '';
        filter['value']['actual'] = (match !== null) ? match[2] : '';
        filter['value']['display'] = (match !== null) ? match[3] : '';
        return filter;
    },
    encode: function(string) {
        string = string.replace(/%/g, '%25');
        string = string.replace('&', '%26');
        string = string.replace('"', '%22');
        string = string.replace('#', '%23');
        string = string.replace('+', '%2B');
        return string;
    }
};
function TwigkitFunctionArray() {
    this.groups = new Array();
    this.funcs = new Array();
}
TwigkitFunctionArray.prototype.add = function(group, f) {
    if (typeof f == "object") {
        return;
    } else if (typeof f != "function") {
        f = new Function(f);
    }
    if (typeof this.funcs[group] === 'undefined') {
        this.funcs[group] = new Array();
        this.groups[this.groups.length] = group;
    }
    this.funcs[group][this.funcs[group].length] = f;
}
;
TwigkitFunctionArray.prototype.executeAll = function() {
    for (var g = 0; g < this.groups.length; g++) {
        var group = this.groups[g];
        this.execute(group);
    }
}
;
TwigkitFunctionArray.prototype.execute = function(group) {
    for (var i = 0; i < this.funcs[group].length; i++) {
        this.funcs[group][i]();
    }
}
;
var TwigkitRenderCallbacks = new TwigkitFunctionArray();
function twigkitRenderFinishedCallback(key) {
    TwigkitRenderCallbacks.execute(key);
}
$(document).ready(function() {
    TwigkitRenderCallbacks.executeAll();
});
var _oldShow = jQuery.fn.show;
jQuery.fn.show = function(speed, oldCallback) {
    return jQuery(this).each(function() {
        var obj = $(this);
        var newCallback = function() {
            if (jQuery.isFunction(oldCallback)) {
                oldCallback.apply(obj);
            }
            obj.trigger('afterShow');
        };
        obj.trigger('beforeShow');
        _oldShow.apply(obj, [speed, newCallback]);
    });
}
;
function ActivityTracking() {
    $(".track").each(function() {
        var trackmeElem = this;
        var trackme = $(this);
        trackmeElem.onmousedown = function(e) {
            var img = document.createElement('img');
            var src = (tkAppContext && tkAppContext !== 'undefined') ? tkAppContext + "/twigkit/services/activity/click?" : "/twigkit/services/activity/click?";
            $.each(trackmeElem.attributes, function(i, attr) {
                var name = attr.name;
                var value = attr.value;
                src += name + '=' + value + '&';
            });
            img.src = src;
        }
        ;
    });
}
TwigkitRenderCallbacks.add("ActivityTracking", ActivityTracking);
(function(jQuery) {
    jQuery.fn.GSAPreviewViewer = function(options) {
        var self = $(this);
        var settings = $.extend({
            'imageUrl': self.attr('data-url'),
            'currentPage': parseInt(self.attr('data-current-page')),
            'availablePages': parseInt(self.attr('data-available-pages')) - 1,
            'title': self.attr('data-title'),
            'documentUrl': self.attr('data-document-url'),
            'secure': self.attr('data-secure')
        }, options);
        self.bind('click', function(e) {
            var url = calculatePreviewPageUrl(settings.imageUrl, settings.currentPage, settings.secure);
            var previewViewerDiv = $("div.preview-viewer");
            if (previewViewerDiv.length == 0) {
                previewViewerDiv = document.createElement('div');
                $(previewViewerDiv).addClass('preview-viewer');
                $('body').append($(previewViewerDiv));
            } else {
                $(previewViewerDiv).empty();
            }
            $(previewViewerDiv).append('<div class="preview-viewer-mask"></div><div class="preview-viewer-container"><div class="preview-viewer-body"><h4 class="title"><a href="#" class="preview-viewer-cancel">&times;</a></h4><div class="preview-viewer-liner"><a class="previous"></a><figure></figure><a class="next"></a></div></div></div>');
            $(previewViewerDiv).find("h4").prepend('<a class="title-text" href="' + settings.documentUrl + '">' + settings.title + '</a>');
            $(previewViewerDiv).find("figure").css('background-image', 'url(' + url + ')');
            $(previewViewerDiv).find(".preview-viewer-cancel").click(function(e) {
                e.preventDefault();
                $(previewViewerDiv).removeClass("loaded");
                setTimeout(function() {
                    $(previewViewerDiv).remove();
                }, 333);
            });
            $(previewViewerDiv).find('.preview-viewer-container').click(function(e) {
                e.stopPropagation();
            });
            $("body").click(function() {
                $(previewViewerDiv).removeClass("loaded");
                setTimeout(function() {
                    $(previewViewerDiv).remove();
                }, 333);
            });
            var nextButton = $(previewViewerDiv).find("a.next");
            nextButton.click(function(e) {
                e.stopPropagation();
                settings.currentPage = settings.currentPage + 1;
                var newUrl = calculatePreviewPageUrl(settings.imageUrl, settings.currentPage, settings.secure);
                $(previewViewerDiv).find("figure").css('background-image', 'url(' + newUrl + ')');
                updateButtonVisibility(previewViewerDiv, settings);
                return false;
            });
            var previousButton = $(previewViewerDiv).find("a.previous");
            previousButton.click(function(e) {
                e.stopPropagation();
                settings.currentPage = settings.currentPage - 1;
                var newUrl = calculatePreviewPageUrl(settings.imageUrl, settings.currentPage, settings.secure);
                $(previewViewerDiv).find("figure").css('background-image', 'url(' + newUrl + ')');
                updateButtonVisibility(previewViewerDiv, settings);
                return false;
            });
            updateButtonVisibility(previewViewerDiv, settings);
            setTimeout(function() {
                $(previewViewerDiv).addClass("loaded");
            }, 25);
            e.stopPropagation();
            return false;
        });
    }
    function calculatePreviewPageUrl(imageUrl, pageNumber, secure) {
        if (secure == 'true') {
            var tk = new TWIGKIT();
            var calculatedUrl = imageUrl + "%3F" + tk.encode('page=' + pageNumber + '&size=772');
        } else {
            var calculatedUrl = imageUrl + '?page=' + pageNumber + '&size=772';
        }
        return calculatedUrl;
    }
    function updateButtonVisibility(previewViewerDiv, settings) {
        var nextButton = $(previewViewerDiv).find("a.next");
        var previousButton = $(previewViewerDiv).find("a.previous");
        if (settings.currentPage < settings.availablePages) {
            nextButton.show();
        } else if (settings.currentPage == settings.availablePages) {
            nextButton.hide();
        }
        if (settings.currentPage > 0) {
            previousButton.show();
        } else if (settings.currentPage == 0) {
            previousButton.hide();
        }
    }
})(jQuery);
function GSAPreviewViewer() {
    var instances = jQuery('.image-viewer');
    instances.each(function(index) {
        var settings = {};
        jQuery(this).GSAPreviewViewer(settings);
    });
}
TwigkitRenderCallbacks.add("GSAPreviewViewer", GSAPreviewViewer);
(function(jQuery) {
    jQuery.fn.loginForm = function() {
        var self = $(this);
        var rememberMeCheckbox = self.find("[name='remember_me']");
        if (rememberMeCheckbox && getCookie('remember_me_setting') != "") {
            if (getCookie('remember_me_setting') === 'true') {
                rememberMeCheckbox.prop('checked', true);
                self.find("[name='_spring_security_remember_me']").val('true');
            } else {
                rememberMeCheckbox.prop('checked', false);
                self.find("[name='_spring_security_remember_me']").val('false');
            }
        }
        rememberMeCheckbox.click(function() {
            var rememberMeField = self.find("[name='_spring_security_remember_me']");
            if (rememberMeCheckbox.prop('checked')) {
                rememberMeField.val('true');
                setCookie('remember_me_setting', 'true', 7);
            } else {
                rememberMeField.val('false');
                setCookie('remember_me_setting', 'false', 7);
            }
        });
    }
})(jQuery);
function LoginForm() {
    jQuery('.login').each(function() {
        jQuery(this).loginForm();
    });
}
TwigkitRenderCallbacks.add("LoginForm", LoginForm);
var AnnotationUtils = (function(utils) {
    utils.parseInt = function(val) {
        return (typeof val === 'undefined' || (typeof val === 'string' && val === '')) ? 0 : parseInt(val);
    }
    ;
    utils.nvl = function(val) {
        return (typeof val === 'undefined') ? '' : val;
    }
    ;
    return utils;
})({});
var AnnotationListUtils = (function(utils) {
    utils.remove = function(container, elem, eventListener) {
        var type = container.attr("class").split("-list")[0].replace("-", " ");
        var serviceUrl = container.attr("data-service-del");
        var requestToken = container.attr("data-request-token");
        var deleteMsg = 'Are you sure you want to remove this ' + type + '?';
        if (container.attr("data-delete-msg") !== 'undefined') {
            deleteMsg = container.attr("data-delete-msg");
        }
        if (confirm(deleteMsg)) {
            var target = elem.attr("data-target");
            var id = elem.attr("data-id");
            var item = {
                id: id,
                target: target
            };
            var url = serviceUrl + '/' + item.id;
            if (requestToken !== 'undefined') {
                url = url + '?twigkitRequestToken=' + requestToken;
            }
            jQuery.ajax({
                url: url,
                async: false,
                type: 'DELETE'
            }).done(function() {
                eventListener.notify(new AnnotationEvent(item,AnnotationEvent.Types.REMOVE));
            }).fail(function() {
                alert("An error came up when trying to delete this " + type + " - please try again later");
            });
        }
        return false;
    }
    ;
    return utils;
})({});
function AnnotationEvent(item, type) {
    'use strict';
    this.item = item;
    this.type = type;
}
AnnotationEvent.Types = {
    "ADD": 0,
    "REMOVE": 1
};
function AnnotationEventListener() {
    this.lists = [];
    this.controllers = {};
}
AnnotationEventListener.prototype = {
    addList: function(list) {
        this.lists.push(list);
    },
    addController: function(controller) {
        this.controllers[controller.target] = controller;
    },
    notify: function(event) {
        var i, j;
        if (event.type === AnnotationEvent.Types.ADD) {
            var isArray = $.isArray(event.item);
            for (i = 0; i < this.lists.length; i++) {
                if (isArray) {
                    for (j = 0; j < event.item.length; j++) {
                        this.lists[i].add(event.item[j]);
                    }
                } else {
                    this.lists[i].add(event.item);
                }
            }
        } else if (event.type === AnnotationEvent.Types.REMOVE) {
            for (i = 0; i < this.lists.length; i++) {
                this.lists[i].remove(event.item);
            }
            var ctrl = this.controllers[event.item.target];
            if (ctrl !== undefined) {
                ctrl.deactivate();
                this.controllers[event.item.target] = undefined;
            } else {
                console.error('Unable to delete annotation - no controller found for target ' + event.item.target);
            }
        }
    }
}
function AnnotationList(container, type, eventListener) {
    this.serviceUrl = container.attr('data-service');
    this.user = AnnotationUtils.parseInt(container.attr('data-user'));
    this.topic = AnnotationUtils.parseInt(container.attr('data-topic'));
    this.target = AnnotationUtils.nvl(container.attr('data-target'));
    this.collection = AnnotationUtils.nvl(container.attr('data-collection'));
    this.increment = AnnotationUtils.parseInt(container.attr('data-show-more'));
    this.emptyListMessage = container.children('.empty-message');
    this.requestToken = AnnotationUtils.nvl(container.attr('data-request-token'));
    this.type = type;
    this.container = container;
    this._remoteHasMore = (container.attr('data-has-more') === 'true');
    this.eventListener = eventListener;
    this.sort = AnnotationList.Sort.DESCENDING;
    var self = this;
    this.renderer = Tempo.prepare(container, {
        'escape': false
    });
    this.renderer.when(TempoEvent.Types.ITEM_RENDER_COMPLETE, function(event) {
        $(event.element).children('a.del').click(function() {
            AnnotationListUtils.remove(self.container, $(this).parent(), self.eventListener);
            return false;
        });
    });
    this.linkContainer = container.children('.more-less-links');
    this.showMoreLink = this.linkContainer.children('.more-link');
    this.showLessLink = this.linkContainer.children('.less-link');
    var items = container.children('.' + this.type);
    this.initialLength = AnnotationUtils.parseInt(container.attr('data-show'));
    this.window = this.initialLength;
    this.length = items.length;
    this._dirty = false;
    if (this.increment <= 0) {
        alert('Attribute show-more must be positive');
    }
    if (this.showMoreLink !== undefined) {
        this.showMoreLink.click((function(list) {
            return function() {
                list._extendWindow();
                list._refresh();
            }
            ;
            return false;
        }(this)));
    }
    if (this.showLessLink !== undefined) {
        this.showLessLink.click((function(list) {
            return function() {
                list._resetWindow();
                list._refresh();
            }
            ;
            return false;
        }(this)));
    }
    items.children('a.del').click(function() {
        AnnotationListUtils.remove(self.container, $(this).parent(), self.eventListener);
        return false;
    });
}
AnnotationList.Sort = {
    "DESCENDING": 0,
    "ASCENDING": 1
};
AnnotationList.prototype = {
    setSort: function(sort) {
        this.sort = sort;
    },
    items: function() {
        return this.container.children('.' + this.type);
    },
    add: function(data) {
        if (this.sort === AnnotationList.Sort.ASCENDING) {
            this.append([data], this._remoteHasMore);
        } else {
            this.prepend(data);
        }
    },
    append: function(data, remoteHasMore) {
        if (data.length > 0) {
            this.renderer.append(data);
            this.length = this.items().length;
        }
        this._remoteHasMore = remoteHasMore;
    },
    lastDate: function() {
        var annotations = this.items();
        if (annotations.length > 0) {
            var last = $(annotations[annotations.length - 1]);
            var lastCreated = last.attr('data-created');
            var lastCreatedMs = parseInt(lastCreated);
            var offset = lastCreatedMs - 1;
            return offset;
        }
        return 0;
    },
    matches: function(item) {
        var isTrivial = (this.user === 0) && (this.topic === 0) && (this.target === '') && (this.collection === '');
        return !isTrivial && ((this.user === 0 || (item.creator !== undefined && AnnotationUtils.parseInt(item.creator.id) === this.user)) && (this.topic === 0 || (item.topic !== undefined && AnnotationUtils.parseInt(item.topic.id) === this.topic)) && (this.target === '' || AnnotationUtils.nvl(item.target) === this.target) && (this.collection === '' || AnnotationUtils.nvl(item.collection) === this.collection));
    },
    prepend: function(item) {
        if (this.matches(item)) {
            this.renderer.prepend(item);
            this.length = this.items().length;
            this._refresh();
        }
    },
    remove: function(item) {
        var list = this;
        this.items().each(function(idx, li) {
            if ($(li).attr('data-id') == item.id) {
                $(li).remove();
                list.length = list.items().length;
                list._dirty = true;
                list._refresh();
                return;
            }
        });
    },
    _updateControls: function() {
        var linkVisible = false;
        if (this.showLessLink !== undefined && this.showLessLink.length > 0) {
            if ((this.window === this.initialLength) || (this.length <= this.initialLength)) {
                this.showLessLink[0].style.display = 'none';
            } else {
                this.showLessLink[0].style.display = '';
                linkVisible = true;
            }
        }
        if (this.showMoreLink !== undefined && this.showMoreLink.length > 0) {
            if (this.window < this.length || this._remoteHasMore) {
                linkVisible = true;
                this.showMoreLink[0].style.display = '';
            } else {
                this.showMoreLink[0].style.display = 'none';
            }
        }
        if (linkVisible) {
            this.linkContainer[0].style.display = '';
        } else {
            this.linkContainer[0].style.display = 'none';
        }
        var currentClassName = this.container[0].className;
        if (this.length === 0) {
            this.emptyListMessage[0].style.display = '';
            this.container[0].className = currentClassName + ' empty';
        } else {
            this.emptyListMessage[0].style.display = 'none';
            this.container[0].className = currentClassName.replace(/\b empty\b/, '');
        }
    },
    _refresh: function() {
        if (this._remoteHasMore && (this.window > this.length || (this._dirty && this.window === this.length))) {
            var missing = this.window - this.length;
            var data = ({
                target: this.target,
                topic: this.topic,
                user: this.user,
                offset: this.lastDate(),
                results: missing + 1
            });
            this.renderer.starting();
            var self = this;
            jQuery.ajax({
                url: this.serviceUrl,
                type: 'GET',
                async: false,
                data: data,
                dataType: "json",
                success: function(data) {
                    var remoteHasMore = false;
                    if (data.length > missing) {
                        remoteHasMore = true;
                        data = data.splice(0, data.length - 1);
                    }
                    if (data.length > 0) {
                        self.append(data, remoteHasMore);
                    }
                }
            });
            this._dirty = false;
        }
        var items = this.items();
        var window = Math.min(this.window, this.length);
        var i;
        for (i = 0; i < window; i++) {
            items[i].style.display = '';
        }
        for (i = window; i < this.length; i++) {
            items[i].style.display = 'none';
        }
        this._updateControls();
    },
    _resetWindow: function() {
        this._setWindow(this.initialLength);
    },
    _extendWindow: function() {
        this._setWindow(this.window + this.increment);
    },
    _setWindow: function(len) {
        this.window = len;
    }
};
function AnnotationController(container, eventListener, payloadService) {
    this.serviceUrl = container.attr('data-service');
    this.annotationLink = container.children('.action');
    this.annotationStats = container.children('.stats');
    this.id = AnnotationUtils.parseInt(container.attr('data-id'));
    this.target = AnnotationUtils.nvl(container.attr('data-target'));
    this.topic = AnnotationUtils.parseInt(container.attr('data-topic'));
    this.user = AnnotationUtils.parseInt(container.attr('data-user'));
    this.userToken = container.attr('data-user-token');
    this.requestToken = AnnotationUtils.nvl(container.attr('data-request-token'));
    this.payloadService = payloadService;
    this.container = container;
    this.eventListener = eventListener;
    var self = this;
    this.annotationLink.click(function() {
        if (!self.isActive()) {
            self.create();
        } else {
            self.remove();
        }
        return false;
    });
}
AnnotationController.prototype = {
    create: function() {
        var data = this.payloadService(this.container, this.id, this.target, this.topic, this.requestToken);
        if (this.requestToken !== 'undefined') {
            data['twigkitRequestToken'] = this.requestToken;
        }
        var self = this;
        jQuery.ajax({
            url: this.serviceUrl,
            type: 'POST',
            async: false,
            data: data,
            dataType: "json",
            beforeSend: function(request) {
                if (self.userToken !== 'undefined' && self.userToken !== '') {
                    request.setRequestHeader("Twigkit-User-Token", self.userToken);
                }
            },
            success: function(response) {
                self.eventListener.addController(self);
                self.eventListener.notify(new AnnotationEvent(response,AnnotationEvent.Types.ADD));
                self.activate(response.id);
            }
        });
    },
    remove: function() {
        var self = this;
        var item = {
            id: this.id,
            target: this.target
        };
        var url = this.serviceUrl + '/' + item.id;
        if (this.requestToken !== 'undefined') {
            url = url + '?twigkitRequestToken=' + this.requestToken;
        }
        jQuery.ajax({
            url: url,
            type: 'DELETE',
            async: false,
            dataType: 'json',
            beforeSend: function(request) {
                if (self.userToken !== 'undefined' && self.userToken !== '') {
                    request.setRequestHeader("Twigkit-User-Token", self.userToken);
                }
            },
            success: function() {
                self.eventListener.notify(new AnnotationEvent(item,AnnotationEvent.Types.REMOVE));
            },
            error: function(e) {
                alert("An error came up when trying to delete this " + self.type);
            }
        });
    },
    isActive: function() {
        return this.id > 0;
    },
    activate: function(id) {
        var annotationLink = this.annotationLink;
        var annotationStats = this.annotationStats;
        var activeLabel = annotationLink.attr('data-al');
        var activeTooltip = annotationLink.attr('data-at');
        var singularLabel = annotationStats.attr('data-sl');
        var pluralLabel = annotationStats.attr('data-pl');
        var singularTooltip = annotationStats.attr('data-st');
        var pluralTooltip = annotationStats.attr('data-pt');
        annotationLink.addClass('active');
        annotationLink.text(activeLabel);
        annotationLink.attr('title', activeTooltip);
        this.setId(id);
        var count;
        if (annotationStats.html()) {
            count = annotationStats.html().split(' ')[0] * 1 + 1;
        } else {
            count = 1;
        }
        if (count > 1) {
            annotationStats.html(count + ' ' + pluralLabel);
            annotationStats.attr('title', count + ' ' + pluralTooltip);
        } else if (count === 1) {
            annotationStats.html(count + ' ' + singularLabel);
            annotationStats.attr('title', count + ' ' + singularTooltip);
        } else {
            annotationStats.html('');
            annotationStats.attr('title', '');
        }
    },
    deactivate: function() {
        var annotationLink = this.annotationLink;
        var annotationStats = this.annotationStats;
        var label = annotationLink.attr('data-l');
        var tooltip = annotationLink.attr('data-t');
        var singularLabel = annotationStats.attr('data-sl');
        var pluralLabel = annotationStats.attr('data-pl');
        var singularTooltip = annotationStats.attr('data-st');
        var pluralTooltip = annotationStats.attr('data-pt');
        annotationLink.html(label);
        annotationLink.attr('title', tooltip);
        annotationLink.removeClass('active');
        this.setId('');
        var count;
        if (annotationStats.html()) {
            count = annotationStats.html().split(' ')[0] * 1 - 1;
        } else {
            count = 0;
        }
        if (count > 1) {
            annotationStats.html(count + ' ' + pluralLabel);
            annotationStats.attr('title', count + ' ' + pluralTooltip);
        } else if (count === 1) {
            annotationStats.html(count + ' ' + singularLabel);
            annotationStats.attr('title', count + ' ' + singularTooltip);
        } else {
            annotationStats.html('');
            annotationStats.attr('title', '');
        }
    },
    setId: function(id) {
        this.container.attr('data-id', id);
        this.id = AnnotationUtils.parseInt(id);
    }
};
function socialBookmarkCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".bookmark-list").each(function() {
        var list = new AnnotationList($(this),"bookmark",eventListener);
        eventListener.addList(list);
    });
    jQuery(".bookmark").each(function() {
        var controller = new AnnotationController($(this),eventListener,function(container, id, target, topic) {
            var title = AnnotationUtils.nvl(container.attr('data-title'));
            var url = AnnotationUtils.nvl(container.attr('data-url'));
            var collection = AnnotationUtils.nvl(container.attr('data-collection'));
            return ( {
                id: id,
                target: target,
                topic: topic,
                title: title,
                url: url,
                collection: collection
            }) ;
        }
        );
        if (controller.isActive()) {
            eventListener.addController(controller);
        }
    });
}
TwigkitRenderCallbacks.add("socialBookmarkCallbacks", socialBookmarkCallbacks);
function socialTagCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".tag-list").each(function() {
        var list = new AnnotationList($(this),"tag",eventListener);
        eventListener.addList(list);
    });
    var tagForms = getElementsByClassName(document, 'tag-form');
    if (tagForms) {
        for (var i = 0; i < tagForms.length; i++) {
            capsize(tagForms[i], 'capsize');
        }
    }
    jQuery('.tag-form').submit(function() {
        var self = this;
        jQuery.post($(this).attr("action"), $(this).serialize(), function(response) {
            eventListener.notify(new AnnotationEvent(response,AnnotationEvent.Types.ADD));
            self.reset();
            $("body").trigger("click");
        }, "json");
        return false;
    });
}
TwigkitRenderCallbacks.add("socialTagCallbacks", socialTagCallbacks);
function socialCommentCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".comment-list").each(function() {
        var list = new AnnotationList($(this),"comment",eventListener);
        eventListener.addList(list);
    });
    jQuery('.comment-form fieldset').each(function(idx, fields) {
        var textArea = $(fields).children('[name="text"]');
        var submitButton = $(fields).children('.button');
        textArea.on('change keydown paste input', function() {
            if (textArea.val() === "") {
                submitButton[0].disabled = true;
                submitButton.addClass("disabled");
            } else {
                submitButton[0].disabled = false;
                submitButton.removeClass("disabled");
            }
        });
        return true;
    });
    jQuery('.comment-form').submit(function() {
        var self = this;
        var submitButton = getElementsByClassName(this[0], 'button')[0];
        jQuery.ajax({
            url: $(this).attr("action"),
            type: "POST",
            async: false,
            data: $(this).serialize(),
            dataType: "json",
            success: function(response) {
                eventListener.notify(new AnnotationEvent(response,AnnotationEvent.Types.ADD));
                self.reset();
                submitButton.disabled = true;
                $(submitButton).addClass("disabled");
            }
        })
        return false;
    });
}
TwigkitRenderCallbacks.add("socialCommentCallbacks", socialCommentCallbacks);
function socialLikeCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".like").each(function() {
        var controller = new AnnotationController($(this),eventListener,function(container, id, target, topic) {
            var collection = AnnotationUtils.nvl(container.attr('data-collection'));
            return ( {
                id: id,
                target: target,
                topic: topic,
                collection: collection
            }) ;
        }
        );
        if (controller.isActive()) {
            eventListener.addController(controller);
        }
    });
}
TwigkitRenderCallbacks.add("socialLikeCallbacks", socialLikeCallbacks);
function socialSavedQueryCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".saved-query-list").each(function() {
        var list = new AnnotationList($(this),"saved-query",eventListener);
        eventListener.addList(list);
    });
    jQuery('.saved-query-form').submit(function() {
        var self = this;
        var nameInput = $(this).find("input[name='name']");
        if (nameInput.val() === undefined || nameInput.val().trim() === "") {
            alert("Please give a name for your saved search");
            return false;
        }
        var userToken = $(this).attr("data-user-token");
        var alreadyExistsMessage = $(this).attr("data-already-exists-msg");
        var serviceUrl = $(this).attr("action");
        jQuery.ajax({
            url: serviceUrl,
            type: 'POST',
            async: false,
            data: $(this).serialize(),
            dataType: "json",
            beforeSend: function(request) {
                if (userToken !== 'undefined' && userToken !== '') {
                    request.setRequestHeader("Twigkit-User-Token", userToken);
                }
            },
            success: function(response) {
                if (response.status === 'NAME_ALREADY_EXISTS') {
                    if (alreadyExistsMessage !== 'undefined') {
                        alert(alreadyExistsMessage);
                    } else {
                        alert("A saved search with this name already exists. Please choose a different name.");
                    }
                } else {
                    eventListener.notify(new AnnotationEvent(response.data,AnnotationEvent.Types.ADD));
                    self.reset();
                    $("body").trigger("click");
                }
            }
        });
        return false;
    });
}
TwigkitRenderCallbacks.add("socialSavedQueryCallbacks", socialSavedQueryCallbacks);
jQuery(document).ready(function() {
    $("ol.result-list li").each(function() {
        var result = $(this);
        var commentAction = result.find(".comment .action");
        var commentForm = result.find("form.comment-form");
        commentAction.on('click', function() {
            if (commentAction.is('.active')) {
                commentForm.hide();
                commentAction.removeClass("active");
            } else {
                commentForm.show();
                commentAction.addClass("active");
            }
        });
        commentForm.on('submit', function() {
            commentForm.hide();
            commentAction.removeClass("active");
        });
    });
});
function socialTopicCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".topic-list").each(function() {
        var list = new AnnotationList($(this),"topic",eventListener);
        eventListener.addList(list);
    });
    jQuery('.topic-form').submit(function() {
        var self = this;
        var nameInput = $(this).find("input[name='title']");
        if (nameInput.val() === undefined || nameInput.val().trim() === "") {
            alert("Please enter a value for the title of the topic");
            return false;
        }
        var userToken = $(this).attr("data-user-token");
        var serviceUrl = $(this).attr("action");
        jQuery.ajax({
            url: serviceUrl,
            type: 'POST',
            async: false,
            data: $(this).serialize(),
            dataType: "json",
            beforeSend: function(request) {
                if (userToken !== 'undefined' && userToken !== '') {
                    request.setRequestHeader("Twigkit-User-Token", userToken);
                }
            },
            success: function(response) {
                if (response.status === 'NAME_ALREADY_EXISTS') {
                    alert("This name already exists. Please choose a different name.");
                } else {
                    eventListener.notify(new AnnotationEvent(response.data,AnnotationEvent.Types.ADD));
                    self.reset();
                    $("body").trigger("click");
                }
            }
        });
        return false;
    });
}
TwigkitRenderCallbacks.add("socialTopicCallbacks", socialTopicCallbacks);
!function(a) {
    var b, c, d = "0.4.2", e = "hasOwnProperty", f = /[\.\/]/, g = "*", h = function() {}, i = function(a, b) {
        return a - b
    }, j = {
        n: {}
    }, k = function(a, d) {
        a = String(a);
        var e, f = c, g = Array.prototype.slice.call(arguments, 2), h = k.listeners(a), j = 0, l = [], m = {}, n = [], o = b;
        b = a,
        c = 0;
        for (var p = 0, q = h.length; q > p; p++)
            "zIndex"in h[p] && (l.push(h[p].zIndex),
            h[p].zIndex < 0 && (m[h[p].zIndex] = h[p]));
        for (l.sort(i); l[j] < 0; )
            if (e = m[l[j++]],
            n.push(e.apply(d, g)),
            c)
                return c = f,
                n;
        for (p = 0; q > p; p++)
            if (e = h[p],
            "zIndex"in e)
                if (e.zIndex == l[j]) {
                    if (n.push(e.apply(d, g)),
                    c)
                        break;
                    do
                        if (j++,
                        e = m[l[j]],
                        e && n.push(e.apply(d, g)),
                        c)
                            break;
                    while (e)
                } else
                    m[e.zIndex] = e;
            else if (n.push(e.apply(d, g)),
            c)
                break;
        return c = f,
        b = o,
        n.length ? n : null
    };
    k._events = j,
    k.listeners = function(a) {
        var b, c, d, e, h, i, k, l, m = a.split(f), n = j, o = [n], p = [];
        for (e = 0,
        h = m.length; h > e; e++) {
            for (l = [],
            i = 0,
            k = o.length; k > i; i++)
                for (n = o[i].n,
                c = [n[m[e]], n[g]],
                d = 2; d--; )
                    b = c[d],
                    b && (l.push(b),
                    p = p.concat(b.f || []));
            o = l
        }
        return p
    }
    ,
    k.on = function(a, b) {
        if (a = String(a),
        "function" != typeof b)
            return function() {}
            ;
        for (var c = a.split(f), d = j, e = 0, g = c.length; g > e; e++)
            d = d.n,
            d = d.hasOwnProperty(c[e]) && d[c[e]] || (d[c[e]] = {
                n: {}
            });
        for (d.f = d.f || [],
        e = 0,
        g = d.f.length; g > e; e++)
            if (d.f[e] == b)
                return h;
        return d.f.push(b),
        function(a) {
            +a == +a && (b.zIndex = +a)
        }
    }
    ,
    k.f = function(a) {
        var b = [].slice.call(arguments, 1);
        return function() {
            k.apply(null, [a, null].concat(b).concat([].slice.call(arguments, 0)))
        }
    }
    ,
    k.stop = function() {
        c = 1
    }
    ,
    k.nt = function(a) {
        return a ? new RegExp("(?:\\.|\\/|^)" + a + "(?:\\.|\\/|$)").test(b) : b
    }
    ,
    k.nts = function() {
        return b.split(f)
    }
    ,
    k.off = k.unbind = function(a, b) {
        if (!a)
            return k._events = j = {
                n: {}
            },
            void 0;
        var c, d, h, i, l, m, n, o = a.split(f), p = [j];
        for (i = 0,
        l = o.length; l > i; i++)
            for (m = 0; m < p.length; m += h.length - 2) {
                if (h = [m, 1],
                c = p[m].n,
                o[i] != g)
                    c[o[i]] && h.push(c[o[i]]);
                else
                    for (d in c)
                        c[e](d) && h.push(c[d]);
                p.splice.apply(p, h)
            }
        for (i = 0,
        l = p.length; l > i; i++)
            for (c = p[i]; c.n; ) {
                if (b) {
                    if (c.f) {
                        for (m = 0,
                        n = c.f.length; n > m; m++)
                            if (c.f[m] == b) {
                                c.f.splice(m, 1);
                                break
                            }
                        !c.f.length && delete c.f
                    }
                    for (d in c.n)
                        if (c.n[e](d) && c.n[d].f) {
                            var q = c.n[d].f;
                            for (m = 0,
                            n = q.length; n > m; m++)
                                if (q[m] == b) {
                                    q.splice(m, 1);
                                    break
                                }
                            !q.length && delete c.n[d].f
                        }
                } else {
                    delete c.f;
                    for (d in c.n)
                        c.n[e](d) && c.n[d].f && delete c.n[d].f
                }
                c = c.n
            }
    }
    ,
    k.once = function(a, b) {
        var c = function() {
            return k.unbind(a, c),
            b.apply(this, arguments)
        };
        return k.on(a, c)
    }
    ,
    k.version = d,
    k.toString = function() {
        return "You are running Eve " + d
    }
    ,
    "undefined" != typeof module && module.exports ? module.exports = k : "undefined" != typeof define ? define("eve", [], function() {
        return k
    }) : a.eve = k
}(this),
function(a, b) {
    "function" == typeof define && define.amd ? define(["eve"], function(c) {
        return b(a, c)
    }) : b(a, a.eve)
}(this, function(a, b) {
    function c(a) {
        if (c.is(a, "function"))
            return u ? a() : b.on("raphael.DOMload", a);
        if (c.is(a, V))
            return c._engine.create[D](c, a.splice(0, 3 + c.is(a[0], T))).add(a);
        var d = Array.prototype.slice.call(arguments, 0);
        if (c.is(d[d.length - 1], "function")) {
            var e = d.pop();
            return u ? e.call(c._engine.create[D](c, d)) : b.on("raphael.DOMload", function() {
                e.call(c._engine.create[D](c, d))
            })
        }
        return c._engine.create[D](c, arguments)
    }
    function d(a) {
        if ("function" == typeof a || Object(a) !== a)
            return a;
        var b = new a.constructor;
        for (var c in a)
            a[z](c) && (b[c] = d(a[c]));
        return b
    }
    function e(a, b) {
        for (var c = 0, d = a.length; d > c; c++)
            if (a[c] === b)
                return a.push(a.splice(c, 1)[0])
    }
    function f(a, b, c) {
        function d() {
            var f = Array.prototype.slice.call(arguments, 0)
              , g = f.join("␀")
              , h = d.cache = d.cache || {}
              , i = d.count = d.count || [];
            return h[z](g) ? (e(i, g),
            c ? c(h[g]) : h[g]) : (i.length >= 1e3 && delete h[i.shift()],
            i.push(g),
            h[g] = a[D](b, f),
            c ? c(h[g]) : h[g])
        }
        return d
    }
    function g() {
        return this.hex
    }
    function h(a, b) {
        for (var c = [], d = 0, e = a.length; e - 2 * !b > d; d += 2) {
            var f = [{
                x: +a[d - 2],
                y: +a[d - 1]
            }, {
                x: +a[d],
                y: +a[d + 1]
            }, {
                x: +a[d + 2],
                y: +a[d + 3]
            }, {
                x: +a[d + 4],
                y: +a[d + 5]
            }];
            b ? d ? e - 4 == d ? f[3] = {
                x: +a[0],
                y: +a[1]
            } : e - 2 == d && (f[2] = {
                x: +a[0],
                y: +a[1]
            },
            f[3] = {
                x: +a[2],
                y: +a[3]
            }) : f[0] = {
                x: +a[e - 2],
                y: +a[e - 1]
            } : e - 4 == d ? f[3] = f[2] : d || (f[0] = {
                x: +a[d],
                y: +a[d + 1]
            }),
            c.push(["C", (-f[0].x + 6 * f[1].x + f[2].x) / 6, (-f[0].y + 6 * f[1].y + f[2].y) / 6, (f[1].x + 6 * f[2].x - f[3].x) / 6, (f[1].y + 6 * f[2].y - f[3].y) / 6, f[2].x, f[2].y])
        }
        return c
    }
    function i(a, b, c, d, e) {
        var f = -3 * b + 9 * c - 9 * d + 3 * e
          , g = a * f + 6 * b - 12 * c + 6 * d;
        return a * g - 3 * b + 3 * c
    }
    function j(a, b, c, d, e, f, g, h, j) {
        null == j && (j = 1),
        j = j > 1 ? 1 : 0 > j ? 0 : j;
        for (var k = j / 2, l = 12, m = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], n = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], o = 0, p = 0; l > p; p++) {
            var q = k * m[p] + k
              , r = i(q, a, c, e, g)
              , s = i(q, b, d, f, h)
              , t = r * r + s * s;
            o += n[p] * N.sqrt(t)
        }
        return k * o
    }
    function k(a, b, c, d, e, f, g, h, i) {
        if (!(0 > i || j(a, b, c, d, e, f, g, h) < i)) {
            var k, l = 1, m = l / 2, n = l - m, o = .01;
            for (k = j(a, b, c, d, e, f, g, h, n); Q(k - i) > o; )
                m /= 2,
                n += (i > k ? 1 : -1) * m,
                k = j(a, b, c, d, e, f, g, h, n);
            return n
        }
    }
    function l(a, b, c, d, e, f, g, h) {
        if (!(O(a, c) < P(e, g) || P(a, c) > O(e, g) || O(b, d) < P(f, h) || P(b, d) > O(f, h))) {
            var i = (a * d - b * c) * (e - g) - (a - c) * (e * h - f * g)
              , j = (a * d - b * c) * (f - h) - (b - d) * (e * h - f * g)
              , k = (a - c) * (f - h) - (b - d) * (e - g);
            if (k) {
                var l = i / k
                  , m = j / k
                  , n = +l.toFixed(2)
                  , o = +m.toFixed(2);
                if (!(n < +P(a, c).toFixed(2) || n > +O(a, c).toFixed(2) || n < +P(e, g).toFixed(2) || n > +O(e, g).toFixed(2) || o < +P(b, d).toFixed(2) || o > +O(b, d).toFixed(2) || o < +P(f, h).toFixed(2) || o > +O(f, h).toFixed(2)))
                    return {
                        x: l,
                        y: m
                    }
            }
        }
    }
    function m(a, b, d) {
        var e = c.bezierBBox(a)
          , f = c.bezierBBox(b);
        if (!c.isBBoxIntersect(e, f))
            return d ? 0 : [];
        for (var g = j.apply(0, a), h = j.apply(0, b), i = O(~~(g / 5), 1), k = O(~~(h / 5), 1), m = [], n = [], o = {}, p = d ? 0 : [], q = 0; i + 1 > q; q++) {
            var r = c.findDotsAtSegment.apply(c, a.concat(q / i));
            m.push({
                x: r.x,
                y: r.y,
                t: q / i
            })
        }
        for (q = 0; k + 1 > q; q++)
            r = c.findDotsAtSegment.apply(c, b.concat(q / k)),
            n.push({
                x: r.x,
                y: r.y,
                t: q / k
            });
        for (q = 0; i > q; q++)
            for (var s = 0; k > s; s++) {
                var t = m[q]
                  , u = m[q + 1]
                  , v = n[s]
                  , w = n[s + 1]
                  , x = Q(u.x - t.x) < .001 ? "y" : "x"
                  , y = Q(w.x - v.x) < .001 ? "y" : "x"
                  , z = l(t.x, t.y, u.x, u.y, v.x, v.y, w.x, w.y);
                if (z) {
                    if (o[z.x.toFixed(4)] == z.y.toFixed(4))
                        continue;
                    o[z.x.toFixed(4)] = z.y.toFixed(4);
                    var A = t.t + Q((z[x] - t[x]) / (u[x] - t[x])) * (u.t - t.t)
                      , B = v.t + Q((z[y] - v[y]) / (w[y] - v[y])) * (w.t - v.t);
                    A >= 0 && 1.001 >= A && B >= 0 && 1.001 >= B && (d ? p++ : p.push({
                        x: z.x,
                        y: z.y,
                        t1: P(A, 1),
                        t2: P(B, 1)
                    }))
                }
            }
        return p
    }
    function n(a, b, d) {
        a = c._path2curve(a),
        b = c._path2curve(b);
        for (var e, f, g, h, i, j, k, l, n, o, p = d ? 0 : [], q = 0, r = a.length; r > q; q++) {
            var s = a[q];
            if ("M" == s[0])
                e = i = s[1],
                f = j = s[2];
            else {
                "C" == s[0] ? (n = [e, f].concat(s.slice(1)),
                e = n[6],
                f = n[7]) : (n = [e, f, e, f, i, j, i, j],
                e = i,
                f = j);
                for (var t = 0, u = b.length; u > t; t++) {
                    var v = b[t];
                    if ("M" == v[0])
                        g = k = v[1],
                        h = l = v[2];
                    else {
                        "C" == v[0] ? (o = [g, h].concat(v.slice(1)),
                        g = o[6],
                        h = o[7]) : (o = [g, h, g, h, k, l, k, l],
                        g = k,
                        h = l);
                        var w = m(n, o, d);
                        if (d)
                            p += w;
                        else {
                            for (var x = 0, y = w.length; y > x; x++)
                                w[x].segment1 = q,
                                w[x].segment2 = t,
                                w[x].bez1 = n,
                                w[x].bez2 = o;
                            p = p.concat(w)
                        }
                    }
                }
            }
        }
        return p
    }
    function o(a, b, c, d, e, f) {
        null != a ? (this.a = +a,
        this.b = +b,
        this.c = +c,
        this.d = +d,
        this.e = +e,
        this.f = +f) : (this.a = 1,
        this.b = 0,
        this.c = 0,
        this.d = 1,
        this.e = 0,
        this.f = 0)
    }
    function p() {
        return this.x + H + this.y + H + this.width + " × " + this.height
    }
    function q(a, b, c, d, e, f) {
        function g(a) {
            return ((l * a + k) * a + j) * a
        }
        function h(a, b) {
            var c = i(a, b);
            return ((o * c + n) * c + m) * c
        }
        function i(a, b) {
            var c, d, e, f, h, i;
            for (e = a,
            i = 0; 8 > i; i++) {
                if (f = g(e) - a,
                Q(f) < b)
                    return e;
                if (h = (3 * l * e + 2 * k) * e + j,
                Q(h) < 1e-6)
                    break;
                e -= f / h
            }
            if (c = 0,
            d = 1,
            e = a,
            c > e)
                return c;
            if (e > d)
                return d;
            for (; d > c; ) {
                if (f = g(e),
                Q(f - a) < b)
                    return e;
                a > f ? c = e : d = e,
                e = (d - c) / 2 + c
            }
            return e
        }
        var j = 3 * b
          , k = 3 * (d - b) - j
          , l = 1 - j - k
          , m = 3 * c
          , n = 3 * (e - c) - m
          , o = 1 - m - n;
        return h(a, 1 / (200 * f))
    }
    function r(a, b) {
        var c = []
          , d = {};
        if (this.ms = b,
        this.times = 1,
        a) {
            for (var e in a)
                a[z](e) && (d[_(e)] = a[e],
                c.push(_(e)));
            c.sort(lb)
        }
        this.anim = d,
        this.top = c[c.length - 1],
        this.percents = c
    }
    function s(a, d, e, f, g, h) {
        e = _(e);
        var i, j, k, l, m, n, p = a.ms, r = {}, s = {}, t = {};
        if (f)
            for (v = 0,
            x = ic.length; x > v; v++) {
                var u = ic[v];
                if (u.el.id == d.id && u.anim == a) {
                    u.percent != e ? (ic.splice(v, 1),
                    k = 1) : j = u,
                    d.attr(u.totalOrigin);
                    break
                }
            }
        else
            f = +s;
        for (var v = 0, x = a.percents.length; x > v; v++) {
            if (a.percents[v] == e || a.percents[v] > f * a.top) {
                e = a.percents[v],
                m = a.percents[v - 1] || 0,
                p = p / a.top * (e - m),
                l = a.percents[v + 1],
                i = a.anim[e];
                break
            }
            f && d.attr(a.anim[a.percents[v]])
        }
        if (i) {
            if (j)
                j.initstatus = f,
                j.start = new Date - j.ms * f;
            else {
                for (var y in i)
                    if (i[z](y) && (db[z](y) || d.paper.customAttributes[z](y)))
                        switch (r[y] = d.attr(y),
                        null == r[y] && (r[y] = cb[y]),
                        s[y] = i[y],
                        db[y]) {
                        case T:
                            t[y] = (s[y] - r[y]) / p;
                            break;
                        case "colour":
                            r[y] = c.getRGB(r[y]);
                            var A = c.getRGB(s[y]);
                            t[y] = {
                                r: (A.r - r[y].r) / p,
                                g: (A.g - r[y].g) / p,
                                b: (A.b - r[y].b) / p
                            };
                            break;
                        case "path":
                            var B = Kb(r[y], s[y])
                              , C = B[1];
                            for (r[y] = B[0],
                            t[y] = [],
                            v = 0,
                            x = r[y].length; x > v; v++) {
                                t[y][v] = [0];
                                for (var D = 1, F = r[y][v].length; F > D; D++)
                                    t[y][v][D] = (C[v][D] - r[y][v][D]) / p
                            }
                            break;
                        case "transform":
                            var G = d._
                              , H = Pb(G[y], s[y]);
                            if (H)
                                for (r[y] = H.from,
                                s[y] = H.to,
                                t[y] = [],
                                t[y].real = !0,
                                v = 0,
                                x = r[y].length; x > v; v++)
                                    for (t[y][v] = [r[y][v][0]],
                                    D = 1,
                                    F = r[y][v].length; F > D; D++)
                                        t[y][v][D] = (s[y][v][D] - r[y][v][D]) / p;
                            else {
                                var K = d.matrix || new o
                                  , L = {
                                    _: {
                                        transform: G.transform
                                    },
                                    getBBox: function() {
                                        return d.getBBox(1)
                                    }
                                };
                                r[y] = [K.a, K.b, K.c, K.d, K.e, K.f],
                                Nb(L, s[y]),
                                s[y] = L._.transform,
                                t[y] = [(L.matrix.a - K.a) / p, (L.matrix.b - K.b) / p, (L.matrix.c - K.c) / p, (L.matrix.d - K.d) / p, (L.matrix.e - K.e) / p, (L.matrix.f - K.f) / p]
                            }
                            break;
                        case "csv":
                            var M = I(i[y])[J](w)
                              , N = I(r[y])[J](w);
                            if ("clip-rect" == y)
                                for (r[y] = N,
                                t[y] = [],
                                v = N.length; v--; )
                                    t[y][v] = (M[v] - r[y][v]) / p;
                            s[y] = M;
                            break;
                        default:
                            for (M = [][E](i[y]),
                            N = [][E](r[y]),
                            t[y] = [],
                            v = d.paper.customAttributes[y].length; v--; )
                                t[y][v] = ((M[v] || 0) - (N[v] || 0)) / p
                        }
                var O = i.easing
                  , P = c.easing_formulas[O];
                if (!P)
                    if (P = I(O).match(Z),
                    P && 5 == P.length) {
                        var Q = P;
                        P = function(a) {
                            return q(a, +Q[1], +Q[2], +Q[3], +Q[4], p)
                        }
                    } else
                        P = nb;
                if (n = i.start || a.start || +new Date,
                u = {
                    anim: a,
                    percent: e,
                    timestamp: n,
                    start: n + (a.del || 0),
                    status: 0,
                    initstatus: f || 0,
                    stop: !1,
                    ms: p,
                    easing: P,
                    from: r,
                    diff: t,
                    to: s,
                    el: d,
                    callback: i.callback,
                    prev: m,
                    next: l,
                    repeat: h || a.times,
                    origin: d.attr(),
                    totalOrigin: g
                },
                ic.push(u),
                f && !j && !k && (u.stop = !0,
                u.start = new Date - p * f,
                1 == ic.length))
                    return kc();
                k && (u.start = new Date - u.ms * f),
                1 == ic.length && jc(kc)
            }
            b("raphael.anim.start." + d.id, d, a)
        }
    }
    function t(a) {
        for (var b = 0; b < ic.length; b++)
            ic[b].el.paper == a && ic.splice(b--, 1)
    }
    c.version = "2.1.2",
    c.eve = b;
    var u, v, w = /[, ]+/, x = {
        circle: 1,
        rect: 1,
        path: 1,
        ellipse: 1,
        text: 1,
        image: 1
    }, y = /\{(\d+)\}/g, z = "hasOwnProperty", A = {
        doc: document,
        win: a
    }, B = {
        was: Object.prototype[z].call(A.win, "Raphael"),
        is: A.win.Raphael
    }, C = function() {
        this.ca = this.customAttributes = {}
    }, D = "apply", E = "concat", F = "ontouchstart"in A.win || A.win.DocumentTouch && A.doc instanceof DocumentTouch, G = "", H = " ", I = String, J = "split", K = "click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel"[J](H), L = {
        mousedown: "touchstart",
        mousemove: "touchmove",
        mouseup: "touchend"
    }, M = I.prototype.toLowerCase, N = Math, O = N.max, P = N.min, Q = N.abs, R = N.pow, S = N.PI, T = "number", U = "string", V = "array", W = Object.prototype.toString, X = (c._ISURL = /^url\(['"]?([^\)]+?)['"]?\)$/i,
    /^\s*((#[a-f\d]{6})|(#[a-f\d]{3})|rgba?\(\s*([\d\.]+%?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+%?(?:\s*,\s*[\d\.]+%?)?)\s*\)|hsba?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\)|hsla?\(\s*([\d\.]+(?:deg|\xb0|%)?\s*,\s*[\d\.]+%?\s*,\s*[\d\.]+(?:%?\s*,\s*[\d\.]+)?)%?\s*\))\s*$/i), Y = {
        NaN: 1,
        Infinity: 1,
        "-Infinity": 1
    }, Z = /^(?:cubic-)?bezier\(([^,]+),([^,]+),([^,]+),([^\)]+)\)/, $ = N.round, _ = parseFloat, ab = parseInt, bb = I.prototype.toUpperCase, cb = c._availableAttrs = {
        "arrow-end": "none",
        "arrow-start": "none",
        blur: 0,
        "clip-rect": "0 0 1e9 1e9",
        cursor: "default",
        cx: 0,
        cy: 0,
        fill: "#fff",
        "fill-opacity": 1,
        font: '10px "Arial"',
        "font-family": '"Arial"',
        "font-size": "10",
        "font-style": "normal",
        "font-weight": 400,
        gradient: 0,
        height: 0,
        href: "http://raphaeljs.com/",
        "letter-spacing": 0,
        opacity: 1,
        path: "M0,0",
        r: 0,
        rx: 0,
        ry: 0,
        src: "",
        stroke: "#000",
        "stroke-dasharray": "",
        "stroke-linecap": "butt",
        "stroke-linejoin": "butt",
        "stroke-miterlimit": 0,
        "stroke-opacity": 1,
        "stroke-width": 1,
        target: "_blank",
        "text-anchor": "middle",
        title: "Raphael",
        transform: "",
        width: 0,
        x: 0,
        y: 0
    }, db = c._availableAnimAttrs = {
        blur: T,
        "clip-rect": "csv",
        cx: T,
        cy: T,
        fill: "colour",
        "fill-opacity": T,
        "font-size": T,
        height: T,
        opacity: T,
        path: "path",
        r: T,
        rx: T,
        ry: T,
        stroke: "colour",
        "stroke-opacity": T,
        "stroke-width": T,
        transform: "transform",
        width: T,
        x: T,
        y: T
    }, eb = /[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/, fb = {
        hs: 1,
        rg: 1
    }, gb = /,?([achlmqrstvxz]),?/gi, hb = /([achlmrqstvz])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi, ib = /([rstm])[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029,]*((-?\d*\.?\d*(?:e[\-+]?\d+)?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*)+)/gi, jb = /(-?\d*\.?\d*(?:e[\-+]?\d+)?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,?[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*/gi, kb = (c._radial_gradient = /^r(?:\(([^,]+?)[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*,[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\u2028\u2029]*([^\)]+?)\))?/,
    {}), lb = function(a, b) {
        return _(a) - _(b)
    }, mb = function() {}, nb = function(a) {
        return a
    }, ob = c._rectPath = function(a, b, c, d, e) {
        return e ? [["M", a + e, b], ["l", c - 2 * e, 0], ["a", e, e, 0, 0, 1, e, e], ["l", 0, d - 2 * e], ["a", e, e, 0, 0, 1, -e, e], ["l", 2 * e - c, 0], ["a", e, e, 0, 0, 1, -e, -e], ["l", 0, 2 * e - d], ["a", e, e, 0, 0, 1, e, -e], ["z"]] : [["M", a, b], ["l", c, 0], ["l", 0, d], ["l", -c, 0], ["z"]]
    }
    , pb = function(a, b, c, d) {
        return null == d && (d = c),
        [["M", a, b], ["m", 0, -d], ["a", c, d, 0, 1, 1, 0, 2 * d], ["a", c, d, 0, 1, 1, 0, -2 * d], ["z"]]
    }, qb = c._getPath = {
        path: function(a) {
            return a.attr("path")
        },
        circle: function(a) {
            var b = a.attrs;
            return pb(b.cx, b.cy, b.r)
        },
        ellipse: function(a) {
            var b = a.attrs;
            return pb(b.cx, b.cy, b.rx, b.ry)
        },
        rect: function(a) {
            var b = a.attrs;
            return ob(b.x, b.y, b.width, b.height, b.r)
        },
        image: function(a) {
            var b = a.attrs;
            return ob(b.x, b.y, b.width, b.height)
        },
        text: function(a) {
            var b = a._getBBox();
            return ob(b.x, b.y, b.width, b.height)
        },
        set: function(a) {
            var b = a._getBBox();
            return ob(b.x, b.y, b.width, b.height)
        }
    }, rb = c.mapPath = function(a, b) {
        if (!b)
            return a;
        var c, d, e, f, g, h, i;
        for (a = Kb(a),
        e = 0,
        g = a.length; g > e; e++)
            for (i = a[e],
            f = 1,
            h = i.length; h > f; f += 2)
                c = b.x(i[f], i[f + 1]),
                d = b.y(i[f], i[f + 1]),
                i[f] = c,
                i[f + 1] = d;
        return a
    }
    ;
    if (c._g = A,
    c.type = A.win.SVGAngle || A.doc.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1") ? "SVG" : "VML",
    "VML" == c.type) {
        var sb, tb = A.doc.createElement("div");
        if (tb.innerHTML = '<v:shape adj="1"/>',
        sb = tb.firstChild,
        sb.style.behavior = "url(#default#VML)",
        !sb || "object" != typeof sb.adj)
            return c.type = G;
        tb = null
    }
    c.svg = !(c.vml = "VML" == c.type),
    c._Paper = C,
    c.fn = v = C.prototype = c.prototype,
    c._id = 0,
    c._oid = 0,
    c.is = function(a, b) {
        return b = M.call(b),
        "finite" == b ? !Y[z](+a) : "array" == b ? a instanceof Array : "null" == b && null === a || b == typeof a && null !== a || "object" == b && a === Object(a) || "array" == b && Array.isArray && Array.isArray(a) || W.call(a).slice(8, -1).toLowerCase() == b
    }
    ,
    c.angle = function(a, b, d, e, f, g) {
        if (null == f) {
            var h = a - d
              , i = b - e;
            return h || i ? (180 + 180 * N.atan2(-i, -h) / S + 360) % 360 : 0
        }
        return c.angle(a, b, f, g) - c.angle(d, e, f, g)
    }
    ,
    c.rad = function(a) {
        return a % 360 * S / 180
    }
    ,
    c.deg = function(a) {
        return 180 * a / S % 360
    }
    ,
    c.snapTo = function(a, b, d) {
        if (d = c.is(d, "finite") ? d : 10,
        c.is(a, V)) {
            for (var e = a.length; e--; )
                if (Q(a[e] - b) <= d)
                    return a[e]
        } else {
            a = +a;
            var f = b % a;
            if (d > f)
                return b - f;
            if (f > a - d)
                return b - f + a
        }
        return b
    }
    ,
    c.createUUID = function(a, b) {
        return function() {
            return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(a, b).toUpperCase()
        }
    }(/[xy]/g, function(a) {
        var b = 0 | 16 * N.random()
          , c = "x" == a ? b : 8 | 3 & b;
        return c.toString(16)
    }),
    c.setWindow = function(a) {
        b("raphael.setWindow", c, A.win, a),
        A.win = a,
        A.doc = A.win.document,
        c._engine.initWin && c._engine.initWin(A.win)
    }
    ;
    var ub = function(a) {
        if (c.vml) {
            var b, d = /^\s+|\s+$/g;
            try {
                var e = new ActiveXObject("htmlfile");
                e.write("<body>"),
                e.close(),
                b = e.body
            } catch (g) {
                b = createPopup().document.body
            }
            var h = b.createTextRange();
            ub = f(function(a) {
                try {
                    b.style.color = I(a).replace(d, G);
                    var c = h.queryCommandValue("ForeColor");
                    return c = (255 & c) << 16 | 65280 & c | (16711680 & c) >>> 16,
                    "#" + ("000000" + c.toString(16)).slice(-6)
                } catch (e) {
                    return "none"
                }
            })
        } else {
            var i = A.doc.createElement("i");
            i.title = "Raphaël Colour Picker",
            i.style.display = "none",
            A.doc.body.appendChild(i),
            ub = f(function(a) {
                return i.style.color = a,
                A.doc.defaultView.getComputedStyle(i, G).getPropertyValue("color")
            })
        }
        return ub(a)
    }
      , vb = function() {
        return "hsb(" + [this.h, this.s, this.b] + ")"
    }
      , wb = function() {
        return "hsl(" + [this.h, this.s, this.l] + ")"
    }
      , xb = function() {
        return this.hex
    }
      , yb = function(a, b, d) {
        if (null == b && c.is(a, "object") && "r"in a && "g"in a && "b"in a && (d = a.b,
        b = a.g,
        a = a.r),
        null == b && c.is(a, U)) {
            var e = c.getRGB(a);
            a = e.r,
            b = e.g,
            d = e.b
        }
        return (a > 1 || b > 1 || d > 1) && (a /= 255,
        b /= 255,
        d /= 255),
        [a, b, d]
    }
      , zb = function(a, b, d, e) {
        a *= 255,
        b *= 255,
        d *= 255;
        var f = {
            r: a,
            g: b,
            b: d,
            hex: c.rgb(a, b, d),
            toString: xb
        };
        return c.is(e, "finite") && (f.opacity = e),
        f
    };
    c.color = function(a) {
        var b;
        return c.is(a, "object") && "h"in a && "s"in a && "b"in a ? (b = c.hsb2rgb(a),
        a.r = b.r,
        a.g = b.g,
        a.b = b.b,
        a.hex = b.hex) : c.is(a, "object") && "h"in a && "s"in a && "l"in a ? (b = c.hsl2rgb(a),
        a.r = b.r,
        a.g = b.g,
        a.b = b.b,
        a.hex = b.hex) : (c.is(a, "string") && (a = c.getRGB(a)),
        c.is(a, "object") && "r"in a && "g"in a && "b"in a ? (b = c.rgb2hsl(a),
        a.h = b.h,
        a.s = b.s,
        a.l = b.l,
        b = c.rgb2hsb(a),
        a.v = b.b) : (a = {
            hex: "none"
        },
        a.r = a.g = a.b = a.h = a.s = a.v = a.l = -1)),
        a.toString = xb,
        a
    }
    ,
    c.hsb2rgb = function(a, b, c, d) {
        this.is(a, "object") && "h"in a && "s"in a && "b"in a && (c = a.b,
        b = a.s,
        a = a.h,
        d = a.o),
        a *= 360;
        var e, f, g, h, i;
        return a = a % 360 / 60,
        i = c * b,
        h = i * (1 - Q(a % 2 - 1)),
        e = f = g = c - i,
        a = ~~a,
        e += [i, h, 0, 0, h, i][a],
        f += [h, i, i, h, 0, 0][a],
        g += [0, 0, h, i, i, h][a],
        zb(e, f, g, d)
    }
    ,
    c.hsl2rgb = function(a, b, c, d) {
        this.is(a, "object") && "h"in a && "s"in a && "l"in a && (c = a.l,
        b = a.s,
        a = a.h),
        (a > 1 || b > 1 || c > 1) && (a /= 360,
        b /= 100,
        c /= 100),
        a *= 360;
        var e, f, g, h, i;
        return a = a % 360 / 60,
        i = 2 * b * (.5 > c ? c : 1 - c),
        h = i * (1 - Q(a % 2 - 1)),
        e = f = g = c - i / 2,
        a = ~~a,
        e += [i, h, 0, 0, h, i][a],
        f += [h, i, i, h, 0, 0][a],
        g += [0, 0, h, i, i, h][a],
        zb(e, f, g, d)
    }
    ,
    c.rgb2hsb = function(a, b, c) {
        c = yb(a, b, c),
        a = c[0],
        b = c[1],
        c = c[2];
        var d, e, f, g;
        return f = O(a, b, c),
        g = f - P(a, b, c),
        d = 0 == g ? null : f == a ? (b - c) / g : f == b ? (c - a) / g + 2 : (a - b) / g + 4,
        d = 60 * ((d + 360) % 6) / 360,
        e = 0 == g ? 0 : g / f,
        {
            h: d,
            s: e,
            b: f,
            toString: vb
        }
    }
    ,
    c.rgb2hsl = function(a, b, c) {
        c = yb(a, b, c),
        a = c[0],
        b = c[1],
        c = c[2];
        var d, e, f, g, h, i;
        return g = O(a, b, c),
        h = P(a, b, c),
        i = g - h,
        d = 0 == i ? null : g == a ? (b - c) / i : g == b ? (c - a) / i + 2 : (a - b) / i + 4,
        d = 60 * ((d + 360) % 6) / 360,
        f = (g + h) / 2,
        e = 0 == i ? 0 : .5 > f ? i / (2 * f) : i / (2 - 2 * f),
        {
            h: d,
            s: e,
            l: f,
            toString: wb
        }
    }
    ,
    c._path2string = function() {
        return this.join(",").replace(gb, "$1")
    }
    ,
    c._preload = function(a, b) {
        var c = A.doc.createElement("img");
        c.style.cssText = "position:absolute;left:-9999em;top:-9999em",
        c.onload = function() {
            b.call(this),
            this.onload = null,
            A.doc.body.removeChild(this)
        }
        ,
        c.onerror = function() {
            A.doc.body.removeChild(this)
        }
        ,
        A.doc.body.appendChild(c),
        c.src = a
    }
    ,
    c.getRGB = f(function(a) {
        if (!a || (a = I(a)).indexOf("-") + 1)
            return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                error: 1,
                toString: g
            };
        if ("none" == a)
            return {
                r: -1,
                g: -1,
                b: -1,
                hex: "none",
                toString: g
            };
        !(fb[z](a.toLowerCase().substring(0, 2)) || "#" == a.charAt()) && (a = ub(a));
        var b, d, e, f, h, i, j = a.match(X);
        return j ? (j[2] && (e = ab(j[2].substring(5), 16),
        d = ab(j[2].substring(3, 5), 16),
        b = ab(j[2].substring(1, 3), 16)),
        j[3] && (e = ab((h = j[3].charAt(3)) + h, 16),
        d = ab((h = j[3].charAt(2)) + h, 16),
        b = ab((h = j[3].charAt(1)) + h, 16)),
        j[4] && (i = j[4][J](eb),
        b = _(i[0]),
        "%" == i[0].slice(-1) && (b *= 2.55),
        d = _(i[1]),
        "%" == i[1].slice(-1) && (d *= 2.55),
        e = _(i[2]),
        "%" == i[2].slice(-1) && (e *= 2.55),
        "rgba" == j[1].toLowerCase().slice(0, 4) && (f = _(i[3])),
        i[3] && "%" == i[3].slice(-1) && (f /= 100)),
        j[5] ? (i = j[5][J](eb),
        b = _(i[0]),
        "%" == i[0].slice(-1) && (b *= 2.55),
        d = _(i[1]),
        "%" == i[1].slice(-1) && (d *= 2.55),
        e = _(i[2]),
        "%" == i[2].slice(-1) && (e *= 2.55),
        ("deg" == i[0].slice(-3) || "°" == i[0].slice(-1)) && (b /= 360),
        "hsba" == j[1].toLowerCase().slice(0, 4) && (f = _(i[3])),
        i[3] && "%" == i[3].slice(-1) && (f /= 100),
        c.hsb2rgb(b, d, e, f)) : j[6] ? (i = j[6][J](eb),
        b = _(i[0]),
        "%" == i[0].slice(-1) && (b *= 2.55),
        d = _(i[1]),
        "%" == i[1].slice(-1) && (d *= 2.55),
        e = _(i[2]),
        "%" == i[2].slice(-1) && (e *= 2.55),
        ("deg" == i[0].slice(-3) || "°" == i[0].slice(-1)) && (b /= 360),
        "hsla" == j[1].toLowerCase().slice(0, 4) && (f = _(i[3])),
        i[3] && "%" == i[3].slice(-1) && (f /= 100),
        c.hsl2rgb(b, d, e, f)) : (j = {
            r: b,
            g: d,
            b: e,
            toString: g
        },
        j.hex = "#" + (16777216 | e | d << 8 | b << 16).toString(16).slice(1),
        c.is(f, "finite") && (j.opacity = f),
        j)) : {
            r: -1,
            g: -1,
            b: -1,
            hex: "none",
            error: 1,
            toString: g
        }
    }, c),
    c.hsb = f(function(a, b, d) {
        return c.hsb2rgb(a, b, d).hex
    }),
    c.hsl = f(function(a, b, d) {
        return c.hsl2rgb(a, b, d).hex
    }),
    c.rgb = f(function(a, b, c) {
        return "#" + (16777216 | c | b << 8 | a << 16).toString(16).slice(1)
    }),
    c.getColor = function(a) {
        var b = this.getColor.start = this.getColor.start || {
            h: 0,
            s: 1,
            b: a || .75
        }
          , c = this.hsb2rgb(b.h, b.s, b.b);
        return b.h += .075,
        b.h > 1 && (b.h = 0,
        b.s -= .2,
        b.s <= 0 && (this.getColor.start = {
            h: 0,
            s: 1,
            b: b.b
        })),
        c.hex
    }
    ,
    c.getColor.reset = function() {
        delete this.start
    }
    ,
    c.parsePathString = function(a) {
        if (!a)
            return null;
        var b = Ab(a);
        if (b.arr)
            return Cb(b.arr);
        var d = {
            a: 7,
            c: 6,
            h: 1,
            l: 2,
            m: 2,
            r: 4,
            q: 4,
            s: 4,
            t: 2,
            v: 1,
            z: 0
        }
          , e = [];
        return c.is(a, V) && c.is(a[0], V) && (e = Cb(a)),
        e.length || I(a).replace(hb, function(a, b, c) {
            var f = []
              , g = b.toLowerCase();
            if (c.replace(jb, function(a, b) {
                b && f.push(+b)
            }),
            "m" == g && f.length > 2 && (e.push([b][E](f.splice(0, 2))),
            g = "l",
            b = "m" == b ? "l" : "L"),
            "r" == g)
                e.push([b][E](f));
            else
                for (; f.length >= d[g] && (e.push([b][E](f.splice(0, d[g]))),
                d[g]); )
                    ;
        }),
        e.toString = c._path2string,
        b.arr = Cb(e),
        e
    }
    ,
    c.parseTransformString = f(function(a) {
        if (!a)
            return null;
        var b = [];
        return c.is(a, V) && c.is(a[0], V) && (b = Cb(a)),
        b.length || I(a).replace(ib, function(a, c, d) {
            var e = [];
            M.call(c),
            d.replace(jb, function(a, b) {
                b && e.push(+b)
            }),
            b.push([c][E](e))
        }),
        b.toString = c._path2string,
        b
    });
    var Ab = function(a) {
        var b = Ab.ps = Ab.ps || {};
        return b[a] ? b[a].sleep = 100 : b[a] = {
            sleep: 100
        },
        setTimeout(function() {
            for (var c in b)
                b[z](c) && c != a && (b[c].sleep--,
                !b[c].sleep && delete b[c])
        }),
        b[a]
    };
    c.findDotsAtSegment = function(a, b, c, d, e, f, g, h, i) {
        var j = 1 - i
          , k = R(j, 3)
          , l = R(j, 2)
          , m = i * i
          , n = m * i
          , o = k * a + 3 * l * i * c + 3 * j * i * i * e + n * g
          , p = k * b + 3 * l * i * d + 3 * j * i * i * f + n * h
          , q = a + 2 * i * (c - a) + m * (e - 2 * c + a)
          , r = b + 2 * i * (d - b) + m * (f - 2 * d + b)
          , s = c + 2 * i * (e - c) + m * (g - 2 * e + c)
          , t = d + 2 * i * (f - d) + m * (h - 2 * f + d)
          , u = j * a + i * c
          , v = j * b + i * d
          , w = j * e + i * g
          , x = j * f + i * h
          , y = 90 - 180 * N.atan2(q - s, r - t) / S;
        return (q > s || t > r) && (y += 180),
        {
            x: o,
            y: p,
            m: {
                x: q,
                y: r
            },
            n: {
                x: s,
                y: t
            },
            start: {
                x: u,
                y: v
            },
            end: {
                x: w,
                y: x
            },
            alpha: y
        }
    }
    ,
    c.bezierBBox = function(a, b, d, e, f, g, h, i) {
        c.is(a, "array") || (a = [a, b, d, e, f, g, h, i]);
        var j = Jb.apply(null, a);
        return {
            x: j.min.x,
            y: j.min.y,
            x2: j.max.x,
            y2: j.max.y,
            width: j.max.x - j.min.x,
            height: j.max.y - j.min.y
        }
    }
    ,
    c.isPointInsideBBox = function(a, b, c) {
        return b >= a.x && b <= a.x2 && c >= a.y && c <= a.y2
    }
    ,
    c.isBBoxIntersect = function(a, b) {
        var d = c.isPointInsideBBox;
        return d(b, a.x, a.y) || d(b, a.x2, a.y) || d(b, a.x, a.y2) || d(b, a.x2, a.y2) || d(a, b.x, b.y) || d(a, b.x2, b.y) || d(a, b.x, b.y2) || d(a, b.x2, b.y2) || (a.x < b.x2 && a.x > b.x || b.x < a.x2 && b.x > a.x) && (a.y < b.y2 && a.y > b.y || b.y < a.y2 && b.y > a.y)
    }
    ,
    c.pathIntersection = function(a, b) {
        return n(a, b)
    }
    ,
    c.pathIntersectionNumber = function(a, b) {
        return n(a, b, 1)
    }
    ,
    c.isPointInsidePath = function(a, b, d) {
        var e = c.pathBBox(a);
        return c.isPointInsideBBox(e, b, d) && 1 == n(a, [["M", b, d], ["H", e.x2 + 10]], 1) % 2
    }
    ,
    c._removedFactory = function(a) {
        return function() {
            b("raphael.log", null, "Raphaël: you are calling to method “" + a + "” of removed object", a)
        }
    }
    ;
    var Bb = c.pathBBox = function(a) {
        var b = Ab(a);
        if (b.bbox)
            return d(b.bbox);
        if (!a)
            return {
                x: 0,
                y: 0,
                width: 0,
                height: 0,
                x2: 0,
                y2: 0
            };
        a = Kb(a);
        for (var c, e = 0, f = 0, g = [], h = [], i = 0, j = a.length; j > i; i++)
            if (c = a[i],
            "M" == c[0])
                e = c[1],
                f = c[2],
                g.push(e),
                h.push(f);
            else {
                var k = Jb(e, f, c[1], c[2], c[3], c[4], c[5], c[6]);
                g = g[E](k.min.x, k.max.x),
                h = h[E](k.min.y, k.max.y),
                e = c[5],
                f = c[6]
            }
        var l = P[D](0, g)
          , m = P[D](0, h)
          , n = O[D](0, g)
          , o = O[D](0, h)
          , p = n - l
          , q = o - m
          , r = {
            x: l,
            y: m,
            x2: n,
            y2: o,
            width: p,
            height: q,
            cx: l + p / 2,
            cy: m + q / 2
        };
        return b.bbox = d(r),
        r
    }
      , Cb = function(a) {
        var b = d(a);
        return b.toString = c._path2string,
        b
    }
      , Db = c._pathToRelative = function(a) {
        var b = Ab(a);
        if (b.rel)
            return Cb(b.rel);
        c.is(a, V) && c.is(a && a[0], V) || (a = c.parsePathString(a));
        var d = []
          , e = 0
          , f = 0
          , g = 0
          , h = 0
          , i = 0;
        "M" == a[0][0] && (e = a[0][1],
        f = a[0][2],
        g = e,
        h = f,
        i++,
        d.push(["M", e, f]));
        for (var j = i, k = a.length; k > j; j++) {
            var l = d[j] = []
              , m = a[j];
            if (m[0] != M.call(m[0]))
                switch (l[0] = M.call(m[0]),
                l[0]) {
                case "a":
                    l[1] = m[1],
                    l[2] = m[2],
                    l[3] = m[3],
                    l[4] = m[4],
                    l[5] = m[5],
                    l[6] = +(m[6] - e).toFixed(3),
                    l[7] = +(m[7] - f).toFixed(3);
                    break;
                case "v":
                    l[1] = +(m[1] - f).toFixed(3);
                    break;
                case "m":
                    g = m[1],
                    h = m[2];
                default:
                    for (var n = 1, o = m.length; o > n; n++)
                        l[n] = +(m[n] - (n % 2 ? e : f)).toFixed(3)
                }
            else {
                l = d[j] = [],
                "m" == m[0] && (g = m[1] + e,
                h = m[2] + f);
                for (var p = 0, q = m.length; q > p; p++)
                    d[j][p] = m[p]
            }
            var r = d[j].length;
            switch (d[j][0]) {
            case "z":
                e = g,
                f = h;
                break;
            case "h":
                e += +d[j][r - 1];
                break;
            case "v":
                f += +d[j][r - 1];
                break;
            default:
                e += +d[j][r - 2],
                f += +d[j][r - 1]
            }
        }
        return d.toString = c._path2string,
        b.rel = Cb(d),
        d
    }
      , Eb = c._pathToAbsolute = function(a) {
        var b = Ab(a);
        if (b.abs)
            return Cb(b.abs);
        if (c.is(a, V) && c.is(a && a[0], V) || (a = c.parsePathString(a)),
        !a || !a.length)
            return [["M", 0, 0]];
        var d = []
          , e = 0
          , f = 0
          , g = 0
          , i = 0
          , j = 0;
        "M" == a[0][0] && (e = +a[0][1],
        f = +a[0][2],
        g = e,
        i = f,
        j++,
        d[0] = ["M", e, f]);
        for (var k, l, m = 3 == a.length && "M" == a[0][0] && "R" == a[1][0].toUpperCase() && "Z" == a[2][0].toUpperCase(), n = j, o = a.length; o > n; n++) {
            if (d.push(k = []),
            l = a[n],
            l[0] != bb.call(l[0]))
                switch (k[0] = bb.call(l[0]),
                k[0]) {
                case "A":
                    k[1] = l[1],
                    k[2] = l[2],
                    k[3] = l[3],
                    k[4] = l[4],
                    k[5] = l[5],
                    k[6] = +(l[6] + e),
                    k[7] = +(l[7] + f);
                    break;
                case "V":
                    k[1] = +l[1] + f;
                    break;
                case "H":
                    k[1] = +l[1] + e;
                    break;
                case "R":
                    for (var p = [e, f][E](l.slice(1)), q = 2, r = p.length; r > q; q++)
                        p[q] = +p[q] + e,
                        p[++q] = +p[q] + f;
                    d.pop(),
                    d = d[E](h(p, m));
                    break;
                case "M":
                    g = +l[1] + e,
                    i = +l[2] + f;
                default:
                    for (q = 1,
                    r = l.length; r > q; q++)
                        k[q] = +l[q] + (q % 2 ? e : f)
                }
            else if ("R" == l[0])
                p = [e, f][E](l.slice(1)),
                d.pop(),
                d = d[E](h(p, m)),
                k = ["R"][E](l.slice(-2));
            else
                for (var s = 0, t = l.length; t > s; s++)
                    k[s] = l[s];
            switch (k[0]) {
            case "Z":
                e = g,
                f = i;
                break;
            case "H":
                e = k[1];
                break;
            case "V":
                f = k[1];
                break;
            case "M":
                g = k[k.length - 2],
                i = k[k.length - 1];
            default:
                e = k[k.length - 2],
                f = k[k.length - 1]
            }
        }
        return d.toString = c._path2string,
        b.abs = Cb(d),
        d
    }
      , Fb = function(a, b, c, d) {
        return [a, b, c, d, c, d]
    }
      , Gb = function(a, b, c, d, e, f) {
        var g = 1 / 3
          , h = 2 / 3;
        return [g * a + h * c, g * b + h * d, g * e + h * c, g * f + h * d, e, f]
    }
      , Hb = function(a, b, c, d, e, g, h, i, j, k) {
        var l, m = 120 * S / 180, n = S / 180 * (+e || 0), o = [], p = f(function(a, b, c) {
            var d = a * N.cos(c) - b * N.sin(c)
              , e = a * N.sin(c) + b * N.cos(c);
            return {
                x: d,
                y: e
            }
        });
        if (k)
            y = k[0],
            z = k[1],
            w = k[2],
            x = k[3];
        else {
            l = p(a, b, -n),
            a = l.x,
            b = l.y,
            l = p(i, j, -n),
            i = l.x,
            j = l.y;
            var q = (N.cos(S / 180 * e),
            N.sin(S / 180 * e),
            (a - i) / 2)
              , r = (b - j) / 2
              , s = q * q / (c * c) + r * r / (d * d);
            s > 1 && (s = N.sqrt(s),
            c = s * c,
            d = s * d);
            var t = c * c
              , u = d * d
              , v = (g == h ? -1 : 1) * N.sqrt(Q((t * u - t * r * r - u * q * q) / (t * r * r + u * q * q)))
              , w = v * c * r / d + (a + i) / 2
              , x = v * -d * q / c + (b + j) / 2
              , y = N.asin(((b - x) / d).toFixed(9))
              , z = N.asin(((j - x) / d).toFixed(9));
            y = w > a ? S - y : y,
            z = w > i ? S - z : z,
            0 > y && (y = 2 * S + y),
            0 > z && (z = 2 * S + z),
            h && y > z && (y -= 2 * S),
            !h && z > y && (z -= 2 * S)
        }
        var A = z - y;
        if (Q(A) > m) {
            var B = z
              , C = i
              , D = j;
            z = y + m * (h && z > y ? 1 : -1),
            i = w + c * N.cos(z),
            j = x + d * N.sin(z),
            o = Hb(i, j, c, d, e, 0, h, C, D, [z, B, w, x])
        }
        A = z - y;
        var F = N.cos(y)
          , G = N.sin(y)
          , H = N.cos(z)
          , I = N.sin(z)
          , K = N.tan(A / 4)
          , L = 4 / 3 * c * K
          , M = 4 / 3 * d * K
          , O = [a, b]
          , P = [a + L * G, b - M * F]
          , R = [i + L * I, j - M * H]
          , T = [i, j];
        if (P[0] = 2 * O[0] - P[0],
        P[1] = 2 * O[1] - P[1],
        k)
            return [P, R, T][E](o);
        o = [P, R, T][E](o).join()[J](",");
        for (var U = [], V = 0, W = o.length; W > V; V++)
            U[V] = V % 2 ? p(o[V - 1], o[V], n).y : p(o[V], o[V + 1], n).x;
        return U
    }
      , Ib = function(a, b, c, d, e, f, g, h, i) {
        var j = 1 - i;
        return {
            x: R(j, 3) * a + 3 * R(j, 2) * i * c + 3 * j * i * i * e + R(i, 3) * g,
            y: R(j, 3) * b + 3 * R(j, 2) * i * d + 3 * j * i * i * f + R(i, 3) * h
        }
    }
      , Jb = f(function(a, b, c, d, e, f, g, h) {
        var i, j = e - 2 * c + a - (g - 2 * e + c), k = 2 * (c - a) - 2 * (e - c), l = a - c, m = (-k + N.sqrt(k * k - 4 * j * l)) / 2 / j, n = (-k - N.sqrt(k * k - 4 * j * l)) / 2 / j, o = [b, h], p = [a, g];
        return Q(m) > "1e12" && (m = .5),
        Q(n) > "1e12" && (n = .5),
        m > 0 && 1 > m && (i = Ib(a, b, c, d, e, f, g, h, m),
        p.push(i.x),
        o.push(i.y)),
        n > 0 && 1 > n && (i = Ib(a, b, c, d, e, f, g, h, n),
        p.push(i.x),
        o.push(i.y)),
        j = f - 2 * d + b - (h - 2 * f + d),
        k = 2 * (d - b) - 2 * (f - d),
        l = b - d,
        m = (-k + N.sqrt(k * k - 4 * j * l)) / 2 / j,
        n = (-k - N.sqrt(k * k - 4 * j * l)) / 2 / j,
        Q(m) > "1e12" && (m = .5),
        Q(n) > "1e12" && (n = .5),
        m > 0 && 1 > m && (i = Ib(a, b, c, d, e, f, g, h, m),
        p.push(i.x),
        o.push(i.y)),
        n > 0 && 1 > n && (i = Ib(a, b, c, d, e, f, g, h, n),
        p.push(i.x),
        o.push(i.y)),
        {
            min: {
                x: P[D](0, p),
                y: P[D](0, o)
            },
            max: {
                x: O[D](0, p),
                y: O[D](0, o)
            }
        }
    })
      , Kb = c._path2curve = f(function(a, b) {
        var c = !b && Ab(a);
        if (!b && c.curve)
            return Cb(c.curve);
        for (var d = Eb(a), e = b && Eb(b), f = {
            x: 0,
            y: 0,
            bx: 0,
            by: 0,
            X: 0,
            Y: 0,
            qx: null,
            qy: null
        }, g = {
            x: 0,
            y: 0,
            bx: 0,
            by: 0,
            X: 0,
            Y: 0,
            qx: null,
            qy: null
        }, h = (function(a, b, c) {
            var d, e;
            if (!a)
                return ["C", b.x, b.y, b.x, b.y, b.x, b.y];
            switch (!(a[0]in {
                T: 1,
                Q: 1
            }) && (b.qx = b.qy = null),
            a[0]) {
            case "M":
                b.X = a[1],
                b.Y = a[2];
                break;
            case "A":
                a = ["C"][E](Hb[D](0, [b.x, b.y][E](a.slice(1))));
                break;
            case "S":
                "C" == c || "S" == c ? (d = 2 * b.x - b.bx,
                e = 2 * b.y - b.by) : (d = b.x,
                e = b.y),
                a = ["C", d, e][E](a.slice(1));
                break;
            case "T":
                "Q" == c || "T" == c ? (b.qx = 2 * b.x - b.qx,
                b.qy = 2 * b.y - b.qy) : (b.qx = b.x,
                b.qy = b.y),
                a = ["C"][E](Gb(b.x, b.y, b.qx, b.qy, a[1], a[2]));
                break;
            case "Q":
                b.qx = a[1],
                b.qy = a[2],
                a = ["C"][E](Gb(b.x, b.y, a[1], a[2], a[3], a[4]));
                break;
            case "L":
                a = ["C"][E](Fb(b.x, b.y, a[1], a[2]));
                break;
            case "H":
                a = ["C"][E](Fb(b.x, b.y, a[1], b.y));
                break;
            case "V":
                a = ["C"][E](Fb(b.x, b.y, b.x, a[1]));
                break;
            case "Z":
                a = ["C"][E](Fb(b.x, b.y, b.X, b.Y))
            }
            return a
        }), i = function(a, b) {
            if (a[b].length > 7) {
                a[b].shift();
                for (var c = a[b]; c.length; )
                    a.splice(b++, 0, ["C"][E](c.splice(0, 6)));
                a.splice(b, 1),
                l = O(d.length, e && e.length || 0)
            }
        }, j = function(a, b, c, f, g) {
            a && b && "M" == a[g][0] && "M" != b[g][0] && (b.splice(g, 0, ["M", f.x, f.y]),
            c.bx = 0,
            c.by = 0,
            c.x = a[g][1],
            c.y = a[g][2],
            l = O(d.length, e && e.length || 0))
        }, k = 0, l = O(d.length, e && e.length || 0); l > k; k++) {
            d[k] = h(d[k], f),
            i(d, k),
            e && (e[k] = h(e[k], g)),
            e && i(e, k),
            j(d, e, f, g, k),
            j(e, d, g, f, k);
            var m = d[k]
              , n = e && e[k]
              , o = m.length
              , p = e && n.length;
            f.x = m[o - 2],
            f.y = m[o - 1],
            f.bx = _(m[o - 4]) || f.x,
            f.by = _(m[o - 3]) || f.y,
            g.bx = e && (_(n[p - 4]) || g.x),
            g.by = e && (_(n[p - 3]) || g.y),
            g.x = e && n[p - 2],
            g.y = e && n[p - 1]
        }
        return e || (c.curve = Cb(d)),
        e ? [d, e] : d
    }, null, Cb)
      , Lb = (c._parseDots = f(function(a) {
        for (var b = [], d = 0, e = a.length; e > d; d++) {
            var f = {}
              , g = a[d].match(/^([^:]*):?([\d\.]*)/);
            if (f.color = c.getRGB(g[1]),
            f.color.error)
                return null;
            f.color = f.color.hex,
            g[2] && (f.offset = g[2] + "%"),
            b.push(f)
        }
        for (d = 1,
        e = b.length - 1; e > d; d++)
            if (!b[d].offset) {
                for (var h = _(b[d - 1].offset || 0), i = 0, j = d + 1; e > j; j++)
                    if (b[j].offset) {
                        i = b[j].offset;
                        break
                    }
                i || (i = 100,
                j = e),
                i = _(i);
                for (var k = (i - h) / (j - d + 1); j > d; d++)
                    h += k,
                    b[d].offset = h + "%"
            }
        return b
    }),
    c._tear = function(a, b) {
        a == b.top && (b.top = a.prev),
        a == b.bottom && (b.bottom = a.next),
        a.next && (a.next.prev = a.prev),
        a.prev && (a.prev.next = a.next)
    }
    )
      , Mb = (c._tofront = function(a, b) {
        b.top !== a && (Lb(a, b),
        a.next = null,
        a.prev = b.top,
        b.top.next = a,
        b.top = a)
    }
    ,
    c._toback = function(a, b) {
        b.bottom !== a && (Lb(a, b),
        a.next = b.bottom,
        a.prev = null,
        b.bottom.prev = a,
        b.bottom = a)
    }
    ,
    c._insertafter = function(a, b, c) {
        Lb(a, c),
        b == c.top && (c.top = a),
        b.next && (b.next.prev = a),
        a.next = b.next,
        a.prev = b,
        b.next = a
    }
    ,
    c._insertbefore = function(a, b, c) {
        Lb(a, c),
        b == c.bottom && (c.bottom = a),
        b.prev && (b.prev.next = a),
        a.prev = b.prev,
        b.prev = a,
        a.next = b
    }
    ,
    c.toMatrix = function(a, b) {
        var c = Bb(a)
          , d = {
            _: {
                transform: G
            },
            getBBox: function() {
                return c
            }
        };
        return Nb(d, b),
        d.matrix
    }
    )
      , Nb = (c.transformPath = function(a, b) {
        return rb(a, Mb(a, b))
    }
    ,
    c._extractTransform = function(a, b) {
        if (null == b)
            return a._.transform;
        b = I(b).replace(/\.{3}|\u2026/g, a._.transform || G);
        var d = c.parseTransformString(b)
          , e = 0
          , f = 0
          , g = 0
          , h = 1
          , i = 1
          , j = a._
          , k = new o;
        if (j.transform = d || [],
        d)
            for (var l = 0, m = d.length; m > l; l++) {
                var n, p, q, r, s, t = d[l], u = t.length, v = I(t[0]).toLowerCase(), w = t[0] != v, x = w ? k.invert() : 0;
                "t" == v && 3 == u ? w ? (n = x.x(0, 0),
                p = x.y(0, 0),
                q = x.x(t[1], t[2]),
                r = x.y(t[1], t[2]),
                k.translate(q - n, r - p)) : k.translate(t[1], t[2]) : "r" == v ? 2 == u ? (s = s || a.getBBox(1),
                k.rotate(t[1], s.x + s.width / 2, s.y + s.height / 2),
                e += t[1]) : 4 == u && (w ? (q = x.x(t[2], t[3]),
                r = x.y(t[2], t[3]),
                k.rotate(t[1], q, r)) : k.rotate(t[1], t[2], t[3]),
                e += t[1]) : "s" == v ? 2 == u || 3 == u ? (s = s || a.getBBox(1),
                k.scale(t[1], t[u - 1], s.x + s.width / 2, s.y + s.height / 2),
                h *= t[1],
                i *= t[u - 1]) : 5 == u && (w ? (q = x.x(t[3], t[4]),
                r = x.y(t[3], t[4]),
                k.scale(t[1], t[2], q, r)) : k.scale(t[1], t[2], t[3], t[4]),
                h *= t[1],
                i *= t[2]) : "m" == v && 7 == u && k.add(t[1], t[2], t[3], t[4], t[5], t[6]),
                j.dirtyT = 1,
                a.matrix = k
            }
        a.matrix = k,
        j.sx = h,
        j.sy = i,
        j.deg = e,
        j.dx = f = k.e,
        j.dy = g = k.f,
        1 == h && 1 == i && !e && j.bbox ? (j.bbox.x += +f,
        j.bbox.y += +g) : j.dirtyT = 1
    }
    )
      , Ob = function(a) {
        var b = a[0];
        switch (b.toLowerCase()) {
        case "t":
            return [b, 0, 0];
        case "m":
            return [b, 1, 0, 0, 1, 0, 0];
        case "r":
            return 4 == a.length ? [b, 0, a[2], a[3]] : [b, 0];
        case "s":
            return 5 == a.length ? [b, 1, 1, a[3], a[4]] : 3 == a.length ? [b, 1, 1] : [b, 1]
        }
    }
      , Pb = c._equaliseTransform = function(a, b) {
        b = I(b).replace(/\.{3}|\u2026/g, a),
        a = c.parseTransformString(a) || [],
        b = c.parseTransformString(b) || [];
        for (var d, e, f, g, h = O(a.length, b.length), i = [], j = [], k = 0; h > k; k++) {
            if (f = a[k] || Ob(b[k]),
            g = b[k] || Ob(f),
            f[0] != g[0] || "r" == f[0].toLowerCase() && (f[2] != g[2] || f[3] != g[3]) || "s" == f[0].toLowerCase() && (f[3] != g[3] || f[4] != g[4]))
                return;
            for (i[k] = [],
            j[k] = [],
            d = 0,
            e = O(f.length, g.length); e > d; d++)
                d in f && (i[k][d] = f[d]),
                d in g && (j[k][d] = g[d])
        }
        return {
            from: i,
            to: j
        }
    }
    ;
    c._getContainer = function(a, b, d, e) {
        var f;
        return f = null != e || c.is(a, "object") ? a : A.doc.getElementById(a),
        null != f ? f.tagName ? null == b ? {
            container: f,
            width: f.style.pixelWidth || f.offsetWidth,
            height: f.style.pixelHeight || f.offsetHeight
        } : {
            container: f,
            width: b,
            height: d
        } : {
            container: 1,
            x: a,
            y: b,
            width: d,
            height: e
        } : void 0
    }
    ,
    c.pathToRelative = Db,
    c._engine = {},
    c.path2curve = Kb,
    c.matrix = function(a, b, c, d, e, f) {
        return new o(a,b,c,d,e,f)
    }
    ,
    function(a) {
        function b(a) {
            return a[0] * a[0] + a[1] * a[1]
        }
        function d(a) {
            var c = N.sqrt(b(a));
            a[0] && (a[0] /= c),
            a[1] && (a[1] /= c)
        }
        a.add = function(a, b, c, d, e, f) {
            var g, h, i, j, k = [[], [], []], l = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]], m = [[a, c, e], [b, d, f], [0, 0, 1]];
            for (a && a instanceof o && (m = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]]),
            g = 0; 3 > g; g++)
                for (h = 0; 3 > h; h++) {
                    for (j = 0,
                    i = 0; 3 > i; i++)
                        j += l[g][i] * m[i][h];
                    k[g][h] = j
                }
            this.a = k[0][0],
            this.b = k[1][0],
            this.c = k[0][1],
            this.d = k[1][1],
            this.e = k[0][2],
            this.f = k[1][2]
        }
        ,
        a.invert = function() {
            var a = this
              , b = a.a * a.d - a.b * a.c;
            return new o(a.d / b,-a.b / b,-a.c / b,a.a / b,(a.c * a.f - a.d * a.e) / b,(a.b * a.e - a.a * a.f) / b)
        }
        ,
        a.clone = function() {
            return new o(this.a,this.b,this.c,this.d,this.e,this.f)
        }
        ,
        a.translate = function(a, b) {
            this.add(1, 0, 0, 1, a, b)
        }
        ,
        a.scale = function(a, b, c, d) {
            null == b && (b = a),
            (c || d) && this.add(1, 0, 0, 1, c, d),
            this.add(a, 0, 0, b, 0, 0),
            (c || d) && this.add(1, 0, 0, 1, -c, -d)
        }
        ,
        a.rotate = function(a, b, d) {
            a = c.rad(a),
            b = b || 0,
            d = d || 0;
            var e = +N.cos(a).toFixed(9)
              , f = +N.sin(a).toFixed(9);
            this.add(e, f, -f, e, b, d),
            this.add(1, 0, 0, 1, -b, -d)
        }
        ,
        a.x = function(a, b) {
            return a * this.a + b * this.c + this.e
        }
        ,
        a.y = function(a, b) {
            return a * this.b + b * this.d + this.f
        }
        ,
        a.get = function(a) {
            return +this[I.fromCharCode(97 + a)].toFixed(4)
        }
        ,
        a.toString = function() {
            return c.svg ? "matrix(" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + ")" : [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join()
        }
        ,
        a.toFilter = function() {
            return "progid:DXImageTransform.Microsoft.Matrix(M11=" + this.get(0) + ", M12=" + this.get(2) + ", M21=" + this.get(1) + ", M22=" + this.get(3) + ", Dx=" + this.get(4) + ", Dy=" + this.get(5) + ", sizingmethod='auto expand')"
        }
        ,
        a.offset = function() {
            return [this.e.toFixed(4), this.f.toFixed(4)]
        }
        ,
        a.split = function() {
            var a = {};
            a.dx = this.e,
            a.dy = this.f;
            var e = [[this.a, this.c], [this.b, this.d]];
            a.scalex = N.sqrt(b(e[0])),
            d(e[0]),
            a.shear = e[0][0] * e[1][0] + e[0][1] * e[1][1],
            e[1] = [e[1][0] - e[0][0] * a.shear, e[1][1] - e[0][1] * a.shear],
            a.scaley = N.sqrt(b(e[1])),
            d(e[1]),
            a.shear /= a.scaley;
            var f = -e[0][1]
              , g = e[1][1];
            return 0 > g ? (a.rotate = c.deg(N.acos(g)),
            0 > f && (a.rotate = 360 - a.rotate)) : a.rotate = c.deg(N.asin(f)),
            a.isSimple = !(+a.shear.toFixed(9) || a.scalex.toFixed(9) != a.scaley.toFixed(9) && a.rotate),
            a.isSuperSimple = !+a.shear.toFixed(9) && a.scalex.toFixed(9) == a.scaley.toFixed(9) && !a.rotate,
            a.noRotation = !+a.shear.toFixed(9) && !a.rotate,
            a
        }
        ,
        a.toTransformString = function(a) {
            var b = a || this[J]();
            return b.isSimple ? (b.scalex = +b.scalex.toFixed(4),
            b.scaley = +b.scaley.toFixed(4),
            b.rotate = +b.rotate.toFixed(4),
            (b.dx || b.dy ? "t" + [b.dx, b.dy] : G) + (1 != b.scalex || 1 != b.scaley ? "s" + [b.scalex, b.scaley, 0, 0] : G) + (b.rotate ? "r" + [b.rotate, 0, 0] : G)) : "m" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)]
        }
    }(o.prototype);
    var Qb = navigator.userAgent.match(/Version\/(.*?)\s/) || navigator.userAgent.match(/Chrome\/(\d+)/);
    v.safari = "Apple Computer, Inc." == navigator.vendor && (Qb && Qb[1] < 4 || "iP" == navigator.platform.slice(0, 2)) || "Google Inc." == navigator.vendor && Qb && Qb[1] < 8 ? function() {
        var a = this.rect(-99, -99, this.width + 99, this.height + 99).attr({
            stroke: "none"
        });
        setTimeout(function() {
            a.remove()
        })
    }
    : mb;
    for (var Rb = function() {
        this.returnValue = !1
    }, Sb = function() {
        return this.originalEvent.preventDefault()
    }, Tb = function() {
        this.cancelBubble = !0
    }, Ub = function() {
        return this.originalEvent.stopPropagation()
    }, Vb = function(a) {
        var b = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
          , c = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft;
        return {
            x: a.clientX + c,
            y: a.clientY + b
        }
    }, Wb = function() {
        return A.doc.addEventListener ? function(a, b, c, d) {
            var e = function(a) {
                var b = Vb(a);
                return c.call(d, a, b.x, b.y)
            };
            if (a.addEventListener(b, e, !1),
            F && L[b]) {
                var f = function(b) {
                    for (var e = Vb(b), f = b, g = 0, h = b.targetTouches && b.targetTouches.length; h > g; g++)
                        if (b.targetTouches[g].target == a) {
                            b = b.targetTouches[g],
                            b.originalEvent = f,
                            b.preventDefault = Sb,
                            b.stopPropagation = Ub;
                            break
                        }
                    return c.call(d, b, e.x, e.y)
                };
                a.addEventListener(L[b], f, !1)
            }
            return function() {
                return a.removeEventListener(b, e, !1),
                F && L[b] && a.removeEventListener(L[b], e, !1),
                !0
            }
        }
        : A.doc.attachEvent ? function(a, b, c, d) {
            var e = function(a) {
                a = a || A.win.event;
                var b = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
                  , e = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft
                  , f = a.clientX + e
                  , g = a.clientY + b;
                return a.preventDefault = a.preventDefault || Rb,
                a.stopPropagation = a.stopPropagation || Tb,
                c.call(d, a, f, g)
            };
            a.attachEvent("on" + b, e);
            var f = function() {
                return a.detachEvent("on" + b, e),
                !0
            };
            return f
        }
        : void 0
    }(), Xb = [], Yb = function(a) {
        for (var c, d = a.clientX, e = a.clientY, f = A.doc.documentElement.scrollTop || A.doc.body.scrollTop, g = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft, h = Xb.length; h--; ) {
            if (c = Xb[h],
            F && a.touches) {
                for (var i, j = a.touches.length; j--; )
                    if (i = a.touches[j],
                    i.identifier == c.el._drag.id) {
                        d = i.clientX,
                        e = i.clientY,
                        (a.originalEvent ? a.originalEvent : a).preventDefault();
                        break
                    }
            } else
                a.preventDefault();
            var k, l = c.el.node, m = l.nextSibling, n = l.parentNode, o = l.style.display;
            A.win.opera && n.removeChild(l),
            l.style.display = "none",
            k = c.el.paper.getElementByPoint(d, e),
            l.style.display = o,
            A.win.opera && (m ? n.insertBefore(l, m) : n.appendChild(l)),
            k && b("raphael.drag.over." + c.el.id, c.el, k),
            d += g,
            e += f,
            b("raphael.drag.move." + c.el.id, c.move_scope || c.el, d - c.el._drag.x, e - c.el._drag.y, d, e, a)
        }
    }, Zb = function(a) {
        c.unmousemove(Yb).unmouseup(Zb);
        for (var d, e = Xb.length; e--; )
            d = Xb[e],
            d.el._drag = {},
            b("raphael.drag.end." + d.el.id, d.end_scope || d.start_scope || d.move_scope || d.el, a);
        Xb = []
    }, $b = c.el = {}, _b = K.length; _b--; )
        !function(a) {
            c[a] = $b[a] = function(b, d) {
                return c.is(b, "function") && (this.events = this.events || [],
                this.events.push({
                    name: a,
                    f: b,
                    unbind: Wb(this.shape || this.node || A.doc, a, b, d || this)
                })),
                this
            }
            ,
            c["un" + a] = $b["un" + a] = function(b) {
                for (var d = this.events || [], e = d.length; e--; )
                    d[e].name != a || !c.is(b, "undefined") && d[e].f != b || (d[e].unbind(),
                    d.splice(e, 1),
                    !d.length && delete this.events);
                return this
            }
        }(K[_b]);
    $b.data = function(a, d) {
        var e = kb[this.id] = kb[this.id] || {};
        if (0 == arguments.length)
            return e;
        if (1 == arguments.length) {
            if (c.is(a, "object")) {
                for (var f in a)
                    a[z](f) && this.data(f, a[f]);
                return this
            }
            return b("raphael.data.get." + this.id, this, e[a], a),
            e[a]
        }
        return e[a] = d,
        b("raphael.data.set." + this.id, this, d, a),
        this
    }
    ,
    $b.removeData = function(a) {
        return null == a ? kb[this.id] = {} : kb[this.id] && delete kb[this.id][a],
        this
    }
    ,
    $b.getData = function() {
        return d(kb[this.id] || {})
    }
    ,
    $b.hover = function(a, b, c, d) {
        return this.mouseover(a, c).mouseout(b, d || c)
    }
    ,
    $b.unhover = function(a, b) {
        return this.unmouseover(a).unmouseout(b)
    }
    ;
    var ac = [];
    $b.drag = function(a, d, e, f, g, h) {
        function i(i) {
            (i.originalEvent || i).preventDefault();
            var j = i.clientX
              , k = i.clientY
              , l = A.doc.documentElement.scrollTop || A.doc.body.scrollTop
              , m = A.doc.documentElement.scrollLeft || A.doc.body.scrollLeft;
            if (this._drag.id = i.identifier,
            F && i.touches)
                for (var n, o = i.touches.length; o--; )
                    if (n = i.touches[o],
                    this._drag.id = n.identifier,
                    n.identifier == this._drag.id) {
                        j = n.clientX,
                        k = n.clientY;
                        break
                    }
            this._drag.x = j + m,
            this._drag.y = k + l,
            !Xb.length && c.mousemove(Yb).mouseup(Zb),
            Xb.push({
                el: this,
                move_scope: f,
                start_scope: g,
                end_scope: h
            }),
            d && b.on("raphael.drag.start." + this.id, d),
            a && b.on("raphael.drag.move." + this.id, a),
            e && b.on("raphael.drag.end." + this.id, e),
            b("raphael.drag.start." + this.id, g || f || this, i.clientX + m, i.clientY + l, i)
        }
        return this._drag = {},
        ac.push({
            el: this,
            start: i
        }),
        this.mousedown(i),
        this
    }
    ,
    $b.onDragOver = function(a) {
        a ? b.on("raphael.drag.over." + this.id, a) : b.unbind("raphael.drag.over." + this.id)
    }
    ,
    $b.undrag = function() {
        for (var a = ac.length; a--; )
            ac[a].el == this && (this.unmousedown(ac[a].start),
            ac.splice(a, 1),
            b.unbind("raphael.drag.*." + this.id));
        !ac.length && c.unmousemove(Yb).unmouseup(Zb),
        Xb = []
    }
    ,
    v.circle = function(a, b, d) {
        var e = c._engine.circle(this, a || 0, b || 0, d || 0);
        return this.__set__ && this.__set__.push(e),
        e
    }
    ,
    v.rect = function(a, b, d, e, f) {
        var g = c._engine.rect(this, a || 0, b || 0, d || 0, e || 0, f || 0);
        return this.__set__ && this.__set__.push(g),
        g
    }
    ,
    v.ellipse = function(a, b, d, e) {
        var f = c._engine.ellipse(this, a || 0, b || 0, d || 0, e || 0);
        return this.__set__ && this.__set__.push(f),
        f
    }
    ,
    v.path = function(a) {
        a && !c.is(a, U) && !c.is(a[0], V) && (a += G);
        var b = c._engine.path(c.format[D](c, arguments), this);
        return this.__set__ && this.__set__.push(b),
        b
    }
    ,
    v.image = function(a, b, d, e, f) {
        var g = c._engine.image(this, a || "about:blank", b || 0, d || 0, e || 0, f || 0);
        return this.__set__ && this.__set__.push(g),
        g
    }
    ,
    v.text = function(a, b, d) {
        var e = c._engine.text(this, a || 0, b || 0, I(d));
        return this.__set__ && this.__set__.push(e),
        e
    }
    ,
    v.set = function(a) {
        !c.is(a, "array") && (a = Array.prototype.splice.call(arguments, 0, arguments.length));
        var b = new mc(a);
        return this.__set__ && this.__set__.push(b),
        b.paper = this,
        b.type = "set",
        b
    }
    ,
    v.setStart = function(a) {
        this.__set__ = a || this.set()
    }
    ,
    v.setFinish = function() {
        var a = this.__set__;
        return delete this.__set__,
        a
    }
    ,
    v.setSize = function(a, b) {
        return c._engine.setSize.call(this, a, b)
    }
    ,
    v.setViewBox = function(a, b, d, e, f) {
        return c._engine.setViewBox.call(this, a, b, d, e, f)
    }
    ,
    v.top = v.bottom = null,
    v.raphael = c;
    var bc = function(a) {
        var b = a.getBoundingClientRect()
          , c = a.ownerDocument
          , d = c.body
          , e = c.documentElement
          , f = e.clientTop || d.clientTop || 0
          , g = e.clientLeft || d.clientLeft || 0
          , h = b.top + (A.win.pageYOffset || e.scrollTop || d.scrollTop) - f
          , i = b.left + (A.win.pageXOffset || e.scrollLeft || d.scrollLeft) - g;
        return {
            y: h,
            x: i
        }
    };
    v.getElementByPoint = function(a, b) {
        var c = this
          , d = c.canvas
          , e = A.doc.elementFromPoint(a, b);
        if (A.win.opera && "svg" == e.tagName) {
            var f = bc(d)
              , g = d.createSVGRect();
            g.x = a - f.x,
            g.y = b - f.y,
            g.width = g.height = 1;
            var h = d.getIntersectionList(g, null);
            h.length && (e = h[h.length - 1])
        }
        if (!e)
            return null;
        for (; e.parentNode && e != d.parentNode && !e.raphael; )
            e = e.parentNode;
        return e == c.canvas.parentNode && (e = d),
        e = e && e.raphael ? c.getById(e.raphaelid) : null
    }
    ,
    v.getElementsByBBox = function(a) {
        var b = this.set();
        return this.forEach(function(d) {
            c.isBBoxIntersect(d.getBBox(), a) && b.push(d)
        }),
        b
    }
    ,
    v.getById = function(a) {
        for (var b = this.bottom; b; ) {
            if (b.id == a)
                return b;
            b = b.next
        }
        return null
    }
    ,
    v.forEach = function(a, b) {
        for (var c = this.bottom; c; ) {
            if (a.call(b, c) === !1)
                return this;
            c = c.next
        }
        return this
    }
    ,
    v.getElementsByPoint = function(a, b) {
        var c = this.set();
        return this.forEach(function(d) {
            d.isPointInside(a, b) && c.push(d)
        }),
        c
    }
    ,
    $b.isPointInside = function(a, b) {
        var d = this.realPath = qb[this.type](this);
        return this.attr("transform") && this.attr("transform").length && (d = c.transformPath(d, this.attr("transform"))),
        c.isPointInsidePath(d, a, b)
    }
    ,
    $b.getBBox = function(a) {
        if (this.removed)
            return {};
        var b = this._;
        return a ? ((b.dirty || !b.bboxwt) && (this.realPath = qb[this.type](this),
        b.bboxwt = Bb(this.realPath),
        b.bboxwt.toString = p,
        b.dirty = 0),
        b.bboxwt) : ((b.dirty || b.dirtyT || !b.bbox) && ((b.dirty || !this.realPath) && (b.bboxwt = 0,
        this.realPath = qb[this.type](this)),
        b.bbox = Bb(rb(this.realPath, this.matrix)),
        b.bbox.toString = p,
        b.dirty = b.dirtyT = 0),
        b.bbox)
    }
    ,
    $b.clone = function() {
        if (this.removed)
            return null;
        var a = this.paper[this.type]().attr(this.attr());
        return this.__set__ && this.__set__.push(a),
        a
    }
    ,
    $b.glow = function(a) {
        if ("text" == this.type)
            return null;
        a = a || {};
        var b = {
            width: (a.width || 10) + (+this.attr("stroke-width") || 1),
            fill: a.fill || !1,
            opacity: a.opacity || .5,
            offsetx: a.offsetx || 0,
            offsety: a.offsety || 0,
            color: a.color || "#000"
        }
          , c = b.width / 2
          , d = this.paper
          , e = d.set()
          , f = this.realPath || qb[this.type](this);
        f = this.matrix ? rb(f, this.matrix) : f;
        for (var g = 1; c + 1 > g; g++)
            e.push(d.path(f).attr({
                stroke: b.color,
                fill: b.fill ? b.color : "none",
                "stroke-linejoin": "round",
                "stroke-linecap": "round",
                "stroke-width": +(b.width / c * g).toFixed(3),
                opacity: +(b.opacity / c).toFixed(3)
            }));
        return e.insertBefore(this).translate(b.offsetx, b.offsety)
    }
    ;
    var cc = function(a, b, d, e, f, g, h, i, l) {
        return null == l ? j(a, b, d, e, f, g, h, i) : c.findDotsAtSegment(a, b, d, e, f, g, h, i, k(a, b, d, e, f, g, h, i, l))
    }
      , dc = function(a, b) {
        return function(d, e, f) {
            d = Kb(d);
            for (var g, h, i, j, k, l = "", m = {}, n = 0, o = 0, p = d.length; p > o; o++) {
                if (i = d[o],
                "M" == i[0])
                    g = +i[1],
                    h = +i[2];
                else {
                    if (j = cc(g, h, i[1], i[2], i[3], i[4], i[5], i[6]),
                    n + j > e) {
                        if (b && !m.start) {
                            if (k = cc(g, h, i[1], i[2], i[3], i[4], i[5], i[6], e - n),
                            l += ["C" + k.start.x, k.start.y, k.m.x, k.m.y, k.x, k.y],
                            f)
                                return l;
                            m.start = l,
                            l = ["M" + k.x, k.y + "C" + k.n.x, k.n.y, k.end.x, k.end.y, i[5], i[6]].join(),
                            n += j,
                            g = +i[5],
                            h = +i[6];
                            continue
                        }
                        if (!a && !b)
                            return k = cc(g, h, i[1], i[2], i[3], i[4], i[5], i[6], e - n),
                            {
                                x: k.x,
                                y: k.y,
                                alpha: k.alpha
                            }
                    }
                    n += j,
                    g = +i[5],
                    h = +i[6]
                }
                l += i.shift() + i
            }
            return m.end = l,
            k = a ? n : b ? m : c.findDotsAtSegment(g, h, i[0], i[1], i[2], i[3], i[4], i[5], 1),
            k.alpha && (k = {
                x: k.x,
                y: k.y,
                alpha: k.alpha
            }),
            k
        }
    }
      , ec = dc(1)
      , fc = dc()
      , gc = dc(0, 1);
    c.getTotalLength = ec,
    c.getPointAtLength = fc,
    c.getSubpath = function(a, b, c) {
        if (this.getTotalLength(a) - c < 1e-6)
            return gc(a, b).end;
        var d = gc(a, c, 1);
        return b ? gc(d, b).end : d
    }
    ,
    $b.getTotalLength = function() {
        var a = this.getPath();
        if (a)
            return this.node.getTotalLength ? this.node.getTotalLength() : ec(a)
    }
    ,
    $b.getPointAtLength = function(a) {
        var b = this.getPath();
        if (b)
            return fc(b, a)
    }
    ,
    $b.getPath = function() {
        var a, b = c._getPath[this.type];
        if ("text" != this.type && "set" != this.type)
            return b && (a = b(this)),
            a
    }
    ,
    $b.getSubpath = function(a, b) {
        var d = this.getPath();
        if (d)
            return c.getSubpath(d, a, b)
    }
    ;
    var hc = c.easing_formulas = {
        linear: function(a) {
            return a
        },
        "<": function(a) {
            return R(a, 1.7)
        },
        ">": function(a) {
            return R(a, .48)
        },
        "<>": function(a) {
            var b = .48 - a / 1.04
              , c = N.sqrt(.1734 + b * b)
              , d = c - b
              , e = R(Q(d), 1 / 3) * (0 > d ? -1 : 1)
              , f = -c - b
              , g = R(Q(f), 1 / 3) * (0 > f ? -1 : 1)
              , h = e + g + .5;
            return 3 * (1 - h) * h * h + h * h * h
        },
        backIn: function(a) {
            var b = 1.70158;
            return a * a * ((b + 1) * a - b)
        },
        backOut: function(a) {
            a -= 1;
            var b = 1.70158;
            return a * a * ((b + 1) * a + b) + 1
        },
        elastic: function(a) {
            return a == !!a ? a : R(2, -10 * a) * N.sin((a - .075) * 2 * S / .3) + 1
        },
        bounce: function(a) {
            var b, c = 7.5625, d = 2.75;
            return 1 / d > a ? b = c * a * a : 2 / d > a ? (a -= 1.5 / d,
            b = c * a * a + .75) : 2.5 / d > a ? (a -= 2.25 / d,
            b = c * a * a + .9375) : (a -= 2.625 / d,
            b = c * a * a + .984375),
            b
        }
    };
    hc.easeIn = hc["ease-in"] = hc["<"],
    hc.easeOut = hc["ease-out"] = hc[">"],
    hc.easeInOut = hc["ease-in-out"] = hc["<>"],
    hc["back-in"] = hc.backIn,
    hc["back-out"] = hc.backOut;
    var ic = []
      , jc = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame || a.oRequestAnimationFrame || a.msRequestAnimationFrame || function(a) {
        setTimeout(a, 16)
    }
      , kc = function() {
        for (var a = +new Date, d = 0; d < ic.length; d++) {
            var e = ic[d];
            if (!e.el.removed && !e.paused) {
                var f, g, h = a - e.start, i = e.ms, j = e.easing, k = e.from, l = e.diff, m = e.to, n = (e.t,
                e.el), o = {}, p = {};
                if (e.initstatus ? (h = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * i,
                e.status = e.initstatus,
                delete e.initstatus,
                e.stop && ic.splice(d--, 1)) : e.status = (e.prev + (e.percent - e.prev) * (h / i)) / e.anim.top,
                !(0 > h))
                    if (i > h) {
                        var q = j(h / i);
                        for (var r in k)
                            if (k[z](r)) {
                                switch (db[r]) {
                                case T:
                                    f = +k[r] + q * i * l[r];
                                    break;
                                case "colour":
                                    f = "rgb(" + [lc($(k[r].r + q * i * l[r].r)), lc($(k[r].g + q * i * l[r].g)), lc($(k[r].b + q * i * l[r].b))].join(",") + ")";
                                    break;
                                case "path":
                                    f = [];
                                    for (var t = 0, u = k[r].length; u > t; t++) {
                                        f[t] = [k[r][t][0]];
                                        for (var v = 1, w = k[r][t].length; w > v; v++)
                                            f[t][v] = +k[r][t][v] + q * i * l[r][t][v];
                                        f[t] = f[t].join(H)
                                    }
                                    f = f.join(H);
                                    break;
                                case "transform":
                                    if (l[r].real)
                                        for (f = [],
                                        t = 0,
                                        u = k[r].length; u > t; t++)
                                            for (f[t] = [k[r][t][0]],
                                            v = 1,
                                            w = k[r][t].length; w > v; v++)
                                                f[t][v] = k[r][t][v] + q * i * l[r][t][v];
                                    else {
                                        var x = function(a) {
                                            return +k[r][a] + q * i * l[r][a]
                                        };
                                        f = [["m", x(0), x(1), x(2), x(3), x(4), x(5)]]
                                    }
                                    break;
                                case "csv":
                                    if ("clip-rect" == r)
                                        for (f = [],
                                        t = 4; t--; )
                                            f[t] = +k[r][t] + q * i * l[r][t];
                                    break;
                                default:
                                    var y = [][E](k[r]);
                                    for (f = [],
                                    t = n.paper.customAttributes[r].length; t--; )
                                        f[t] = +y[t] + q * i * l[r][t]
                                }
                                o[r] = f
                            }
                        n.attr(o),
                        function(a, c, d) {
                            setTimeout(function() {
                                b("raphael.anim.frame." + a, c, d)
                            })
                        }(n.id, n, e.anim)
                    } else {
                        if (function(a, d, e) {
                            setTimeout(function() {
                                b("raphael.anim.frame." + d.id, d, e),
                                b("raphael.anim.finish." + d.id, d, e),
                                c.is(a, "function") && a.call(d)
                            })
                        }(e.callback, n, e.anim),
                        n.attr(m),
                        ic.splice(d--, 1),
                        e.repeat > 1 && !e.next) {
                            for (g in m)
                                m[z](g) && (p[g] = e.totalOrigin[g]);
                            e.el.attr(p),
                            s(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1)
                        }
                        e.next && !e.stop && s(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat)
                    }
            }
        }
        c.svg && n && n.paper && n.paper.safari(),
        ic.length && jc(kc)
    }
      , lc = function(a) {
        return a > 255 ? 255 : 0 > a ? 0 : a
    };
    $b.animateWith = function(a, b, d, e, f, g) {
        var h = this;
        if (h.removed)
            return g && g.call(h),
            h;
        var i = d instanceof r ? d : c.animation(d, e, f, g);
        s(i, h, i.percents[0], null, h.attr());
        for (var j = 0, k = ic.length; k > j; j++)
            if (ic[j].anim == b && ic[j].el == a) {
                ic[k - 1].start = ic[j].start;
                break
            }
        return h
    }
    ,
    $b.onAnimation = function(a) {
        return a ? b.on("raphael.anim.frame." + this.id, a) : b.unbind("raphael.anim.frame." + this.id),
        this
    }
    ,
    r.prototype.delay = function(a) {
        var b = new r(this.anim,this.ms);
        return b.times = this.times,
        b.del = +a || 0,
        b
    }
    ,
    r.prototype.repeat = function(a) {
        var b = new r(this.anim,this.ms);
        return b.del = this.del,
        b.times = N.floor(O(a, 0)) || 1,
        b
    }
    ,
    c.animation = function(a, b, d, e) {
        if (a instanceof r)
            return a;
        (c.is(d, "function") || !d) && (e = e || d || null,
        d = null),
        a = Object(a),
        b = +b || 0;
        var f, g, h = {};
        for (g in a)
            a[z](g) && _(g) != g && _(g) + "%" != g && (f = !0,
            h[g] = a[g]);
        return f ? (d && (h.easing = d),
        e && (h.callback = e),
        new r({
            100: h
        },b)) : new r(a,b)
    }
    ,
    $b.animate = function(a, b, d, e) {
        var f = this;
        if (f.removed)
            return e && e.call(f),
            f;
        var g = a instanceof r ? a : c.animation(a, b, d, e);
        return s(g, f, g.percents[0], null, f.attr()),
        f
    }
    ,
    $b.setTime = function(a, b) {
        return a && null != b && this.status(a, P(b, a.ms) / a.ms),
        this
    }
    ,
    $b.status = function(a, b) {
        var c, d, e = [], f = 0;
        if (null != b)
            return s(a, this, -1, P(b, 1)),
            this;
        for (c = ic.length; c > f; f++)
            if (d = ic[f],
            d.el.id == this.id && (!a || d.anim == a)) {
                if (a)
                    return d.status;
                e.push({
                    anim: d.anim,
                    status: d.status
                })
            }
        return a ? 0 : e
    }
    ,
    $b.pause = function(a) {
        for (var c = 0; c < ic.length; c++)
            ic[c].el.id != this.id || a && ic[c].anim != a || b("raphael.anim.pause." + this.id, this, ic[c].anim) !== !1 && (ic[c].paused = !0);
        return this
    }
    ,
    $b.resume = function(a) {
        for (var c = 0; c < ic.length; c++)
            if (ic[c].el.id == this.id && (!a || ic[c].anim == a)) {
                var d = ic[c];
                b("raphael.anim.resume." + this.id, this, d.anim) !== !1 && (delete d.paused,
                this.status(d.anim, d.status))
            }
        return this
    }
    ,
    $b.stop = function(a) {
        for (var c = 0; c < ic.length; c++)
            ic[c].el.id != this.id || a && ic[c].anim != a || b("raphael.anim.stop." + this.id, this, ic[c].anim) !== !1 && ic.splice(c--, 1);
        return this
    }
    ,
    b.on("raphael.remove", t),
    b.on("raphael.clear", t),
    $b.toString = function() {
        return "Raphaël’s object"
    }
    ;
    var mc = function(a) {
        if (this.items = [],
        this.length = 0,
        this.type = "set",
        a)
            for (var b = 0, c = a.length; c > b; b++)
                !a[b] || a[b].constructor != $b.constructor && a[b].constructor != mc || (this[this.items.length] = this.items[this.items.length] = a[b],
                this.length++)
    }
      , nc = mc.prototype;
    nc.push = function() {
        for (var a, b, c = 0, d = arguments.length; d > c; c++)
            a = arguments[c],
            !a || a.constructor != $b.constructor && a.constructor != mc || (b = this.items.length,
            this[b] = this.items[b] = a,
            this.length++);
        return this
    }
    ,
    nc.pop = function() {
        return this.length && delete this[this.length--],
        this.items.pop()
    }
    ,
    nc.forEach = function(a, b) {
        for (var c = 0, d = this.items.length; d > c; c++)
            if (a.call(b, this.items[c], c) === !1)
                return this;
        return this
    }
    ;
    for (var oc in $b)
        $b[z](oc) && (nc[oc] = function(a) {
            return function() {
                var b = arguments;
                return this.forEach(function(c) {
                    c[a][D](c, b)
                })
            }
        }(oc));
    return nc.attr = function(a, b) {
        if (a && c.is(a, V) && c.is(a[0], "object"))
            for (var d = 0, e = a.length; e > d; d++)
                this.items[d].attr(a[d]);
        else
            for (var f = 0, g = this.items.length; g > f; f++)
                this.items[f].attr(a, b);
        return this
    }
    ,
    nc.clear = function() {
        for (; this.length; )
            this.pop()
    }
    ,
    nc.splice = function(a, b) {
        a = 0 > a ? O(this.length + a, 0) : a,
        b = O(0, P(this.length - a, b));
        var c, d = [], e = [], f = [];
        for (c = 2; c < arguments.length; c++)
            f.push(arguments[c]);
        for (c = 0; b > c; c++)
            e.push(this[a + c]);
        for (; c < this.length - a; c++)
            d.push(this[a + c]);
        var g = f.length;
        for (c = 0; c < g + d.length; c++)
            this.items[a + c] = this[a + c] = g > c ? f[c] : d[c - g];
        for (c = this.items.length = this.length -= b - g; this[c]; )
            delete this[c++];
        return new mc(e)
    }
    ,
    nc.exclude = function(a) {
        for (var b = 0, c = this.length; c > b; b++)
            if (this[b] == a)
                return this.splice(b, 1),
                !0
    }
    ,
    nc.animate = function(a, b, d, e) {
        (c.is(d, "function") || !d) && (e = d || null);
        var f, g, h = this.items.length, i = h, j = this;
        if (!h)
            return this;
        e && (g = function() {
            !--h && e.call(j)
        }
        ),
        d = c.is(d, U) ? d : g;
        var k = c.animation(a, b, d, g);
        for (f = this.items[--i].animate(k); i--; )
            this.items[i] && !this.items[i].removed && this.items[i].animateWith(f, k, k),
            this.items[i] && !this.items[i].removed || h--;
        return this
    }
    ,
    nc.insertAfter = function(a) {
        for (var b = this.items.length; b--; )
            this.items[b].insertAfter(a);
        return this
    }
    ,
    nc.getBBox = function() {
        for (var a = [], b = [], c = [], d = [], e = this.items.length; e--; )
            if (!this.items[e].removed) {
                var f = this.items[e].getBBox();
                a.push(f.x),
                b.push(f.y),
                c.push(f.x + f.width),
                d.push(f.y + f.height)
            }
        return a = P[D](0, a),
        b = P[D](0, b),
        c = O[D](0, c),
        d = O[D](0, d),
        {
            x: a,
            y: b,
            x2: c,
            y2: d,
            width: c - a,
            height: d - b
        }
    }
    ,
    nc.clone = function(a) {
        a = this.paper.set();
        for (var b = 0, c = this.items.length; c > b; b++)
            a.push(this.items[b].clone());
        return a
    }
    ,
    nc.toString = function() {
        return "Raphaël‘s set"
    }
    ,
    nc.glow = function(a) {
        var b = this.paper.set();
        return this.forEach(function(c) {
            var d = c.glow(a);
            null != d && d.forEach(function(a) {
                b.push(a)
            })
        }),
        b
    }
    ,
    nc.isPointInside = function(a, b) {
        var c = !1;
        return this.forEach(function(d) {
            return d.isPointInside(a, b) ? (console.log("runned"),
            c = !0,
            !1) : void 0
        }),
        c
    }
    ,
    c.registerFont = function(a) {
        if (!a.face)
            return a;
        this.fonts = this.fonts || {};
        var b = {
            w: a.w,
            face: {},
            glyphs: {}
        }
          , c = a.face["font-family"];
        for (var d in a.face)
            a.face[z](d) && (b.face[d] = a.face[d]);
        if (this.fonts[c] ? this.fonts[c].push(b) : this.fonts[c] = [b],
        !a.svg) {
            b.face["units-per-em"] = ab(a.face["units-per-em"], 10);
            for (var e in a.glyphs)
                if (a.glyphs[z](e)) {
                    var f = a.glyphs[e];
                    if (b.glyphs[e] = {
                        w: f.w,
                        k: {},
                        d: f.d && "M" + f.d.replace(/[mlcxtrv]/g, function(a) {
                            return {
                                l: "L",
                                c: "C",
                                x: "z",
                                t: "m",
                                r: "l",
                                v: "c"
                            }[a] || "M"
                        }) + "z"
                    },
                    f.k)
                        for (var g in f.k)
                            f[z](g) && (b.glyphs[e].k[g] = f.k[g])
                }
        }
        return a
    }
    ,
    v.getFont = function(a, b, d, e) {
        if (e = e || "normal",
        d = d || "normal",
        b = +b || {
            normal: 400,
            bold: 700,
            lighter: 300,
            bolder: 800
        }[b] || 400,
        c.fonts) {
            var f = c.fonts[a];
            if (!f) {
                var g = new RegExp("(^|\\s)" + a.replace(/[^\w\d\s+!~.:_-]/g, G) + "(\\s|$)","i");
                for (var h in c.fonts)
                    if (c.fonts[z](h) && g.test(h)) {
                        f = c.fonts[h];
                        break
                    }
            }
            var i;
            if (f)
                for (var j = 0, k = f.length; k > j && (i = f[j],
                i.face["font-weight"] != b || i.face["font-style"] != d && i.face["font-style"] || i.face["font-stretch"] != e); j++)
                    ;
            return i
        }
    }
    ,
    v.print = function(a, b, d, e, f, g, h, i) {
        g = g || "middle",
        h = O(P(h || 0, 1), -1),
        i = O(P(i || 1, 3), 1);
        var j, k = I(d)[J](G), l = 0, m = 0, n = G;
        if (c.is(e, "string") && (e = this.getFont(e)),
        e) {
            j = (f || 16) / e.face["units-per-em"];
            for (var o = e.face.bbox[J](w), p = +o[0], q = o[3] - o[1], r = 0, s = +o[1] + ("baseline" == g ? q + +e.face.descent : q / 2), t = 0, u = k.length; u > t; t++) {
                if ("\n" == k[t])
                    l = 0,
                    x = 0,
                    m = 0,
                    r += q * i;
                else {
                    var v = m && e.glyphs[k[t - 1]] || {}
                      , x = e.glyphs[k[t]];
                    l += m ? (v.w || e.w) + (v.k && v.k[k[t]] || 0) + e.w * h : 0,
                    m = 1
                }
                x && x.d && (n += c.transformPath(x.d, ["t", l * j, r * j, "s", j, j, p, s, "t", (a - p) / j, (b - s) / j]))
            }
        }
        return this.path(n).attr({
            fill: "#000",
            stroke: "none"
        })
    }
    ,
    v.add = function(a) {
        if (c.is(a, "array"))
            for (var b, d = this.set(), e = 0, f = a.length; f > e; e++)
                b = a[e] || {},
                x[z](b.type) && d.push(this[b.type]().attr(b));
        return d
    }
    ,
    c.format = function(a, b) {
        var d = c.is(b, V) ? [0][E](b) : arguments;
        return a && c.is(a, U) && d.length - 1 && (a = a.replace(y, function(a, b) {
            return null == d[++b] ? G : d[b]
        })),
        a || G
    }
    ,
    c.fullfill = function() {
        var a = /\{([^\}]+)\}/g
          , b = /(?:(?:^|\.)(.+?)(?=\[|\.|$|\()|\[('|")(.+?)\2\])(\(\))?/g
          , c = function(a, c, d) {
            var e = d;
            return c.replace(b, function(a, b, c, d, f) {
                b = b || d,
                e && (b in e && (e = e[b]),
                "function" == typeof e && f && (e = e()))
            }),
            e = (null == e || e == d ? a : e) + ""
        };
        return function(b, d) {
            return String(b).replace(a, function(a, b) {
                return c(a, b, d)
            })
        }
    }(),
    c.ninja = function() {
        return B.was ? A.win.Raphael = B.is : delete Raphael,
        c
    }
    ,
    c.st = nc,
    function(a, b, d) {
        function e() {
            /in/.test(a.readyState) ? setTimeout(e, 9) : c.eve("raphael.DOMload")
        }
        null == a.readyState && a.addEventListener && (a.addEventListener(b, d = function() {
            a.removeEventListener(b, d, !1),
            a.readyState = "complete"
        }
        , !1),
        a.readyState = "loading"),
        e()
    }(document, "DOMContentLoaded"),
    b.on("raphael.DOMload", function() {
        u = !0
    }),
    function() {
        if (c.svg) {
            var a = "hasOwnProperty"
              , b = String
              , d = parseFloat
              , e = parseInt
              , f = Math
              , g = f.max
              , h = f.abs
              , i = f.pow
              , j = /[, ]+/
              , k = c.eve
              , l = ""
              , m = " "
              , n = "http://www.w3.org/1999/xlink"
              , o = {
                block: "M5,0 0,2.5 5,5z",
                classic: "M5,0 0,2.5 5,5 3.5,3 3.5,2z",
                diamond: "M2.5,0 5,2.5 2.5,5 0,2.5z",
                open: "M6,1 1,3.5 6,6",
                oval: "M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z"
            }
              , p = {};
            c.toString = function() {
                return "Your browser supports SVG.\nYou are running Raphaël " + this.version
            }
            ;
            var q = function(d, e) {
                if (e) {
                    "string" == typeof d && (d = q(d));
                    for (var f in e)
                        e[a](f) && ("xlink:" == f.substring(0, 6) ? d.setAttributeNS(n, f.substring(6), b(e[f])) : d.setAttribute(f, b(e[f])))
                } else
                    d = c._g.doc.createElementNS("http://www.w3.org/2000/svg", d),
                    d.style && (d.style.webkitTapHighlightColor = "rgba(0,0,0,0)");
                return d
            }
              , r = function(a, e) {
                var j = "linear"
                  , k = a.id + e
                  , m = .5
                  , n = .5
                  , o = a.node
                  , p = a.paper
                  , r = o.style
                  , s = c._g.doc.getElementById(k);
                if (!s) {
                    if (e = b(e).replace(c._radial_gradient, function(a, b, c) {
                        if (j = "radial",
                        b && c) {
                            m = d(b),
                            n = d(c);
                            var e = 2 * (n > .5) - 1;
                            i(m - .5, 2) + i(n - .5, 2) > .25 && (n = f.sqrt(.25 - i(m - .5, 2)) * e + .5) && .5 != n && (n = n.toFixed(5) - 1e-5 * e)
                        }
                        return l
                    }),
                    e = e.split(/\s*\-\s*/),
                    "linear" == j) {
                        var t = e.shift();
                        if (t = -d(t),
                        isNaN(t))
                            return null;
                        var u = [0, 0, f.cos(c.rad(t)), f.sin(c.rad(t))]
                          , v = 1 / (g(h(u[2]), h(u[3])) || 1);
                        u[2] *= v,
                        u[3] *= v,
                        u[2] < 0 && (u[0] = -u[2],
                        u[2] = 0),
                        u[3] < 0 && (u[1] = -u[3],
                        u[3] = 0)
                    }
                    var w = c._parseDots(e);
                    if (!w)
                        return null;
                    if (k = k.replace(/[\(\)\s,\xb0#]/g, "_"),
                    a.gradient && k != a.gradient.id && (p.defs.removeChild(a.gradient),
                    delete a.gradient),
                    !a.gradient) {
                        s = q(j + "Gradient", {
                            id: k
                        }),
                        a.gradient = s,
                        q(s, "radial" == j ? {
                            fx: m,
                            fy: n
                        } : {
                            x1: u[0],
                            y1: u[1],
                            x2: u[2],
                            y2: u[3],
                            gradientTransform: a.matrix.invert()
                        }),
                        p.defs.appendChild(s);
                        for (var x = 0, y = w.length; y > x; x++)
                            s.appendChild(q("stop", {
                                offset: w[x].offset ? w[x].offset : x ? "100%" : "0%",
                                "stop-color": w[x].color || "#fff"
                            }))
                    }
                }
                return q(o, {
                    fill: "url(#" + k + ")",
                    opacity: 1,
                    "fill-opacity": 1
                }),
                r.fill = l,
                r.opacity = 1,
                r.fillOpacity = 1,
                1
            }
              , s = function(a) {
                var b = a.getBBox(1);
                q(a.pattern, {
                    patternTransform: a.matrix.invert() + " translate(" + b.x + "," + b.y + ")"
                })
            }
              , t = function(d, e, f) {
                if ("path" == d.type) {
                    for (var g, h, i, j, k, m = b(e).toLowerCase().split("-"), n = d.paper, r = f ? "end" : "start", s = d.node, t = d.attrs, u = t["stroke-width"], v = m.length, w = "classic", x = 3, y = 3, z = 5; v--; )
                        switch (m[v]) {
                        case "block":
                        case "classic":
                        case "oval":
                        case "diamond":
                        case "open":
                        case "none":
                            w = m[v];
                            break;
                        case "wide":
                            y = 5;
                            break;
                        case "narrow":
                            y = 2;
                            break;
                        case "long":
                            x = 5;
                            break;
                        case "short":
                            x = 2
                        }
                    if ("open" == w ? (x += 2,
                    y += 2,
                    z += 2,
                    i = 1,
                    j = f ? 4 : 1,
                    k = {
                        fill: "none",
                        stroke: t.stroke
                    }) : (j = i = x / 2,
                    k = {
                        fill: t.stroke,
                        stroke: "none"
                    }),
                    d._.arrows ? f ? (d._.arrows.endPath && p[d._.arrows.endPath]--,
                    d._.arrows.endMarker && p[d._.arrows.endMarker]--) : (d._.arrows.startPath && p[d._.arrows.startPath]--,
                    d._.arrows.startMarker && p[d._.arrows.startMarker]--) : d._.arrows = {},
                    "none" != w) {
                        var A = "raphael-marker-" + w
                          , B = "raphael-marker-" + r + w + x + y;
                        c._g.doc.getElementById(A) ? p[A]++ : (n.defs.appendChild(q(q("path"), {
                            "stroke-linecap": "round",
                            d: o[w],
                            id: A
                        })),
                        p[A] = 1);
                        var C, D = c._g.doc.getElementById(B);
                        D ? (p[B]++,
                        C = D.getElementsByTagName("use")[0]) : (D = q(q("marker"), {
                            id: B,
                            markerHeight: y,
                            markerWidth: x,
                            orient: "auto",
                            refX: j,
                            refY: y / 2
                        }),
                        C = q(q("use"), {
                            "xlink:href": "#" + A,
                            transform: (f ? "rotate(180 " + x / 2 + " " + y / 2 + ") " : l) + "scale(" + x / z + "," + y / z + ")",
                            "stroke-width": (1 / ((x / z + y / z) / 2)).toFixed(4)
                        }),
                        D.appendChild(C),
                        n.defs.appendChild(D),
                        p[B] = 1),
                        q(C, k);
                        var E = i * ("diamond" != w && "oval" != w);
                        f ? (g = d._.arrows.startdx * u || 0,
                        h = c.getTotalLength(t.path) - E * u) : (g = E * u,
                        h = c.getTotalLength(t.path) - (d._.arrows.enddx * u || 0)),
                        k = {},
                        k["marker-" + r] = "url(#" + B + ")",
                        (h || g) && (k.d = c.getSubpath(t.path, g, h)),
                        q(s, k),
                        d._.arrows[r + "Path"] = A,
                        d._.arrows[r + "Marker"] = B,
                        d._.arrows[r + "dx"] = E,
                        d._.arrows[r + "Type"] = w,
                        d._.arrows[r + "String"] = e
                    } else
                        f ? (g = d._.arrows.startdx * u || 0,
                        h = c.getTotalLength(t.path) - g) : (g = 0,
                        h = c.getTotalLength(t.path) - (d._.arrows.enddx * u || 0)),
                        d._.arrows[r + "Path"] && q(s, {
                            d: c.getSubpath(t.path, g, h)
                        }),
                        delete d._.arrows[r + "Path"],
                        delete d._.arrows[r + "Marker"],
                        delete d._.arrows[r + "dx"],
                        delete d._.arrows[r + "Type"],
                        delete d._.arrows[r + "String"];
                    for (k in p)
                        if (p[a](k) && !p[k]) {
                            var F = c._g.doc.getElementById(k);
                            F && F.parentNode.removeChild(F)
                        }
                }
            }
              , u = {
                "": [0],
                none: [0],
                "-": [3, 1],
                ".": [1, 1],
                "-.": [3, 1, 1, 1],
                "-..": [3, 1, 1, 1, 1, 1],
                ". ": [1, 3],
                "- ": [4, 3],
                "--": [8, 3],
                "- .": [4, 3, 1, 3],
                "--.": [8, 3, 1, 3],
                "--..": [8, 3, 1, 3, 1, 3]
            }
              , v = function(a, c, d) {
                if (c = u[b(c).toLowerCase()]) {
                    for (var e = a.attrs["stroke-width"] || "1", f = {
                        round: e,
                        square: e,
                        butt: 0
                    }[a.attrs["stroke-linecap"] || d["stroke-linecap"]] || 0, g = [], h = c.length; h--; )
                        g[h] = c[h] * e + (h % 2 ? 1 : -1) * f;
                    q(a.node, {
                        "stroke-dasharray": g.join(",")
                    })
                }
            }
              , w = function(d, f) {
                var i = d.node
                  , k = d.attrs
                  , m = i.style.visibility;
                i.style.visibility = "hidden";
                for (var o in f)
                    if (f[a](o)) {
                        if (!c._availableAttrs[a](o))
                            continue;
                        var p = f[o];
                        switch (k[o] = p,
                        o) {
                        case "blur":
                            d.blur(p);
                            break;
                        case "href":
                        case "title":
                            var u = q("title")
                              , w = c._g.doc.createTextNode(p);
                            u.appendChild(w),
                            i.appendChild(u);
                            break;
                        case "target":
                            var x = i.parentNode;
                            if ("a" != x.tagName.toLowerCase()) {
                                var u = q("a");
                                x.insertBefore(u, i),
                                u.appendChild(i),
                                x = u
                            }
                            "target" == o ? x.setAttributeNS(n, "show", "blank" == p ? "new" : p) : x.setAttributeNS(n, o, p);
                            break;
                        case "cursor":
                            i.style.cursor = p;
                            break;
                        case "transform":
                            d.transform(p);
                            break;
                        case "arrow-start":
                            t(d, p);
                            break;
                        case "arrow-end":
                            t(d, p, 1);
                            break;
                        case "clip-rect":
                            var z = b(p).split(j);
                            if (4 == z.length) {
                                d.clip && d.clip.parentNode.parentNode.removeChild(d.clip.parentNode);
                                var A = q("clipPath")
                                  , B = q("rect");
                                A.id = c.createUUID(),
                                q(B, {
                                    x: z[0],
                                    y: z[1],
                                    width: z[2],
                                    height: z[3]
                                }),
                                A.appendChild(B),
                                d.paper.defs.appendChild(A),
                                q(i, {
                                    "clip-path": "url(#" + A.id + ")"
                                }),
                                d.clip = B
                            }
                            if (!p) {
                                var C = i.getAttribute("clip-path");
                                if (C) {
                                    var D = c._g.doc.getElementById(C.replace(/(^url\(#|\)$)/g, l));
                                    D && D.parentNode.removeChild(D),
                                    q(i, {
                                        "clip-path": l
                                    }),
                                    delete d.clip
                                }
                            }
                            break;
                        case "path":
                            "path" == d.type && (q(i, {
                                d: p ? k.path = c._pathToAbsolute(p) : "M0,0"
                            }),
                            d._.dirty = 1,
                            d._.arrows && ("startString"in d._.arrows && t(d, d._.arrows.startString),
                            "endString"in d._.arrows && t(d, d._.arrows.endString, 1)));
                            break;
                        case "width":
                            if (i.setAttribute(o, p),
                            d._.dirty = 1,
                            !k.fx)
                                break;
                            o = "x",
                            p = k.x;
                        case "x":
                            k.fx && (p = -k.x - (k.width || 0));
                        case "rx":
                            if ("rx" == o && "rect" == d.type)
                                break;
                        case "cx":
                            i.setAttribute(o, p),
                            d.pattern && s(d),
                            d._.dirty = 1;
                            break;
                        case "height":
                            if (i.setAttribute(o, p),
                            d._.dirty = 1,
                            !k.fy)
                                break;
                            o = "y",
                            p = k.y;
                        case "y":
                            k.fy && (p = -k.y - (k.height || 0));
                        case "ry":
                            if ("ry" == o && "rect" == d.type)
                                break;
                        case "cy":
                            i.setAttribute(o, p),
                            d.pattern && s(d),
                            d._.dirty = 1;
                            break;
                        case "r":
                            "rect" == d.type ? q(i, {
                                rx: p,
                                ry: p
                            }) : i.setAttribute(o, p),
                            d._.dirty = 1;
                            break;
                        case "src":
                            "image" == d.type && i.setAttributeNS(n, "href", p);
                            break;
                        case "stroke-width":
                            (1 != d._.sx || 1 != d._.sy) && (p /= g(h(d._.sx), h(d._.sy)) || 1),
                            d.paper._vbSize && (p *= d.paper._vbSize),
                            i.setAttribute(o, p),
                            k["stroke-dasharray"] && v(d, k["stroke-dasharray"], f),
                            d._.arrows && ("startString"in d._.arrows && t(d, d._.arrows.startString),
                            "endString"in d._.arrows && t(d, d._.arrows.endString, 1));
                            break;
                        case "stroke-dasharray":
                            v(d, p, f);
                            break;
                        case "fill":
                            var E = b(p).match(c._ISURL);
                            if (E) {
                                A = q("pattern");
                                var F = q("image");
                                A.id = c.createUUID(),
                                q(A, {
                                    x: 0,
                                    y: 0,
                                    patternUnits: "userSpaceOnUse",
                                    height: 1,
                                    width: 1
                                }),
                                q(F, {
                                    x: 0,
                                    y: 0,
                                    "xlink:href": E[1]
                                }),
                                A.appendChild(F),
                                function(a) {
                                    c._preload(E[1], function() {
                                        var b = this.offsetWidth
                                          , c = this.offsetHeight;
                                        q(a, {
                                            width: b,
                                            height: c
                                        }),
                                        q(F, {
                                            width: b,
                                            height: c
                                        }),
                                        d.paper.safari()
                                    })
                                }(A),
                                d.paper.defs.appendChild(A),
                                q(i, {
                                    fill: "url(#" + A.id + ")"
                                }),
                                d.pattern = A,
                                d.pattern && s(d);
                                break
                            }
                            var G = c.getRGB(p);
                            if (G.error) {
                                if (("circle" == d.type || "ellipse" == d.type || "r" != b(p).charAt()) && r(d, p)) {
                                    if ("opacity"in k || "fill-opacity"in k) {
                                        var H = c._g.doc.getElementById(i.getAttribute("fill").replace(/^url\(#|\)$/g, l));
                                        if (H) {
                                            var I = H.getElementsByTagName("stop");
                                            q(I[I.length - 1], {
                                                "stop-opacity": ("opacity"in k ? k.opacity : 1) * ("fill-opacity"in k ? k["fill-opacity"] : 1)
                                            })
                                        }
                                    }
                                    k.gradient = p,
                                    k.fill = "none";
                                    break
                                }
                            } else
                                delete f.gradient,
                                delete k.gradient,
                                !c.is(k.opacity, "undefined") && c.is(f.opacity, "undefined") && q(i, {
                                    opacity: k.opacity
                                }),
                                !c.is(k["fill-opacity"], "undefined") && c.is(f["fill-opacity"], "undefined") && q(i, {
                                    "fill-opacity": k["fill-opacity"]
                                });
                            G[a]("opacity") && q(i, {
                                "fill-opacity": G.opacity > 1 ? G.opacity / 100 : G.opacity
                            });
                        case "stroke":
                            G = c.getRGB(p),
                            i.setAttribute(o, G.hex),
                            "stroke" == o && G[a]("opacity") && q(i, {
                                "stroke-opacity": G.opacity > 1 ? G.opacity / 100 : G.opacity
                            }),
                            "stroke" == o && d._.arrows && ("startString"in d._.arrows && t(d, d._.arrows.startString),
                            "endString"in d._.arrows && t(d, d._.arrows.endString, 1));
                            break;
                        case "gradient":
                            ("circle" == d.type || "ellipse" == d.type || "r" != b(p).charAt()) && r(d, p);
                            break;
                        case "opacity":
                            k.gradient && !k[a]("stroke-opacity") && q(i, {
                                "stroke-opacity": p > 1 ? p / 100 : p
                            });
                        case "fill-opacity":
                            if (k.gradient) {
                                H = c._g.doc.getElementById(i.getAttribute("fill").replace(/^url\(#|\)$/g, l)),
                                H && (I = H.getElementsByTagName("stop"),
                                q(I[I.length - 1], {
                                    "stop-opacity": p
                                }));
                                break
                            }
                        default:
                            "font-size" == o && (p = e(p, 10) + "px");
                            var J = o.replace(/(\-.)/g, function(a) {
                                return a.substring(1).toUpperCase()
                            });
                            i.style[J] = p,
                            d._.dirty = 1,
                            i.setAttribute(o, p)
                        }
                    }
                y(d, f),
                i.style.visibility = m
            }
              , x = 1.2
              , y = function(d, f) {
                if ("text" == d.type && (f[a]("text") || f[a]("font") || f[a]("font-size") || f[a]("x") || f[a]("y"))) {
                    var g = d.attrs
                      , h = d.node
                      , i = h.firstChild ? e(c._g.doc.defaultView.getComputedStyle(h.firstChild, l).getPropertyValue("font-size"), 10) : 10;
                    if (f[a]("text")) {
                        for (g.text = f.text; h.firstChild; )
                            h.removeChild(h.firstChild);
                        for (var j, k = b(f.text).split("\n"), m = [], n = 0, o = k.length; o > n; n++)
                            j = q("tspan"),
                            n && q(j, {
                                dy: i * x,
                                x: g.x
                            }),
                            j.appendChild(c._g.doc.createTextNode(k[n])),
                            h.appendChild(j),
                            m[n] = j
                    } else
                        for (m = h.getElementsByTagName("tspan"),
                        n = 0,
                        o = m.length; o > n; n++)
                            n ? q(m[n], {
                                dy: i * x,
                                x: g.x
                            }) : q(m[0], {
                                dy: 0
                            });
                    q(h, {
                        x: g.x,
                        y: g.y
                    }),
                    d._.dirty = 1;
                    var p = d._getBBox()
                      , r = g.y - (p.y + p.height / 2);
                    r && c.is(r, "finite") && q(m[0], {
                        dy: r
                    })
                }
            }
              , z = function(a, b) {
                this[0] = this.node = a,
                a.raphael = !0,
                this.id = c._oid++,
                a.raphaelid = this.id,
                this.matrix = c.matrix(),
                this.realPath = null,
                this.paper = b,
                this.attrs = this.attrs || {},
                this._ = {
                    transform: [],
                    sx: 1,
                    sy: 1,
                    deg: 0,
                    dx: 0,
                    dy: 0,
                    dirty: 1
                },
                !b.bottom && (b.bottom = this),
                this.prev = b.top,
                b.top && (b.top.next = this),
                b.top = this,
                this.next = null
            }
              , A = c.el;
            z.prototype = A,
            A.constructor = z,
            c._engine.path = function(a, b) {
                var c = q("path");
                b.canvas && b.canvas.appendChild(c);
                var d = new z(c,b);
                return d.type = "path",
                w(d, {
                    fill: "none",
                    stroke: "#000",
                    path: a
                }),
                d
            }
            ,
            A.rotate = function(a, c, e) {
                if (this.removed)
                    return this;
                if (a = b(a).split(j),
                a.length - 1 && (c = d(a[1]),
                e = d(a[2])),
                a = d(a[0]),
                null == e && (c = e),
                null == c || null == e) {
                    var f = this.getBBox(1);
                    c = f.x + f.width / 2,
                    e = f.y + f.height / 2
                }
                return this.transform(this._.transform.concat([["r", a, c, e]])),
                this
            }
            ,
            A.scale = function(a, c, e, f) {
                if (this.removed)
                    return this;
                if (a = b(a).split(j),
                a.length - 1 && (c = d(a[1]),
                e = d(a[2]),
                f = d(a[3])),
                a = d(a[0]),
                null == c && (c = a),
                null == f && (e = f),
                null == e || null == f)
                    var g = this.getBBox(1);
                return e = null == e ? g.x + g.width / 2 : e,
                f = null == f ? g.y + g.height / 2 : f,
                this.transform(this._.transform.concat([["s", a, c, e, f]])),
                this
            }
            ,
            A.translate = function(a, c) {
                return this.removed ? this : (a = b(a).split(j),
                a.length - 1 && (c = d(a[1])),
                a = d(a[0]) || 0,
                c = +c || 0,
                this.transform(this._.transform.concat([["t", a, c]])),
                this)
            }
            ,
            A.transform = function(b) {
                var d = this._;
                if (null == b)
                    return d.transform;
                if (c._extractTransform(this, b),
                this.clip && q(this.clip, {
                    transform: this.matrix.invert()
                }),
                this.pattern && s(this),
                this.node && q(this.node, {
                    transform: this.matrix
                }),
                1 != d.sx || 1 != d.sy) {
                    var e = this.attrs[a]("stroke-width") ? this.attrs["stroke-width"] : 1;
                    this.attr({
                        "stroke-width": e
                    })
                }
                return this
            }
            ,
            A.hide = function() {
                return !this.removed && this.paper.safari(this.node.style.display = "none"),
                this
            }
            ,
            A.show = function() {
                return !this.removed && this.paper.safari(this.node.style.display = ""),
                this
            }
            ,
            A.remove = function() {
                if (!this.removed && this.node.parentNode) {
                    var a = this.paper;
                    a.__set__ && a.__set__.exclude(this),
                    k.unbind("raphael.*.*." + this.id),
                    this.gradient && a.defs.removeChild(this.gradient),
                    c._tear(this, a),
                    "a" == this.node.parentNode.tagName.toLowerCase() ? this.node.parentNode.parentNode.removeChild(this.node.parentNode) : this.node.parentNode.removeChild(this.node);
                    for (var b in this)
                        this[b] = "function" == typeof this[b] ? c._removedFactory(b) : null;
                    this.removed = !0
                }
            }
            ,
            A._getBBox = function() {
                if ("none" == this.node.style.display) {
                    this.show();
                    var a = !0
                }
                var b = {};
                try {
                    b = this.node.getBBox()
                } catch (c) {} finally {
                    b = b || {}
                }
                return a && this.hide(),
                b
            }
            ,
            A.attr = function(b, d) {
                if (this.removed)
                    return this;
                if (null == b) {
                    var e = {};
                    for (var f in this.attrs)
                        this.attrs[a](f) && (e[f] = this.attrs[f]);
                    return e.gradient && "none" == e.fill && (e.fill = e.gradient) && delete e.gradient,
                    e.transform = this._.transform,
                    e
                }
                if (null == d && c.is(b, "string")) {
                    if ("fill" == b && "none" == this.attrs.fill && this.attrs.gradient)
                        return this.attrs.gradient;
                    if ("transform" == b)
                        return this._.transform;
                    for (var g = b.split(j), h = {}, i = 0, l = g.length; l > i; i++)
                        b = g[i],
                        h[b] = b in this.attrs ? this.attrs[b] : c.is(this.paper.customAttributes[b], "function") ? this.paper.customAttributes[b].def : c._availableAttrs[b];
                    return l - 1 ? h : h[g[0]]
                }
                if (null == d && c.is(b, "array")) {
                    for (h = {},
                    i = 0,
                    l = b.length; l > i; i++)
                        h[b[i]] = this.attr(b[i]);
                    return h
                }
                if (null != d) {
                    var m = {};
                    m[b] = d
                } else
                    null != b && c.is(b, "object") && (m = b);
                for (var n in m)
                    k("raphael.attr." + n + "." + this.id, this, m[n]);
                for (n in this.paper.customAttributes)
                    if (this.paper.customAttributes[a](n) && m[a](n) && c.is(this.paper.customAttributes[n], "function")) {
                        var o = this.paper.customAttributes[n].apply(this, [].concat(m[n]));
                        this.attrs[n] = m[n];
                        for (var p in o)
                            o[a](p) && (m[p] = o[p])
                    }
                return w(this, m),
                this
            }
            ,
            A.toFront = function() {
                if (this.removed)
                    return this;
                "a" == this.node.parentNode.tagName.toLowerCase() ? this.node.parentNode.parentNode.appendChild(this.node.parentNode) : this.node.parentNode.appendChild(this.node);
                var a = this.paper;
                return a.top != this && c._tofront(this, a),
                this
            }
            ,
            A.toBack = function() {
                if (this.removed)
                    return this;
                var a = this.node.parentNode;
                return "a" == a.tagName.toLowerCase() ? a.parentNode.insertBefore(this.node.parentNode, this.node.parentNode.parentNode.firstChild) : a.firstChild != this.node && a.insertBefore(this.node, this.node.parentNode.firstChild),
                c._toback(this, this.paper),
                this.paper,
                this
            }
            ,
            A.insertAfter = function(a) {
                if (this.removed)
                    return this;
                var b = a.node || a[a.length - 1].node;
                return b.nextSibling ? b.parentNode.insertBefore(this.node, b.nextSibling) : b.parentNode.appendChild(this.node),
                c._insertafter(this, a, this.paper),
                this
            }
            ,
            A.insertBefore = function(a) {
                if (this.removed)
                    return this;
                var b = a.node || a[0].node;
                return b.parentNode.insertBefore(this.node, b),
                c._insertbefore(this, a, this.paper),
                this
            }
            ,
            A.blur = function(a) {
                var b = this;
                if (0 !== +a) {
                    var d = q("filter")
                      , e = q("feGaussianBlur");
                    b.attrs.blur = a,
                    d.id = c.createUUID(),
                    q(e, {
                        stdDeviation: +a || 1.5
                    }),
                    d.appendChild(e),
                    b.paper.defs.appendChild(d),
                    b._blur = d,
                    q(b.node, {
                        filter: "url(#" + d.id + ")"
                    })
                } else
                    b._blur && (b._blur.parentNode.removeChild(b._blur),
                    delete b._blur,
                    delete b.attrs.blur),
                    b.node.removeAttribute("filter");
                return b
            }
            ,
            c._engine.circle = function(a, b, c, d) {
                var e = q("circle");
                a.canvas && a.canvas.appendChild(e);
                var f = new z(e,a);
                return f.attrs = {
                    cx: b,
                    cy: c,
                    r: d,
                    fill: "none",
                    stroke: "#000"
                },
                f.type = "circle",
                q(e, f.attrs),
                f
            }
            ,
            c._engine.rect = function(a, b, c, d, e, f) {
                var g = q("rect");
                a.canvas && a.canvas.appendChild(g);
                var h = new z(g,a);
                return h.attrs = {
                    x: b,
                    y: c,
                    width: d,
                    height: e,
                    r: f || 0,
                    rx: f || 0,
                    ry: f || 0,
                    fill: "none",
                    stroke: "#000"
                },
                h.type = "rect",
                q(g, h.attrs),
                h
            }
            ,
            c._engine.ellipse = function(a, b, c, d, e) {
                var f = q("ellipse");
                a.canvas && a.canvas.appendChild(f);
                var g = new z(f,a);
                return g.attrs = {
                    cx: b,
                    cy: c,
                    rx: d,
                    ry: e,
                    fill: "none",
                    stroke: "#000"
                },
                g.type = "ellipse",
                q(f, g.attrs),
                g
            }
            ,
            c._engine.image = function(a, b, c, d, e, f) {
                var g = q("image");
                q(g, {
                    x: c,
                    y: d,
                    width: e,
                    height: f,
                    preserveAspectRatio: "none"
                }),
                g.setAttributeNS(n, "href", b),
                a.canvas && a.canvas.appendChild(g);
                var h = new z(g,a);
                return h.attrs = {
                    x: c,
                    y: d,
                    width: e,
                    height: f,
                    src: b
                },
                h.type = "image",
                h
            }
            ,
            c._engine.text = function(a, b, d, e) {
                var f = q("text");
                a.canvas && a.canvas.appendChild(f);
                var g = new z(f,a);
                return g.attrs = {
                    x: b,
                    y: d,
                    "text-anchor": "middle",
                    text: e,
                    font: c._availableAttrs.font,
                    stroke: "none",
                    fill: "#000"
                },
                g.type = "text",
                w(g, g.attrs),
                g
            }
            ,
            c._engine.setSize = function(a, b) {
                return this.width = a || this.width,
                this.height = b || this.height,
                this.canvas.setAttribute("width", this.width),
                this.canvas.setAttribute("height", this.height),
                this._viewBox && this.setViewBox.apply(this, this._viewBox),
                this
            }
            ,
            c._engine.create = function() {
                var a = c._getContainer.apply(0, arguments)
                  , b = a && a.container
                  , d = a.x
                  , e = a.y
                  , f = a.width
                  , g = a.height;
                if (!b)
                    throw new Error("SVG container not found.");
                var h, i = q("svg"), j = "overflow:hidden;";
                return d = d || 0,
                e = e || 0,
                f = f || 512,
                g = g || 342,
                q(i, {
                    height: g,
                    version: 1.1,
                    width: f,
                    xmlns: "http://www.w3.org/2000/svg"
                }),
                1 == b ? (i.style.cssText = j + "position:absolute;left:" + d + "px;top:" + e + "px",
                c._g.doc.body.appendChild(i),
                h = 1) : (i.style.cssText = j + "position:relative",
                b.firstChild ? b.insertBefore(i, b.firstChild) : b.appendChild(i)),
                b = new c._Paper,
                b.width = f,
                b.height = g,
                b.canvas = i,
                b.clear(),
                b._left = b._top = 0,
                h && (b.renderfix = function() {}
                ),
                b.renderfix(),
                b
            }
            ,
            c._engine.setViewBox = function(a, b, c, d, e) {
                k("raphael.setViewBox", this, this._viewBox, [a, b, c, d, e]);
                var f, h, i = g(c / this.width, d / this.height), j = this.top, l = e ? "meet" : "xMinYMin";
                for (null == a ? (this._vbSize && (i = 1),
                delete this._vbSize,
                f = "0 0 " + this.width + m + this.height) : (this._vbSize = i,
                f = a + m + b + m + c + m + d),
                q(this.canvas, {
                    viewBox: f,
                    preserveAspectRatio: l
                }); i && j; )
                    h = "stroke-width"in j.attrs ? j.attrs["stroke-width"] : 1,
                    j.attr({
                        "stroke-width": h
                    }),
                    j._.dirty = 1,
                    j._.dirtyT = 1,
                    j = j.prev;
                return this._viewBox = [a, b, c, d, !!e],
                this
            }
            ,
            c.prototype.renderfix = function() {
                var a, b = this.canvas, c = b.style;
                try {
                    a = b.getScreenCTM() || b.createSVGMatrix()
                } catch (d) {
                    a = b.createSVGMatrix()
                }
                var e = -a.e % 1
                  , f = -a.f % 1;
                (e || f) && (e && (this._left = (this._left + e) % 1,
                c.left = this._left + "px"),
                f && (this._top = (this._top + f) % 1,
                c.top = this._top + "px"))
            }
            ,
            c.prototype.clear = function() {
                c.eve("raphael.clear", this);
                for (var a = this.canvas; a.firstChild; )
                    a.removeChild(a.firstChild);
                this.bottom = this.top = null,
                (this.desc = q("desc")).appendChild(c._g.doc.createTextNode("Created with Raphaël " + c.version)),
                a.appendChild(this.desc),
                a.appendChild(this.defs = q("defs"))
            }
            ,
            c.prototype.remove = function() {
                k("raphael.remove", this),
                this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);
                for (var a in this)
                    this[a] = "function" == typeof this[a] ? c._removedFactory(a) : null
            }
            ;
            var B = c.st;
            for (var C in A)
                A[a](C) && !B[a](C) && (B[C] = function(a) {
                    return function() {
                        var b = arguments;
                        return this.forEach(function(c) {
                            c[a].apply(c, b)
                        })
                    }
                }(C))
        }
    }(),
    function() {
        if (c.vml) {
            var a = "hasOwnProperty"
              , b = String
              , d = parseFloat
              , e = Math
              , f = e.round
              , g = e.max
              , h = e.min
              , i = e.abs
              , j = "fill"
              , k = /[, ]+/
              , l = c.eve
              , m = " progid:DXImageTransform.Microsoft"
              , n = " "
              , o = ""
              , p = {
                M: "m",
                L: "l",
                C: "c",
                Z: "x",
                m: "t",
                l: "r",
                c: "v",
                z: "x"
            }
              , q = /([clmz]),?([^clmz]*)/gi
              , r = / progid:\S+Blur\([^\)]+\)/g
              , s = /-?[^,\s-]+/g
              , t = "position:absolute;left:0;top:0;width:1px;height:1px"
              , u = 21600
              , v = {
                path: 1,
                rect: 1,
                image: 1
            }
              , w = {
                circle: 1,
                ellipse: 1
            }
              , x = function(a) {
                var d = /[ahqstv]/gi
                  , e = c._pathToAbsolute;
                if (b(a).match(d) && (e = c._path2curve),
                d = /[clmz]/g,
                e == c._pathToAbsolute && !b(a).match(d)) {
                    var g = b(a).replace(q, function(a, b, c) {
                        var d = []
                          , e = "m" == b.toLowerCase()
                          , g = p[b];
                        return c.replace(s, function(a) {
                            e && 2 == d.length && (g += d + p["m" == b ? "l" : "L"],
                            d = []),
                            d.push(f(a * u))
                        }),
                        g + d
                    });
                    return g
                }
                var h, i, j = e(a);
                g = [];
                for (var k = 0, l = j.length; l > k; k++) {
                    h = j[k],
                    i = j[k][0].toLowerCase(),
                    "z" == i && (i = "x");
                    for (var m = 1, r = h.length; r > m; m++)
                        i += f(h[m] * u) + (m != r - 1 ? "," : o);
                    g.push(i)
                }
                return g.join(n)
            }
              , y = function(a, b, d) {
                var e = c.matrix();
                return e.rotate(-a, .5, .5),
                {
                    dx: e.x(b, d),
                    dy: e.y(b, d)
                }
            }
              , z = function(a, b, c, d, e, f) {
                var g = a._
                  , h = a.matrix
                  , k = g.fillpos
                  , l = a.node
                  , m = l.style
                  , o = 1
                  , p = ""
                  , q = u / b
                  , r = u / c;
                if (m.visibility = "hidden",
                b && c) {
                    if (l.coordsize = i(q) + n + i(r),
                    m.rotation = f * (0 > b * c ? -1 : 1),
                    f) {
                        var s = y(f, d, e);
                        d = s.dx,
                        e = s.dy
                    }
                    if (0 > b && (p += "x"),
                    0 > c && (p += " y") && (o = -1),
                    m.flip = p,
                    l.coordorigin = d * -q + n + e * -r,
                    k || g.fillsize) {
                        var t = l.getElementsByTagName(j);
                        t = t && t[0],
                        l.removeChild(t),
                        k && (s = y(f, h.x(k[0], k[1]), h.y(k[0], k[1])),
                        t.position = s.dx * o + n + s.dy * o),
                        g.fillsize && (t.size = g.fillsize[0] * i(b) + n + g.fillsize[1] * i(c)),
                        l.appendChild(t)
                    }
                    m.visibility = "visible"
                }
            };
            c.toString = function() {
                return "Your browser doesn’t support SVG. Falling down to VML.\nYou are running Raphaël " + this.version
            }
            ;
            var A = function(a, c, d) {
                for (var e = b(c).toLowerCase().split("-"), f = d ? "end" : "start", g = e.length, h = "classic", i = "medium", j = "medium"; g--; )
                    switch (e[g]) {
                    case "block":
                    case "classic":
                    case "oval":
                    case "diamond":
                    case "open":
                    case "none":
                        h = e[g];
                        break;
                    case "wide":
                    case "narrow":
                        j = e[g];
                        break;
                    case "long":
                    case "short":
                        i = e[g]
                    }
                var k = a.node.getElementsByTagName("stroke")[0];
                k[f + "arrow"] = h,
                k[f + "arrowlength"] = i,
                k[f + "arrowwidth"] = j
            }
              , B = function(e, i) {
                e.attrs = e.attrs || {};
                var l = e.node
                  , m = e.attrs
                  , p = l.style
                  , q = v[e.type] && (i.x != m.x || i.y != m.y || i.width != m.width || i.height != m.height || i.cx != m.cx || i.cy != m.cy || i.rx != m.rx || i.ry != m.ry || i.r != m.r)
                  , r = w[e.type] && (m.cx != i.cx || m.cy != i.cy || m.r != i.r || m.rx != i.rx || m.ry != i.ry)
                  , s = e;
                for (var t in i)
                    i[a](t) && (m[t] = i[t]);
                if (q && (m.path = c._getPath[e.type](e),
                e._.dirty = 1),
                i.href && (l.href = i.href),
                i.title && (l.title = i.title),
                i.target && (l.target = i.target),
                i.cursor && (p.cursor = i.cursor),
                "blur"in i && e.blur(i.blur),
                (i.path && "path" == e.type || q) && (l.path = x(~b(m.path).toLowerCase().indexOf("r") ? c._pathToAbsolute(m.path) : m.path),
                "image" == e.type && (e._.fillpos = [m.x, m.y],
                e._.fillsize = [m.width, m.height],
                z(e, 1, 1, 0, 0, 0))),
                "transform"in i && e.transform(i.transform),
                r) {
                    var y = +m.cx
                      , B = +m.cy
                      , D = +m.rx || +m.r || 0
                      , E = +m.ry || +m.r || 0;
                    l.path = c.format("ar{0},{1},{2},{3},{4},{1},{4},{1}x", f((y - D) * u), f((B - E) * u), f((y + D) * u), f((B + E) * u), f(y * u)),
                    e._.dirty = 1
                }
                if ("clip-rect"in i) {
                    var G = b(i["clip-rect"]).split(k);
                    if (4 == G.length) {
                        G[2] = +G[2] + +G[0],
                        G[3] = +G[3] + +G[1];
                        var H = l.clipRect || c._g.doc.createElement("div")
                          , I = H.style;
                        I.clip = c.format("rect({1}px {2}px {3}px {0}px)", G),
                        l.clipRect || (I.position = "absolute",
                        I.top = 0,
                        I.left = 0,
                        I.width = e.paper.width + "px",
                        I.height = e.paper.height + "px",
                        l.parentNode.insertBefore(H, l),
                        H.appendChild(l),
                        l.clipRect = H)
                    }
                    i["clip-rect"] || l.clipRect && (l.clipRect.style.clip = "auto")
                }
                if (e.textpath) {
                    var J = e.textpath.style;
                    i.font && (J.font = i.font),
                    i["font-family"] && (J.fontFamily = '"' + i["font-family"].split(",")[0].replace(/^['"]+|['"]+$/g, o) + '"'),
                    i["font-size"] && (J.fontSize = i["font-size"]),
                    i["font-weight"] && (J.fontWeight = i["font-weight"]),
                    i["font-style"] && (J.fontStyle = i["font-style"])
                }
                if ("arrow-start"in i && A(s, i["arrow-start"]),
                "arrow-end"in i && A(s, i["arrow-end"], 1),
                null != i.opacity || null != i["stroke-width"] || null != i.fill || null != i.src || null != i.stroke || null != i["stroke-width"] || null != i["stroke-opacity"] || null != i["fill-opacity"] || null != i["stroke-dasharray"] || null != i["stroke-miterlimit"] || null != i["stroke-linejoin"] || null != i["stroke-linecap"]) {
                    var K = l.getElementsByTagName(j)
                      , L = !1;
                    if (K = K && K[0],
                    !K && (L = K = F(j)),
                    "image" == e.type && i.src && (K.src = i.src),
                    i.fill && (K.on = !0),
                    (null == K.on || "none" == i.fill || null === i.fill) && (K.on = !1),
                    K.on && i.fill) {
                        var M = b(i.fill).match(c._ISURL);
                        if (M) {
                            K.parentNode == l && l.removeChild(K),
                            K.rotate = !0,
                            K.src = M[1],
                            K.type = "tile";
                            var N = e.getBBox(1);
                            K.position = N.x + n + N.y,
                            e._.fillpos = [N.x, N.y],
                            c._preload(M[1], function() {
                                e._.fillsize = [this.offsetWidth, this.offsetHeight]
                            })
                        } else
                            K.color = c.getRGB(i.fill).hex,
                            K.src = o,
                            K.type = "solid",
                            c.getRGB(i.fill).error && (s.type in {
                                circle: 1,
                                ellipse: 1
                            } || "r" != b(i.fill).charAt()) && C(s, i.fill, K) && (m.fill = "none",
                            m.gradient = i.fill,
                            K.rotate = !1)
                    }
                    if ("fill-opacity"in i || "opacity"in i) {
                        var O = ((+m["fill-opacity"] + 1 || 2) - 1) * ((+m.opacity + 1 || 2) - 1) * ((+c.getRGB(i.fill).o + 1 || 2) - 1);
                        O = h(g(O, 0), 1),
                        K.opacity = O,
                        K.src && (K.color = "none")
                    }
                    l.appendChild(K);
                    var P = l.getElementsByTagName("stroke") && l.getElementsByTagName("stroke")[0]
                      , Q = !1;
                    !P && (Q = P = F("stroke")),
                    (i.stroke && "none" != i.stroke || i["stroke-width"] || null != i["stroke-opacity"] || i["stroke-dasharray"] || i["stroke-miterlimit"] || i["stroke-linejoin"] || i["stroke-linecap"]) && (P.on = !0),
                    ("none" == i.stroke || null === i.stroke || null == P.on || 0 == i.stroke || 0 == i["stroke-width"]) && (P.on = !1);
                    var R = c.getRGB(i.stroke);
                    P.on && i.stroke && (P.color = R.hex),
                    O = ((+m["stroke-opacity"] + 1 || 2) - 1) * ((+m.opacity + 1 || 2) - 1) * ((+R.o + 1 || 2) - 1);
                    var S = .75 * (d(i["stroke-width"]) || 1);
                    if (O = h(g(O, 0), 1),
                    null == i["stroke-width"] && (S = m["stroke-width"]),
                    i["stroke-width"] && (P.weight = S),
                    S && 1 > S && (O *= S) && (P.weight = 1),
                    P.opacity = O,
                    i["stroke-linejoin"] && (P.joinstyle = i["stroke-linejoin"] || "miter"),
                    P.miterlimit = i["stroke-miterlimit"] || 8,
                    i["stroke-linecap"] && (P.endcap = "butt" == i["stroke-linecap"] ? "flat" : "square" == i["stroke-linecap"] ? "square" : "round"),
                    i["stroke-dasharray"]) {
                        var T = {
                            "-": "shortdash",
                            ".": "shortdot",
                            "-.": "shortdashdot",
                            "-..": "shortdashdotdot",
                            ". ": "dot",
                            "- ": "dash",
                            "--": "longdash",
                            "- .": "dashdot",
                            "--.": "longdashdot",
                            "--..": "longdashdotdot"
                        };
                        P.dashstyle = T[a](i["stroke-dasharray"]) ? T[i["stroke-dasharray"]] : o
                    }
                    Q && l.appendChild(P)
                }
                if ("text" == s.type) {
                    s.paper.canvas.style.display = o;
                    var U = s.paper.span
                      , V = 100
                      , W = m.font && m.font.match(/\d+(?:\.\d*)?(?=px)/);
                    p = U.style,
                    m.font && (p.font = m.font),
                    m["font-family"] && (p.fontFamily = m["font-family"]),
                    m["font-weight"] && (p.fontWeight = m["font-weight"]),
                    m["font-style"] && (p.fontStyle = m["font-style"]),
                    W = d(m["font-size"] || W && W[0]) || 10,
                    p.fontSize = W * V + "px",
                    s.textpath.string && (U.innerHTML = b(s.textpath.string).replace(/</g, "&#60;").replace(/&/g, "&#38;").replace(/\n/g, "<br>"));
                    var X = U.getBoundingClientRect();
                    s.W = m.w = (X.right - X.left) / V,
                    s.H = m.h = (X.bottom - X.top) / V,
                    s.X = m.x,
                    s.Y = m.y + s.H / 2,
                    ("x"in i || "y"in i) && (s.path.v = c.format("m{0},{1}l{2},{1}", f(m.x * u), f(m.y * u), f(m.x * u) + 1));
                    for (var Y = ["x", "y", "text", "font", "font-family", "font-weight", "font-style", "font-size"], Z = 0, $ = Y.length; $ > Z; Z++)
                        if (Y[Z]in i) {
                            s._.dirty = 1;
                            break
                        }
                    switch (m["text-anchor"]) {
                    case "start":
                        s.textpath.style["v-text-align"] = "left",
                        s.bbx = s.W / 2;
                        break;
                    case "end":
                        s.textpath.style["v-text-align"] = "right",
                        s.bbx = -s.W / 2;
                        break;
                    default:
                        s.textpath.style["v-text-align"] = "center",
                        s.bbx = 0
                    }
                    s.textpath.style["v-text-kern"] = !0
                }
            }
              , C = function(a, f, g) {
                a.attrs = a.attrs || {};
                var h = (a.attrs,
                Math.pow)
                  , i = "linear"
                  , j = ".5 .5";
                if (a.attrs.gradient = f,
                f = b(f).replace(c._radial_gradient, function(a, b, c) {
                    return i = "radial",
                    b && c && (b = d(b),
                    c = d(c),
                    h(b - .5, 2) + h(c - .5, 2) > .25 && (c = e.sqrt(.25 - h(b - .5, 2)) * (2 * (c > .5) - 1) + .5),
                    j = b + n + c),
                    o
                }),
                f = f.split(/\s*\-\s*/),
                "linear" == i) {
                    var k = f.shift();
                    if (k = -d(k),
                    isNaN(k))
                        return null
                }
                var l = c._parseDots(f);
                if (!l)
                    return null;
                if (a = a.shape || a.node,
                l.length) {
                    a.removeChild(g),
                    g.on = !0,
                    g.method = "none",
                    g.color = l[0].color,
                    g.color2 = l[l.length - 1].color;
                    for (var m = [], p = 0, q = l.length; q > p; p++)
                        l[p].offset && m.push(l[p].offset + n + l[p].color);
                    g.colors = m.length ? m.join() : "0% " + g.color,
                    "radial" == i ? (g.type = "gradientTitle",
                    g.focus = "100%",
                    g.focussize = "0 0",
                    g.focusposition = j,
                    g.angle = 0) : (g.type = "gradient",
                    g.angle = (270 - k) % 360),
                    a.appendChild(g)
                }
                return 1
            }
              , D = function(a, b) {
                this[0] = this.node = a,
                a.raphael = !0,
                this.id = c._oid++,
                a.raphaelid = this.id,
                this.X = 0,
                this.Y = 0,
                this.attrs = {},
                this.paper = b,
                this.matrix = c.matrix(),
                this._ = {
                    transform: [],
                    sx: 1,
                    sy: 1,
                    dx: 0,
                    dy: 0,
                    deg: 0,
                    dirty: 1,
                    dirtyT: 1
                },
                !b.bottom && (b.bottom = this),
                this.prev = b.top,
                b.top && (b.top.next = this),
                b.top = this,
                this.next = null
            }
              , E = c.el;
            D.prototype = E,
            E.constructor = D,
            E.transform = function(a) {
                if (null == a)
                    return this._.transform;
                var d, e = this.paper._viewBoxShift, f = e ? "s" + [e.scale, e.scale] + "-1-1t" + [e.dx, e.dy] : o;
                e && (d = a = b(a).replace(/\.{3}|\u2026/g, this._.transform || o)),
                c._extractTransform(this, f + a);
                var g, h = this.matrix.clone(), i = this.skew, j = this.node, k = ~b(this.attrs.fill).indexOf("-"), l = !b(this.attrs.fill).indexOf("url(");
                if (h.translate(1, 1),
                l || k || "image" == this.type)
                    if (i.matrix = "1 0 0 1",
                    i.offset = "0 0",
                    g = h.split(),
                    k && g.noRotation || !g.isSimple) {
                        j.style.filter = h.toFilter();
                        var m = this.getBBox()
                          , p = this.getBBox(1)
                          , q = m.x - p.x
                          , r = m.y - p.y;
                        j.coordorigin = q * -u + n + r * -u,
                        z(this, 1, 1, q, r, 0)
                    } else
                        j.style.filter = o,
                        z(this, g.scalex, g.scaley, g.dx, g.dy, g.rotate);
                else
                    j.style.filter = o,
                    i.matrix = b(h),
                    i.offset = h.offset();
                return d && (this._.transform = d),
                this
            }
            ,
            E.rotate = function(a, c, e) {
                if (this.removed)
                    return this;
                if (null != a) {
                    if (a = b(a).split(k),
                    a.length - 1 && (c = d(a[1]),
                    e = d(a[2])),
                    a = d(a[0]),
                    null == e && (c = e),
                    null == c || null == e) {
                        var f = this.getBBox(1);
                        c = f.x + f.width / 2,
                        e = f.y + f.height / 2
                    }
                    return this._.dirtyT = 1,
                    this.transform(this._.transform.concat([["r", a, c, e]])),
                    this
                }
            }
            ,
            E.translate = function(a, c) {
                return this.removed ? this : (a = b(a).split(k),
                a.length - 1 && (c = d(a[1])),
                a = d(a[0]) || 0,
                c = +c || 0,
                this._.bbox && (this._.bbox.x += a,
                this._.bbox.y += c),
                this.transform(this._.transform.concat([["t", a, c]])),
                this)
            }
            ,
            E.scale = function(a, c, e, f) {
                if (this.removed)
                    return this;
                if (a = b(a).split(k),
                a.length - 1 && (c = d(a[1]),
                e = d(a[2]),
                f = d(a[3]),
                isNaN(e) && (e = null),
                isNaN(f) && (f = null)),
                a = d(a[0]),
                null == c && (c = a),
                null == f && (e = f),
                null == e || null == f)
                    var g = this.getBBox(1);
                return e = null == e ? g.x + g.width / 2 : e,
                f = null == f ? g.y + g.height / 2 : f,
                this.transform(this._.transform.concat([["s", a, c, e, f]])),
                this._.dirtyT = 1,
                this
            }
            ,
            E.hide = function() {
                return !this.removed && (this.node.style.display = "none"),
                this
            }
            ,
            E.show = function() {
                return !this.removed && (this.node.style.display = o),
                this
            }
            ,
            E._getBBox = function() {
                return this.removed ? {} : {
                    x: this.X + (this.bbx || 0) - this.W / 2,
                    y: this.Y - this.H,
                    width: this.W,
                    height: this.H
                }
            }
            ,
            E.remove = function() {
                if (!this.removed && this.node.parentNode) {
                    this.paper.__set__ && this.paper.__set__.exclude(this),
                    c.eve.unbind("raphael.*.*." + this.id),
                    c._tear(this, this.paper),
                    this.node.parentNode.removeChild(this.node),
                    this.shape && this.shape.parentNode.removeChild(this.shape);
                    for (var a in this)
                        this[a] = "function" == typeof this[a] ? c._removedFactory(a) : null;
                    this.removed = !0
                }
            }
            ,
            E.attr = function(b, d) {
                if (this.removed)
                    return this;
                if (null == b) {
                    var e = {};
                    for (var f in this.attrs)
                        this.attrs[a](f) && (e[f] = this.attrs[f]);
                    return e.gradient && "none" == e.fill && (e.fill = e.gradient) && delete e.gradient,
                    e.transform = this._.transform,
                    e
                }
                if (null == d && c.is(b, "string")) {
                    if (b == j && "none" == this.attrs.fill && this.attrs.gradient)
                        return this.attrs.gradient;
                    for (var g = b.split(k), h = {}, i = 0, m = g.length; m > i; i++)
                        b = g[i],
                        h[b] = b in this.attrs ? this.attrs[b] : c.is(this.paper.customAttributes[b], "function") ? this.paper.customAttributes[b].def : c._availableAttrs[b];
                    return m - 1 ? h : h[g[0]]
                }
                if (this.attrs && null == d && c.is(b, "array")) {
                    for (h = {},
                    i = 0,
                    m = b.length; m > i; i++)
                        h[b[i]] = this.attr(b[i]);
                    return h
                }
                var n;
                null != d && (n = {},
                n[b] = d),
                null == d && c.is(b, "object") && (n = b);
                for (var o in n)
                    l("raphael.attr." + o + "." + this.id, this, n[o]);
                if (n) {
                    for (o in this.paper.customAttributes)
                        if (this.paper.customAttributes[a](o) && n[a](o) && c.is(this.paper.customAttributes[o], "function")) {
                            var p = this.paper.customAttributes[o].apply(this, [].concat(n[o]));
                            this.attrs[o] = n[o];
                            for (var q in p)
                                p[a](q) && (n[q] = p[q])
                        }
                    n.text && "text" == this.type && (this.textpath.string = n.text),
                    B(this, n)
                }
                return this
            }
            ,
            E.toFront = function() {
                return !this.removed && this.node.parentNode.appendChild(this.node),
                this.paper && this.paper.top != this && c._tofront(this, this.paper),
                this
            }
            ,
            E.toBack = function() {
                return this.removed ? this : (this.node.parentNode.firstChild != this.node && (this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild),
                c._toback(this, this.paper)),
                this)
            }
            ,
            E.insertAfter = function(a) {
                return this.removed ? this : (a.constructor == c.st.constructor && (a = a[a.length - 1]),
                a.node.nextSibling ? a.node.parentNode.insertBefore(this.node, a.node.nextSibling) : a.node.parentNode.appendChild(this.node),
                c._insertafter(this, a, this.paper),
                this)
            }
            ,
            E.insertBefore = function(a) {
                return this.removed ? this : (a.constructor == c.st.constructor && (a = a[0]),
                a.node.parentNode.insertBefore(this.node, a.node),
                c._insertbefore(this, a, this.paper),
                this)
            }
            ,
            E.blur = function(a) {
                var b = this.node.runtimeStyle
                  , d = b.filter;
                return d = d.replace(r, o),
                0 !== +a ? (this.attrs.blur = a,
                b.filter = d + n + m + ".Blur(pixelradius=" + (+a || 1.5) + ")",
                b.margin = c.format("-{0}px 0 0 -{0}px", f(+a || 1.5))) : (b.filter = d,
                b.margin = 0,
                delete this.attrs.blur),
                this
            }
            ,
            c._engine.path = function(a, b) {
                var c = F("shape");
                c.style.cssText = t,
                c.coordsize = u + n + u,
                c.coordorigin = b.coordorigin;
                var d = new D(c,b)
                  , e = {
                    fill: "none",
                    stroke: "#000"
                };
                a && (e.path = a),
                d.type = "path",
                d.path = [],
                d.Path = o,
                B(d, e),
                b.canvas.appendChild(c);
                var f = F("skew");
                return f.on = !0,
                c.appendChild(f),
                d.skew = f,
                d.transform(o),
                d
            }
            ,
            c._engine.rect = function(a, b, d, e, f, g) {
                var h = c._rectPath(b, d, e, f, g)
                  , i = a.path(h)
                  , j = i.attrs;
                return i.X = j.x = b,
                i.Y = j.y = d,
                i.W = j.width = e,
                i.H = j.height = f,
                j.r = g,
                j.path = h,
                i.type = "rect",
                i
            }
            ,
            c._engine.ellipse = function(a, b, c, d, e) {
                var f = a.path();
                return f.attrs,
                f.X = b - d,
                f.Y = c - e,
                f.W = 2 * d,
                f.H = 2 * e,
                f.type = "ellipse",
                B(f, {
                    cx: b,
                    cy: c,
                    rx: d,
                    ry: e
                }),
                f
            }
            ,
            c._engine.circle = function(a, b, c, d) {
                var e = a.path();
                return e.attrs,
                e.X = b - d,
                e.Y = c - d,
                e.W = e.H = 2 * d,
                e.type = "circle",
                B(e, {
                    cx: b,
                    cy: c,
                    r: d
                }),
                e
            }
            ,
            c._engine.image = function(a, b, d, e, f, g) {
                var h = c._rectPath(d, e, f, g)
                  , i = a.path(h).attr({
                    stroke: "none"
                })
                  , k = i.attrs
                  , l = i.node
                  , m = l.getElementsByTagName(j)[0];
                return k.src = b,
                i.X = k.x = d,
                i.Y = k.y = e,
                i.W = k.width = f,
                i.H = k.height = g,
                k.path = h,
                i.type = "image",
                m.parentNode == l && l.removeChild(m),
                m.rotate = !0,
                m.src = b,
                m.type = "tile",
                i._.fillpos = [d, e],
                i._.fillsize = [f, g],
                l.appendChild(m),
                z(i, 1, 1, 0, 0, 0),
                i
            }
            ,
            c._engine.text = function(a, d, e, g) {
                var h = F("shape")
                  , i = F("path")
                  , j = F("textpath");
                d = d || 0,
                e = e || 0,
                g = g || "",
                i.v = c.format("m{0},{1}l{2},{1}", f(d * u), f(e * u), f(d * u) + 1),
                i.textpathok = !0,
                j.string = b(g),
                j.on = !0,
                h.style.cssText = t,
                h.coordsize = u + n + u,
                h.coordorigin = "0 0";
                var k = new D(h,a)
                  , l = {
                    fill: "#000",
                    stroke: "none",
                    font: c._availableAttrs.font,
                    text: g
                };
                k.shape = h,
                k.path = i,
                k.textpath = j,
                k.type = "text",
                k.attrs.text = b(g),
                k.attrs.x = d,
                k.attrs.y = e,
                k.attrs.w = 1,
                k.attrs.h = 1,
                B(k, l),
                h.appendChild(j),
                h.appendChild(i),
                a.canvas.appendChild(h);
                var m = F("skew");
                return m.on = !0,
                h.appendChild(m),
                k.skew = m,
                k.transform(o),
                k
            }
            ,
            c._engine.setSize = function(a, b) {
                var d = this.canvas.style;
                return this.width = a,
                this.height = b,
                a == +a && (a += "px"),
                b == +b && (b += "px"),
                d.width = a,
                d.height = b,
                d.clip = "rect(0 " + a + " " + b + " 0)",
                this._viewBox && c._engine.setViewBox.apply(this, this._viewBox),
                this
            }
            ,
            c._engine.setViewBox = function(a, b, d, e, f) {
                c.eve("raphael.setViewBox", this, this._viewBox, [a, b, d, e, f]);
                var h, i, j = this.width, k = this.height, l = 1 / g(d / j, e / k);
                return f && (h = k / e,
                i = j / d,
                j > d * h && (a -= (j - d * h) / 2 / h),
                k > e * i && (b -= (k - e * i) / 2 / i)),
                this._viewBox = [a, b, d, e, !!f],
                this._viewBoxShift = {
                    dx: -a,
                    dy: -b,
                    scale: l
                },
                this.forEach(function(a) {
                    a.transform("...")
                }),
                this
            }
            ;
            var F;
            c._engine.initWin = function(a) {
                var b = a.document;
                b.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
                try {
                    !b.namespaces.rvml && b.namespaces.add("rvml", "urn:schemas-microsoft-com:vml"),
                    F = function(a) {
                        return b.createElement("<rvml:" + a + ' class="rvml">')
                    }
                } catch (c) {
                    F = function(a) {
                        return b.createElement("<" + a + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">')
                    }
                }
            }
            ,
            c._engine.initWin(c._g.win),
            c._engine.create = function() {
                var a = c._getContainer.apply(0, arguments)
                  , b = a.container
                  , d = a.height
                  , e = a.width
                  , f = a.x
                  , g = a.y;
                if (!b)
                    throw new Error("VML container not found.");
                var h = new c._Paper
                  , i = h.canvas = c._g.doc.createElement("div")
                  , j = i.style;
                return f = f || 0,
                g = g || 0,
                e = e || 512,
                d = d || 342,
                h.width = e,
                h.height = d,
                e == +e && (e += "px"),
                d == +d && (d += "px"),
                h.coordsize = 1e3 * u + n + 1e3 * u,
                h.coordorigin = "0 0",
                h.span = c._g.doc.createElement("span"),
                h.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;",
                i.appendChild(h.span),
                j.cssText = c.format("top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden", e, d),
                1 == b ? (c._g.doc.body.appendChild(i),
                j.left = f + "px",
                j.top = g + "px",
                j.position = "absolute") : b.firstChild ? b.insertBefore(i, b.firstChild) : b.appendChild(i),
                h.renderfix = function() {}
                ,
                h
            }
            ,
            c.prototype.clear = function() {
                c.eve("raphael.clear", this),
                this.canvas.innerHTML = o,
                this.span = c._g.doc.createElement("span"),
                this.span.style.cssText = "position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;",
                this.canvas.appendChild(this.span),
                this.bottom = this.top = null
            }
            ,
            c.prototype.remove = function() {
                c.eve("raphael.remove", this),
                this.canvas.parentNode.removeChild(this.canvas);
                for (var a in this)
                    this[a] = "function" == typeof this[a] ? c._removedFactory(a) : null;
                return !0
            }
            ;
            var G = c.st;
            for (var H in E)
                E[a](H) && !G[a](H) && (G[H] = function(a) {
                    return function() {
                        var b = arguments;
                        return this.forEach(function(c) {
                            c[a].apply(c, b)
                        })
                    }
                }(H))
        }
    }(),
    B.was ? A.win.Raphael = c : Raphael = c,
    c
});
(function() {
    var e, t, n, r, i = [].slice, s = {}.hasOwnProperty, o = function(e, t) {
        function r() {
            this.constructor = e
        }
        for (var n in t)
            s.call(t, n) && (e[n] = t[n]);
        return r.prototype = t.prototype,
        e.prototype = new r,
        e.__super__ = t.prototype,
        e
    }, u = function(e, t) {
        return function() {
            return e.apply(t, arguments)
        }
    }, a = [].indexOf || function(e) {
        for (var t = 0, n = this.length; t < n; t++)
            if (t in this && this[t] === e)
                return t;
        return -1
    }
    ;
    t = window.Morris = {},
    e = jQuery,
    t.EventEmitter = function() {
        function e() {}
        return e.prototype.on = function(e, t) {
            return this.handlers == null && (this.handlers = {}),
            this.handlers[e] == null && (this.handlers[e] = []),
            this.handlers[e].push(t),
            this
        }
        ,
        e.prototype.fire = function() {
            var e, t, n, r, s, o, u;
            n = arguments[0],
            e = 2 <= arguments.length ? i.call(arguments, 1) : [];
            if (this.handlers != null && this.handlers[n] != null) {
                o = this.handlers[n],
                u = [];
                for (r = 0,
                s = o.length; r < s; r++)
                    t = o[r],
                    u.push(t.apply(null, e));
                return u
            }
        }
        ,
        e
    }(),
    t.commas = function(e) {
        var t, n, r, i;
        return e != null ? (r = e < 0 ? "-" : "",
        t = Math.abs(e),
        n = Math.floor(t).toFixed(0),
        r += n.replace(/(?=(?:\d{3})+$)(?!^)/g, ","),
        i = t.toString(),
        i.length > n.length && (r += i.slice(n.length)),
        r) : "-"
    }
    ,
    t.pad2 = function(e) {
        return (e < 10 ? "0" : "") + e
    }
    ,
    t.Grid = function(n) {
        function r(t) {
            var n = this;
            typeof t.element == "string" ? this.el = e(document.getElementById(t.element)) : this.el = e(t.element);
            if (this.el == null || this.el.length === 0)
                throw new Error("Graph container element not found");
            this.el.css("position") === "static" && this.el.css("position", "relative"),
            this.options = e.extend({}, this.gridDefaults, this.defaults || {}, t),
            typeof this.options.units == "string" && (this.options.postUnits = t.units),
            this.raphael = new Raphael(this.el[0]),
            this.elementWidth = null,
            this.elementHeight = null,
            this.dirty = !1,
            this.init && this.init(),
            this.setData(this.options.data),
            this.el.bind("mousemove", function(e) {
                var t;
                return t = n.el.offset(),
                n.fire("hovermove", e.pageX - t.left, e.pageY - t.top)
            }),
            this.el.bind("mouseout", function(e) {
                return n.fire("hoverout")
            }),
            this.el.bind("touchstart touchmove touchend", function(e) {
                var t, r;
                return r = e.originalEvent.touches[0] || e.originalEvent.changedTouches[0],
                t = n.el.offset(),
                n.fire("hover", r.pageX - t.left, r.pageY - t.top),
                r
            }),
            this.el.bind("click", function(e) {
                var t;
                return t = n.el.offset(),
                n.fire("gridclick", e.pageX - t.left, e.pageY - t.top)
            }),
            this.postInit && this.postInit()
        }
        return o(r, n),
        r.prototype.gridDefaults = {
            dateFormat: null,
            axes: !0,
            grid: !0,
            gridLineColor: "#aaa",
            gridStrokeWidth: .5,
            gridTextColor: "#888",
            gridTextSize: 12,
            gridTextFamily: "sans-serif",
            gridTextWeight: "normal",
            hideHover: !1,
            yLabelFormat: null,
            xLabelAngle: 0,
            numLines: 5,
            padding: 25,
            parseTime: !0,
            postUnits: "",
            preUnits: "",
            ymax: "auto",
            ymin: "auto 0",
            goals: [],
            goalStrokeWidth: 1,
            goalLineColors: ["#666633", "#999966", "#cc6666", "#663333"],
            events: [],
            eventStrokeWidth: 1,
            eventLineColors: ["#005a04", "#ccffbb", "#3a5f0b", "#005502"]
        },
        r.prototype.setData = function(e, n) {
            var r, i, s, o, u, a, f, l, c, h, p, d, v, m;
            n == null && (n = !0),
            this.options.data = e;
            if (e == null || e.length === 0) {
                this.data = [],
                this.raphael.clear(),
                this.hover != null && this.hover.hide();
                return
            }
            d = this.cumulative ? 0 : null,
            v = this.cumulative ? 0 : null,
            this.options.goals.length > 0 && (u = Math.min.apply(null, this.options.goals),
            o = Math.max.apply(null, this.options.goals),
            v = v != null ? Math.min(v, u) : u,
            d = d != null ? Math.max(d, o) : o),
            this.data = function() {
                var n, r, o;
                o = [];
                for (s = n = 0,
                r = e.length; n < r; s = ++n)
                    f = e[s],
                    a = {},
                    a.label = f[this.options.xkey],
                    this.options.parseTime ? (a.x = t.parseDate(a.label),
                    this.options.dateFormat ? a.label = this.options.dateFormat(a.x) : typeof a.label == "number" && (a.label = (new Date(a.label)).toString())) : (a.x = s,
                    this.options.xLabelFormat && (a.label = this.options.xLabelFormat(a))),
                    c = 0,
                    a.y = function() {
                        var e, t, n, r;
                        n = this.options.ykeys,
                        r = [];
                        for (i = e = 0,
                        t = n.length; e < t; i = ++e)
                            p = n[i],
                            m = f[p],
                            typeof m == "string" && (m = parseFloat(m)),
                            m != null && typeof m != "number" && (m = null),
                            m != null && (this.cumulative ? c += m : d != null ? (d = Math.max(m, d),
                            v = Math.min(m, v)) : d = v = m),
                            this.cumulative && c != null && (d = Math.max(c, d),
                            v = Math.min(c, v)),
                            r.push(m);
                        return r
                    }
                    .call(this),
                    o.push(a);
                return o
            }
            .call(this),
            this.options.parseTime && (this.data = this.data.sort(function(e, t) {
                return (e.x > t.x) - (t.x > e.x)
            })),
            this.xmin = this.data[0].x,
            this.xmax = this.data[this.data.length - 1].x,
            this.events = [],
            this.options.parseTime && this.options.events.length > 0 && (this.events = function() {
                var e, n, i, s;
                i = this.options.events,
                s = [];
                for (e = 0,
                n = i.length; e < n; e++)
                    r = i[e],
                    s.push(t.parseDate(r));
                return s
            }
            .call(this),
            this.xmax = Math.max(this.xmax, Math.max.apply(null, this.events)),
            this.xmin = Math.min(this.xmin, Math.min.apply(null, this.events))),
            this.xmin === this.xmax && (this.xmin -= 1,
            this.xmax += 1),
            this.ymin = this.yboundary("min", v),
            this.ymax = this.yboundary("max", d),
            this.ymin === this.ymax && (v && (this.ymin -= 1),
            this.ymax += 1);
            if (this.options.axes === !0 || this.options.grid === !0)
                this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin ? (this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines),
                this.ymin = Math.min(this.ymin, this.grid[0]),
                this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1])) : (l = (this.ymax - this.ymin) / (this.options.numLines - 1),
                this.grid = function() {
                    var e, t, n, r;
                    r = [];
                    for (h = e = t = this.ymin,
                    n = this.ymax; t <= n ? e <= n : e >= n; h = e += l)
                        r.push(h);
                    return r
                }
                .call(this));
            this.dirty = !0;
            if (n)
                return this.redraw()
        }
        ,
        r.prototype.yboundary = function(e, t) {
            var n, r;
            return n = this.options["y" + e],
            typeof n == "string" ? n.slice(0, 4) === "auto" ? n.length > 5 ? (r = parseInt(n.slice(5), 10),
            t == null ? r : Math[e](t, r)) : t != null ? t : 0 : parseInt(n, 10) : n
        }
        ,
        r.prototype.autoGridLines = function(e, t, n) {
            var r, i, s, o, u, a, f, l, c;
            return u = t - e,
            c = Math.floor(Math.log(u) / Math.log(10)),
            f = Math.pow(10, c),
            i = Math.floor(e / f) * f,
            r = Math.ceil(t / f) * f,
            a = (r - i) / (n - 1),
            f === 1 && a > 1 && Math.ceil(a) !== a && (a = Math.ceil(a),
            r = i + a * (n - 1)),
            i < 0 && r > 0 && (i = Math.floor(e / a) * a,
            r = Math.ceil(t / a) * a),
            a < 1 ? (o = Math.floor(Math.log(a) / Math.log(10)),
            s = function() {
                var e, t;
                t = [];
                for (l = e = i; i <= r ? e <= r : e >= r; l = e += a)
                    t.push(parseFloat(l.toFixed(1 - o)));
                return t
            }()) : s = function() {
                var e, t;
                t = [];
                for (l = e = i; i <= r ? e <= r : e >= r; l = e += a)
                    t.push(l);
                return t
            }(),
            s
        }
        ,
        r.prototype._calc = function() {
            var e, t, n, r, i, s;
            i = this.el.width(),
            n = this.el.height();
            if (this.elementWidth !== i || this.elementHeight !== n || this.dirty) {
                this.elementWidth = i,
                this.elementHeight = n,
                this.dirty = !1,
                this.left = this.options.padding,
                this.right = this.elementWidth - this.options.padding,
                this.top = this.options.padding,
                this.bottom = this.elementHeight - this.options.padding,
                this.options.axes && (s = function() {
                    var e, n, r, i;
                    r = this.grid,
                    i = [];
                    for (e = 0,
                    n = r.length; e < n; e++)
                        t = r[e],
                        i.push(this.measureText(this.yAxisFormat(t)).width);
                    return i
                }
                .call(this),
                this.left += Math.max.apply(Math, s),
                e = function() {
                    var e, t, n;
                    n = [];
                    for (r = e = 0,
                    t = this.data.length; 0 <= t ? e < t : e > t; r = 0 <= t ? ++e : --e)
                        n.push(this.measureText(this.data[r].text, -this.options.xLabelAngle).height);
                    return n
                }
                .call(this),
                this.bottom -= Math.max.apply(Math, e)),
                this.width = Math.max(1, this.right - this.left),
                this.height = Math.max(1, this.bottom - this.top),
                this.dx = this.width / (this.xmax - this.xmin),
                this.dy = this.height / (this.ymax - this.ymin);
                if (this.calc)
                    return this.calc()
            }
        }
        ,
        r.prototype.transY = function(e) {
            return this.bottom - (e - this.ymin) * this.dy
        }
        ,
        r.prototype.transX = function(e) {
            return this.data.length === 1 ? (this.left + this.right) / 2 : this.left + (e - this.xmin) * this.dx
        }
        ,
        r.prototype.redraw = function() {
            this.raphael.clear(),
            this._calc(),
            this.drawGrid(),
            this.drawGoals(),
            this.drawEvents();
            if (this.draw)
                return this.draw()
        }
        ,
        r.prototype.measureText = function(e, t) {
            var n, r;
            return t == null && (t = 0),
            r = this.raphael.text(100, 100, e).attr("font-size", this.options.gridTextSize).attr("font-family", this.options.gridTextFamily).attr("font-weight", this.options.gridTextWeight).rotate(t),
            n = r.getBBox(),
            r.remove(),
            n
        }
        ,
        r.prototype.yAxisFormat = function(e) {
            return this.yLabelFormat(e)
        }
        ,
        r.prototype.yLabelFormat = function(e) {
            return typeof this.options.yLabelFormat == "function" ? this.options.yLabelFormat(e) : "" + this.options.preUnits + t.commas(e) + this.options.postUnits
        }
        ,
        r.prototype.updateHover = function(e, t) {
            var n, r;
            n = this.hitTest(e, t);
            if (n != null)
                return (r = this.hover).update.apply(r, n)
        }
        ,
        r.prototype.drawGrid = function() {
            var e, t, n, r, i, s;
            if (this.options.grid === !1 && this.options.axes === !1)
                return;
            i = this.grid,
            s = [];
            for (n = 0,
            r = i.length; n < r; n++)
                e = i[n],
                t = this.transY(e),
                this.options.axes && this.drawYAxisLabel(this.left - this.options.padding / 2, t, this.yAxisFormat(e)),
                this.options.grid ? s.push(this.drawGridLine("M" + this.left + "," + t + "H" + (this.left + this.width))) : s.push(void 0);
            return s
        }
        ,
        r.prototype.drawGoals = function() {
            var e, t, n, r, i, s, o;
            s = this.options.goals,
            o = [];
            for (n = r = 0,
            i = s.length; r < i; n = ++r)
                t = s[n],
                e = this.options.goalLineColors[n % this.options.goalLineColors.length],
                o.push(this.drawGoal(t, e));
            return o
        }
        ,
        r.prototype.drawEvents = function() {
            var e, t, n, r, i, s, o;
            s = this.events,
            o = [];
            for (n = r = 0,
            i = s.length; r < i; n = ++r)
                t = s[n],
                e = this.options.eventLineColors[n % this.options.eventLineColors.length],
                o.push(this.drawEvent(t, e));
            return o
        }
        ,
        r.prototype.drawGoal = function(e, t) {
            return this.raphael.path("M" + this.left + "," + this.transY(e) + "H" + this.right).attr("stroke", t).attr("stroke-width", this.options.goalStrokeWidth)
        }
        ,
        r.prototype.drawEvent = function(e, t) {
            return this.raphael.path("M" + this.transX(e) + "," + this.bottom + "V" + this.top).attr("stroke", t).attr("stroke-width", this.options.eventStrokeWidth)
        }
        ,
        r.prototype.drawYAxisLabel = function(e, t, n) {
            return this.raphael.text(e, t, n).attr("font-size", this.options.gridTextSize).attr("font-family", this.options.gridTextFamily).attr("font-weight", this.options.gridTextWeight).attr("fill", this.options.gridTextColor).attr("text-anchor", "end")
        }
        ,
        r.prototype.drawGridLine = function(e) {
            return this.raphael.path(e).attr("stroke", this.options.gridLineColor).attr("stroke-width", this.options.gridStrokeWidth)
        }
        ,
        r
    }(t.EventEmitter),
    t.parseDate = function(e) {
        var t, n, r, i, s, o, u, a, f, l, c;
        return typeof e == "number" ? e : (n = e.match(/^(\d+) Q(\d)$/),
        i = e.match(/^(\d+)-(\d+)$/),
        s = e.match(/^(\d+)-(\d+)-(\d+)$/),
        u = e.match(/^(\d+) W(\d+)$/),
        a = e.match(/^(\d+)-(\d+)-(\d+)[ T](\d+):(\d+)(Z|([+-])(\d\d):?(\d\d))?$/),
        f = e.match(/^(\d+)-(\d+)-(\d+)[ T](\d+):(\d+):(\d+(\.\d+)?)(Z|([+-])(\d\d):?(\d\d))?$/),
        n ? (new Date(parseInt(n[1], 10),parseInt(n[2], 10) * 3 - 1,1)).getTime() : i ? (new Date(parseInt(i[1], 10),parseInt(i[2], 10) - 1,1)).getTime() : s ? (new Date(parseInt(s[1], 10),parseInt(s[2], 10) - 1,parseInt(s[3], 10))).getTime() : u ? (l = new Date(parseInt(u[1], 10),0,1),
        l.getDay() !== 4 && l.setMonth(0, 1 + (4 - l.getDay() + 7) % 7),
        l.getTime() + parseInt(u[2], 10) * 6048e5) : a ? a[6] ? (o = 0,
        a[6] !== "Z" && (o = parseInt(a[8], 10) * 60 + parseInt(a[9], 10),
        a[7] === "+" && (o = 0 - o)),
        Date.UTC(parseInt(a[1], 10), parseInt(a[2], 10) - 1, parseInt(a[3], 10), parseInt(a[4], 10), parseInt(a[5], 10) + o)) : (new Date(parseInt(a[1], 10),parseInt(a[2], 10) - 1,parseInt(a[3], 10),parseInt(a[4], 10),parseInt(a[5], 10))).getTime() : f ? (c = parseFloat(f[6]),
        t = Math.floor(c),
        r = Math.round((c - t) * 1e3),
        f[8] ? (o = 0,
        f[8] !== "Z" && (o = parseInt(f[10], 10) * 60 + parseInt(f[11], 10),
        f[9] === "+" && (o = 0 - o)),
        Date.UTC(parseInt(f[1], 10), parseInt(f[2], 10) - 1, parseInt(f[3], 10), parseInt(f[4], 10), parseInt(f[5], 10) + o, t, r)) : (new Date(parseInt(f[1], 10),parseInt(f[2], 10) - 1,parseInt(f[3], 10),parseInt(f[4], 10),parseInt(f[5], 10),t,r)).getTime()) : (new Date(parseInt(e, 10),0,1)).getTime())
    }
    ,
    t.Hover = function() {
        function n(n) {
            n == null && (n = {}),
            this.options = e.extend({}, t.Hover.defaults, n),
            this.el = e("<div class='" + this.options["class"] + "'></div>"),
            this.el.hide(),
            this.options.parent.append(this.el)
        }
        return n.defaults = {
            "class": "morris-hover morris-default-style"
        },
        n.prototype.update = function(e, t, n) {
            return this.html(e),
            this.show(),
            this.moveTo(t, n)
        }
        ,
        n.prototype.html = function(e) {
            return this.el.html(e)
        }
        ,
        n.prototype.moveTo = function(e, t) {
            var n, r, i, s, o, u;
            return o = this.options.parent.innerWidth(),
            s = this.options.parent.innerHeight(),
            r = this.el.outerWidth(),
            n = this.el.outerHeight(),
            i = Math.min(Math.max(0, e - r / 2), o - r),
            t != null ? (u = t - n - 10,
            u < 0 && (u = t + 10,
            u + n > s && (u = s / 2 - n / 2))) : u = s / 2 - n / 2,
            this.el.css({
                left: i + "px",
                top: parseInt(u) + "px"
            })
        }
        ,
        n.prototype.show = function() {
            return this.el.show()
        }
        ,
        n.prototype.hide = function() {
            return this.el.hide()
        }
        ,
        n
    }(),
    t.Line = function(e) {
        function n(e) {
            this.hilight = u(this.hilight, this),
            this.onHoverOut = u(this.onHoverOut, this),
            this.onHoverMove = u(this.onHoverMove, this),
            this.onGridClick = u(this.onGridClick, this);
            if (!(this instanceof t.Line))
                return new t.Line(e);
            n.__super__.constructor.call(this, e)
        }
        return o(n, e),
        n.prototype.init = function() {
            this.pointGrow = Raphael.animation({
                r: this.options.pointSize + 3
            }, 25, "linear"),
            this.pointShrink = Raphael.animation({
                r: this.options.pointSize
            }, 25, "linear");
            if (this.options.hideHover !== "always")
                return this.hover = new t.Hover({
                    parent: this.el
                }),
                this.on("hovermove", this.onHoverMove),
                this.on("hoverout", this.onHoverOut),
                this.on("gridclick", this.onGridClick)
        }
        ,
        n.prototype.defaults = {
            lineWidth: 3,
            pointSize: 4,
            lineColors: ["#0b62a4", "#7A92A3", "#4da74d", "#afd8f8", "#edc240", "#cb4b4b", "#9440ed"],
            pointWidths: [1],
            pointStrokeColors: ["#ffffff"],
            pointFillColors: [],
            smooth: !0,
            xLabels: "auto",
            xLabelFormat: null,
            xLabelMargin: 24,
            continuousLine: !0,
            hideHover: !1
        },
        n.prototype.calc = function() {
            return this.calcPoints(),
            this.generatePaths()
        }
        ,
        n.prototype.calcPoints = function() {
            var e, t, n, r, i, s;
            i = this.data,
            s = [];
            for (n = 0,
            r = i.length; n < r; n++)
                e = i[n],
                e._x = this.transX(e.x),
                e._y = function() {
                    var n, r, i, s;
                    i = e.y,
                    s = [];
                    for (n = 0,
                    r = i.length; n < r; n++)
                        t = i[n],
                        t != null ? s.push(this.transY(t)) : s.push(t);
                    return s
                }
                .call(this),
                s.push(e._ymax = Math.min.apply(null, [this.bottom].concat(function() {
                    var n, r, i, s;
                    i = e._y,
                    s = [];
                    for (n = 0,
                    r = i.length; n < r; n++)
                        t = i[n],
                        t != null && s.push(t);
                    return s
                }())));
            return s
        }
        ,
        n.prototype.hitTest = function(e, t) {
            var n, r, i, s, o;
            if (this.data.length === 0)
                return null;
            o = this.data.slice(1);
            for (n = i = 0,
            s = o.length; i < s; n = ++i) {
                r = o[n];
                if (e < (r._x + this.data[n]._x) / 2)
                    break
            }
            return n
        }
        ,
        n.prototype.onGridClick = function(e, t) {
            var n;
            return n = this.hitTest(e, t),
            this.fire("click", n, this.options.data[n], e, t)
        }
        ,
        n.prototype.onHoverMove = function(e, t) {
            var n;
            return n = this.hitTest(e, t),
            this.displayHoverForRow(n)
        }
        ,
        n.prototype.onHoverOut = function() {
            if (this.options.hideHover !== !1)
                return this.displayHoverForRow(null)
        }
        ,
        n.prototype.displayHoverForRow = function(e) {
            var t;
            return e != null ? ((t = this.hover).update.apply(t, this.hoverContentForRow(e)),
            this.hilight(e)) : (this.hover.hide(),
            this.hilight())
        }
        ,
        n.prototype.hoverContentForRow = function(e) {
            var t, n, r, i, s, o, u;
            r = this.data[e],
            t = "<div class='morris-hover-row-label'>" + r.label + "</div>",
            u = r.y;
            for (n = s = 0,
            o = u.length; s < o; n = ++s)
                i = u[n],
                t += "<div class='morris-hover-point' style='color: " + this.colorFor(r, n, "label") + "'>\n  " + this.options.labels[n] + ":\n  " + this.yLabelFormat(i) + "\n</div>";
            return typeof this.options.hoverCallback == "function" && (t = this.options.hoverCallback(e, this.options, t)),
            [t, r._x, r._ymax]
        }
        ,
        n.prototype.generatePaths = function() {
            var e, n, r, i, s;
            return this.paths = function() {
                var o, u, f, l;
                l = [];
                for (r = o = 0,
                u = this.options.ykeys.length; 0 <= u ? o < u : o > u; r = 0 <= u ? ++o : --o)
                    s = this.options.smooth === !0 || (f = this.options.ykeys[r],
                    a.call(this.options.smooth, f) >= 0),
                    n = function() {
                        var e, t, n, s;
                        n = this.data,
                        s = [];
                        for (e = 0,
                        t = n.length; e < t; e++)
                            i = n[e],
                            i._y[r] !== void 0 && s.push({
                                x: i._x,
                                y: i._y[r]
                            });
                        return s
                    }
                    .call(this),
                    this.options.continuousLine && (n = function() {
                        var t, r, i;
                        i = [];
                        for (t = 0,
                        r = n.length; t < r; t++)
                            e = n[t],
                            e.y !== null && i.push(e);
                        return i
                    }()),
                    n.length > 1 ? l.push(t.Line.createPath(n, s, this.bottom)) : l.push(null);
                return l
            }
            .call(this)
        }
        ,
        n.prototype.draw = function() {
            this.options.axes && this.drawXAxis(),
            this.drawSeries();
            if (this.options.hideHover === !1)
                return this.displayHoverForRow(this.data.length - 1)
        }
        ,
        n.prototype.drawXAxis = function() {
            var e, n, r, i, s, o, u, a, f, l, c = this;
            u = this.bottom + this.options.padding / 2,
            s = null,
            i = null,
            e = function(e, t) {
                var n, r, o, a, f;
                return n = c.drawXAxisLabel(c.transX(t), u, e),
                f = n.getBBox(),
                n.transform("r" + -c.options.xLabelAngle),
                r = n.getBBox(),
                n.transform("t0," + r.height / 2 + "..."),
                c.options.xLabelAngle !== 0 && (a = -0.5 * f.width * Math.cos(c.options.xLabelAngle * Math.PI / 180),
                n.transform("t" + a + ",0...")),
                r = n.getBBox(),
                (s == null || s >= r.x + r.width || i != null && i >= r.x) && r.x >= 0 && r.x + r.width < c.el.width() ? (c.options.xLabelAngle !== 0 && (o = 1.25 * c.options.gridTextSize / Math.sin(c.options.xLabelAngle * Math.PI / 180),
                i = r.x - o),
                s = r.x - c.options.xLabelMargin) : n.remove()
            }
            ,
            this.options.parseTime ? this.data.length === 1 && this.options.xLabels === "auto" ? r = [[this.data[0].label, this.data[0].x]] : r = t.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat) : r = function() {
                var e, t, n, r;
                n = this.data,
                r = [];
                for (e = 0,
                t = n.length; e < t; e++)
                    o = n[e],
                    r.push([o.label, o.x]);
                return r
            }
            .call(this),
            r.reverse(),
            l = [];
            for (a = 0,
            f = r.length; a < f; a++)
                n = r[a],
                l.push(e(n[0], n[1]));
            return l
        }
        ,
        n.prototype.drawSeries = function() {
            var e, t, n, r, i, s;
            this.seriesPoints = [];
            for (e = t = r = this.options.ykeys.length - 1; r <= 0 ? t <= 0 : t >= 0; e = r <= 0 ? ++t : --t)
                this._drawLineFor(e);
            s = [];
            for (e = n = i = this.options.ykeys.length - 1; i <= 0 ? n <= 0 : n >= 0; e = i <= 0 ? ++n : --n)
                s.push(this._drawPointFor(e));
            return s
        }
        ,
        n.prototype._drawPointFor = function(e) {
            var t, n, r, i, s, o;
            this.seriesPoints[e] = [],
            s = this.data,
            o = [];
            for (r = 0,
            i = s.length; r < i; r++)
                n = s[r],
                t = null,
                n._y[e] != null && (t = this.drawLinePoint(n._x, n._y[e], this.options.pointSize, this.colorFor(n, e, "point"), e)),
                o.push(this.seriesPoints[e].push(t));
            return o
        }
        ,
        n.prototype._drawLineFor = function(e) {
            var t;
            t = this.paths[e];
            if (t !== null)
                return this.drawLinePath(t, this.colorFor(null, e, "line"))
        }
        ,
        n.createPath = function(e, n, r) {
            var i, s, o, u, a, f, l, c, h, p, d, v, m, g;
            l = "",
            n && (o = t.Line.gradients(e)),
            c = {
                y: null
            };
            for (u = m = 0,
            g = e.length; m < g; u = ++m) {
                i = e[u];
                if (i.y != null)
                    if (c.y != null)
                        n ? (s = o[u],
                        f = o[u - 1],
                        a = (i.x - c.x) / 4,
                        h = c.x + a,
                        d = Math.min(r, c.y + a * f),
                        p = i.x - a,
                        v = Math.min(r, i.y - a * s),
                        l += "C" + h + "," + d + "," + p + "," + v + "," + i.x + "," + i.y) : l += "L" + i.x + "," + i.y;
                    else if (!n || o[u] != null)
                        l += "M" + i.x + "," + i.y;
                c = i
            }
            return l
        }
        ,
        n.gradients = function(e) {
            var t, n, r, i, s, o, u, a;
            n = function(e, t) {
                return (e.y - t.y) / (e.x - t.x)
            }
            ,
            a = [];
            for (r = o = 0,
            u = e.length; o < u; r = ++o)
                t = e[r],
                t.y != null ? (i = e[r + 1] || {
                    y: null
                },
                s = e[r - 1] || {
                    y: null
                },
                s.y != null && i.y != null ? a.push(n(s, i)) : s.y != null ? a.push(n(s, t)) : i.y != null ? a.push(n(t, i)) : a.push(null)) : a.push(null);
            return a
        }
        ,
        n.prototype.hilight = function(e) {
            var t, n, r, i, s;
            if (this.prevHilight !== null && this.prevHilight !== e)
                for (t = n = 0,
                i = this.seriesPoints.length - 1; 0 <= i ? n <= i : n >= i; t = 0 <= i ? ++n : --n)
                    this.seriesPoints[t][this.prevHilight] && this.seriesPoints[t][this.prevHilight].animate(this.pointShrink);
            if (e !== null && this.prevHilight !== e)
                for (t = r = 0,
                s = this.seriesPoints.length - 1; 0 <= s ? r <= s : r >= s; t = 0 <= s ? ++r : --r)
                    this.seriesPoints[t][e] && this.seriesPoints[t][e].animate(this.pointGrow);
            return this.prevHilight = e
        }
        ,
        n.prototype.colorFor = function(e, t, n) {
            return typeof this.options.lineColors == "function" ? this.options.lineColors.call(this, e, t, n) : n === "point" ? this.options.pointFillColors[t % this.options.pointFillColors.length] || this.options.lineColors[t % this.options.lineColors.length] : this.options.lineColors[t % this.options.lineColors.length]
        }
        ,
        n.prototype.drawXAxisLabel = function(e, t, n) {
            return this.raphael.text(e, t, n).attr("font-size", this.options.gridTextSize).attr("font-family", this.options.gridTextFamily).attr("font-weight", this.options.gridTextWeight).attr("fill", this.options.gridTextColor)
        }
        ,
        n.prototype.drawLinePath = function(e, t) {
            return this.raphael.path(e).attr("stroke", t).attr("stroke-width", this.options.lineWidth)
        }
        ,
        n.prototype.drawLinePoint = function(e, t, n, r, i) {
            return this.raphael.circle(e, t, n).attr("fill", r).attr("stroke-width", this.strokeWidthForSeries(i)).attr("stroke", this.strokeForSeries(i))
        }
        ,
        n.prototype.strokeWidthForSeries = function(e) {
            return this.options.pointWidths[e % this.options.pointWidths.length]
        }
        ,
        n.prototype.strokeForSeries = function(e) {
            return this.options.pointStrokeColors[e % this.options.pointStrokeColors.length]
        }
        ,
        n
    }(t.Grid),
    t.labelSeries = function(n, r, i, s, o) {
        var u, a, f, l, c, h, p, d, v, m, g;
        f = 200 * (r - n) / i,
        a = new Date(n),
        p = t.LABEL_SPECS[s];
        if (p === void 0) {
            g = t.AUTO_LABEL_ORDER;
            for (v = 0,
            m = g.length; v < m; v++) {
                l = g[v],
                h = t.LABEL_SPECS[l];
                if (f >= h.span) {
                    p = h;
                    break
                }
            }
        }
        p === void 0 && (p = t.LABEL_SPECS.second),
        o && (p = e.extend({}, p, {
            fmt: o
        })),
        u = p.start(a),
        c = [];
        while ((d = u.getTime()) <= r)
            d >= n && c.push([p.fmt(u), d]),
            p.incr(u);
        return c
    }
    ,
    n = function(e) {
        return {
            span: e * 60 * 1e3,
            start: function(e) {
                return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours())
            },
            fmt: function(e) {
                return "" + t.pad2(e.getHours()) + ":" + t.pad2(e.getMinutes())
            },
            incr: function(t) {
                return t.setUTCMinutes(t.getUTCMinutes() + e)
            }
        }
    }
    ,
    r = function(e) {
        return {
            span: e * 1e3,
            start: function(e) {
                return new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes())
            },
            fmt: function(e) {
                return "" + t.pad2(e.getHours()) + ":" + t.pad2(e.getMinutes()) + ":" + t.pad2(e.getSeconds())
            },
            incr: function(t) {
                return t.setUTCSeconds(t.getUTCSeconds() + e)
            }
        }
    }
    ,
    t.LABEL_SPECS = {
        decade: {
            span: 1728e8,
            start: function(e) {
                return new Date(e.getFullYear() - e.getFullYear() % 10,0,1)
            },
            fmt: function(e) {
                return "" + e.getFullYear()
            },
            incr: function(e) {
                return e.setFullYear(e.getFullYear() + 10)
            }
        },
        year: {
            span: 1728e7,
            start: function(e) {
                return new Date(e.getFullYear(),0,1)
            },
            fmt: function(e) {
                return "" + e.getFullYear()
            },
            incr: function(e) {
                return e.setFullYear(e.getFullYear() + 1)
            }
        },
        month: {
            span: 24192e5,
            start: function(e) {
                return new Date(e.getFullYear(),e.getMonth(),1)
            },
            fmt: function(e) {
                return "" + e.getFullYear() + "-" + t.pad2(e.getMonth() + 1)
            },
            incr: function(e) {
                return e.setMonth(e.getMonth() + 1)
            }
        },
        day: {
            span: 864e5,
            start: function(e) {
                return new Date(e.getFullYear(),e.getMonth(),e.getDate())
            },
            fmt: function(e) {
                return "" + e.getFullYear() + "-" + t.pad2(e.getMonth() + 1) + "-" + t.pad2(e.getDate())
            },
            incr: function(e) {
                return e.setDate(e.getDate() + 1)
            }
        },
        hour: n(60),
        "30min": n(30),
        "15min": n(15),
        "10min": n(10),
        "5min": n(5),
        minute: n(1),
        "30sec": r(30),
        "15sec": r(15),
        "10sec": r(10),
        "5sec": r(5),
        second: r(1)
    },
    t.AUTO_LABEL_ORDER = ["decade", "year", "month", "day", "hour", "30min", "15min", "10min", "5min", "minute", "30sec", "15sec", "10sec", "5sec", "second"],
    t.Area = function(n) {
        function i(n) {
            var s;
            if (!(this instanceof t.Area))
                return new t.Area(n);
            s = e.extend({}, r, n),
            this.cumulative = !s.behaveLikeLine,
            s.fillOpacity === "auto" && (s.fillOpacity = s.behaveLikeLine ? .8 : 1),
            i.__super__.constructor.call(this, s)
        }
        var r;
        return o(i, n),
        r = {
            fillOpacity: "auto",
            behaveLikeLine: !1
        },
        i.prototype.calcPoints = function() {
            var e, t, n, r, i, s, o;
            s = this.data,
            o = [];
            for (r = 0,
            i = s.length; r < i; r++)
                e = s[r],
                e._x = this.transX(e.x),
                t = 0,
                e._y = function() {
                    var r, i, s, o;
                    s = e.y,
                    o = [];
                    for (r = 0,
                    i = s.length; r < i; r++)
                        n = s[r],
                        this.options.behaveLikeLine ? o.push(this.transY(n)) : (t += n || 0,
                        o.push(this.transY(t)));
                    return o
                }
                .call(this),
                o.push(e._ymax = Math.max.apply(Math, e._y));
            return o
        }
        ,
        i.prototype.drawSeries = function() {
            var e, t, n, r, i, s, o, u, a, f, l;
            this.seriesPoints = [],
            this.options.behaveLikeLine ? t = function() {
                a = [];
                for (var e = 0, t = this.options.ykeys.length - 1; 0 <= t ? e <= t : e >= t; 0 <= t ? e++ : e--)
                    a.push(e);
                return a
            }
            .apply(this) : t = function() {
                f = [];
                for (var e = u = this.options.ykeys.length - 1; u <= 0 ? e <= 0 : e >= 0; u <= 0 ? e++ : e--)
                    f.push(e);
                return f
            }
            .apply(this),
            l = [];
            for (i = 0,
            s = t.length; i < s; i++)
                e = t[i],
                this._drawFillFor(e),
                this._drawLineFor(e),
                l.push(this._drawPointFor(e));
            return l
        }
        ,
        i.prototype._drawFillFor = function(e) {
            var t;
            t = this.paths[e];
            if (t !== null)
                return t += "L" + this.transX(this.xmax) + "," + this.bottom + "L" + this.transX(this.xmin) + "," + this.bottom + "Z",
                this.drawFilledPath(t, this.fillForSeries(e))
        }
        ,
        i.prototype.fillForSeries = function(e) {
            var t;
            return t = Raphael.rgb2hsl(this.colorFor(this.data[e], e, "line")),
            Raphael.hsl(t.h, this.options.behaveLikeLine ? t.s * .9 : t.s * .75, Math.min(.98, this.options.behaveLikeLine ? t.l * 1.2 : t.l * 1.25))
        }
        ,
        i.prototype.drawFilledPath = function(e, t) {
            return this.raphael.path(e).attr("fill", t).attr("fill-opacity", this.options.fillOpacity).attr("stroke-width", 0)
        }
        ,
        i
    }(t.Line),
    t.Bar = function(n) {
        function r(n) {
            this.onHoverOut = u(this.onHoverOut, this),
            this.onHoverMove = u(this.onHoverMove, this),
            this.onGridClick = u(this.onGridClick, this);
            if (!(this instanceof t.Bar))
                return new t.Bar(n);
            r.__super__.constructor.call(this, e.extend({}, n, {
                parseTime: !1
            }))
        }
        return o(r, n),
        r.prototype.init = function() {
            this.cumulative = this.options.stacked;
            if (this.options.hideHover !== "always")
                return this.hover = new t.Hover({
                    parent: this.el
                }),
                this.on("hovermove", this.onHoverMove),
                this.on("hoverout", this.onHoverOut),
                this.on("gridclick", this.onGridClick)
        }
        ,
        r.prototype.defaults = {
            barSizeRatio: .75,
            barGap: 3,
            barColors: ["#0b62a4", "#7a92a3", "#4da74d", "#afd8f8", "#edc240", "#cb4b4b", "#9440ed"],
            xLabelMargin: 50
        },
        r.prototype.calc = function() {
            var e;
            this.calcBars();
            if (this.options.hideHover === !1)
                return (e = this.hover).update.apply(e, this.hoverContentForRow(this.data.length - 1))
        }
        ,
        r.prototype.calcBars = function() {
            var e, t, n, r, i, s, o;
            s = this.data,
            o = [];
            for (e = r = 0,
            i = s.length; r < i; e = ++r)
                t = s[e],
                t._x = this.left + this.width * (e + .5) / this.data.length,
                o.push(t._y = function() {
                    var e, r, i, s;
                    i = t.y,
                    s = [];
                    for (e = 0,
                    r = i.length; e < r; e++)
                        n = i[e],
                        n != null ? s.push(this.transY(n)) : s.push(null);
                    return s
                }
                .call(this));
            return o
        }
        ,
        r.prototype.draw = function() {
            return this.options.axes && this.drawXAxis(),
            this.drawSeries()
        }
        ,
        r.prototype.drawXAxis = function() {
            var e, t, n, r, i, s, o, u, a, f, l, c, h;
            f = this.bottom + this.options.padding / 2,
            o = null,
            s = null,
            h = [];
            for (e = l = 0,
            c = this.data.length; 0 <= c ? l < c : l > c; e = 0 <= c ? ++l : --l)
                u = this.data[this.data.length - 1 - e],
                t = this.drawXAxisLabel(u._x, f, u.label),
                a = t.getBBox(),
                t.transform("r" + -this.options.xLabelAngle),
                n = t.getBBox(),
                t.transform("t0," + n.height / 2 + "..."),
                this.options.xLabelAngle !== 0 && (i = -0.5 * a.width * Math.cos(this.options.xLabelAngle * Math.PI / 180),
                t.transform("t" + i + ",0...")),
                (o == null || o >= n.x + n.width || s != null && s >= n.x) && n.x >= 0 && n.x + n.width < this.el.width() ? (this.options.xLabelAngle !== 0 && (r = 1.25 * this.options.gridTextSize / Math.sin(this.options.xLabelAngle * Math.PI / 180),
                s = n.x - r),
                h.push(o = n.x - this.options.xLabelMargin)) : h.push(t.remove());
            return h
        }
        ,
        r.prototype.drawSeries = function() {
            var e, t, n, r, i, s, o, u, a, f, l, c, h, p;
            return n = this.width / this.options.data.length,
            u = this.options.stacked != null ? 1 : this.options.ykeys.length,
            e = (n * this.options.barSizeRatio - this.options.barGap * (u - 1)) / u,
            o = n * (1 - this.options.barSizeRatio) / 2,
            p = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null,
            this.bars = function() {
                var u, d, v, m;
                v = this.data,
                m = [];
                for (r = u = 0,
                d = v.length; u < d; r = ++u)
                    a = v[r],
                    i = 0,
                    m.push(function() {
                        var u, d, v, m;
                        v = a._y,
                        m = [];
                        for (f = u = 0,
                        d = v.length; u < d; f = ++u)
                            h = v[f],
                            h !== null ? (p ? (c = Math.min(h, p),
                            t = Math.max(h, p)) : (c = h,
                            t = this.bottom),
                            s = this.left + r * n + o,
                            this.options.stacked || (s += f * (e + this.options.barGap)),
                            l = t - c,
                            this.options.stacked && (c -= i),
                            this.drawBar(s, c, e, l, this.colorFor(a, f, "bar")),
                            m.push(i += l)) : m.push(null);
                        return m
                    }
                    .call(this));
                return m
            }
            .call(this)
        }
        ,
        r.prototype.colorFor = function(e, t, n) {
            var r, i;
            return typeof this.options.barColors == "function" ? (r = {
                x: e.x,
                y: e.y[t],
                label: e.label
            },
            i = {
                index: t,
                key: this.options.ykeys[t],
                label: this.options.labels[t]
            },
            this.options.barColors.call(this, r, i, n)) : this.options.barColors[t % this.options.barColors.length]
        }
        ,
        r.prototype.hitTest = function(e, t) {
            return this.data.length === 0 ? null : (e = Math.max(Math.min(e, this.right), this.left),
            Math.min(this.data.length - 1, Math.floor((e - this.left) / (this.width / this.data.length))))
        }
        ,
        r.prototype.onGridClick = function(e, t) {
            var n;
            return n = this.hitTest(e, t),
            this.fire("click", n, this.options.data[n], e, t)
        }
        ,
        r.prototype.onHoverMove = function(e, t) {
            var n, r;
            return n = this.hitTest(e, t),
            (r = this.hover).update.apply(r, this.hoverContentForRow(n))
        }
        ,
        r.prototype.onHoverOut = function() {
            if (this.options.hideHover !== !1)
                return this.hover.hide()
        }
        ,
        r.prototype.hoverContentForRow = function(e) {
            var t, n, r, i, s, o, u, a;
            r = this.data[e],
            t = "<div class='morris-hover-row-label'>" + r.label + "</div>",
            a = r.y;
            for (n = o = 0,
            u = a.length; o < u; n = ++o)
                s = a[n],
                t += "<div class='morris-hover-point' style='color: " + this.colorFor(r, n, "label") + "'>\n  " + this.options.labels[n] + ":\n  " + this.yLabelFormat(s) + "\n</div>";
            return typeof this.options.hoverCallback == "function" && (t = this.options.hoverCallback(e, this.options, t)),
            i = this.left + (e + .5) * this.width / this.data.length,
            [t, i]
        }
        ,
        r.prototype.drawXAxisLabel = function(e, t, n) {
            var r;
            return r = this.raphael.text(e, t, n).attr("font-size", this.options.gridTextSize).attr("font-family", this.options.gridTextFamily).attr("font-weight", this.options.gridTextWeight).attr("fill", this.options.gridTextColor)
        }
        ,
        r.prototype.drawBar = function(e, t, n, r, i) {
            return this.raphael.rect(e, t, n, r).attr("fill", i).attr("stroke-width", 0)
        }
        ,
        r
    }(t.Grid),
    t.Donut = function(n) {
        function r(n) {
            this.select = u(this.select, this),
            this.click = u(this.click, this);
            var r;
            if (!(this instanceof t.Donut))
                return new t.Donut(n);
            typeof n.element == "string" ? this.el = e(document.getElementById(n.element)) : this.el = e(n.element),
            this.options = e.extend({}, this.defaults, n);
            if (this.el === null || this.el.length === 0)
                throw new Error("Graph placeholder not found.");
            if (n.data === void 0 || n.data.length === 0)
                return;
            this.data = n.data,
            this.values = function() {
                var e, t, n, i;
                n = this.data,
                i = [];
                for (e = 0,
                t = n.length; e < t; e++)
                    r = n[e],
                    i.push(parseFloat(r.value));
                return i
            }
            .call(this),
            this.redraw()
        }
        return o(r, n),
        r.prototype.defaults = {
            colors: ["#0B62A4", "#3980B5", "#679DC6", "#95BBD7", "#B0CCE1", "#095791", "#095085", "#083E67", "#052C48", "#042135"],
            backgroundColor: "#FFFFFF",
            labelColor: "#000000",
            formatter: t.commas
        },
        r.prototype.redraw = function() {
            var e, n, r, i, s, o, u, a, f, l, c, h, p, d, v, m, g, y, b, w, E, S, x;
            this.el.empty(),
            this.raphael = new Raphael(this.el[0]),
            n = this.el.width() / 2,
            r = this.el.height() / 2,
            p = (Math.min(n, r) - 10) / 3,
            c = 0,
            w = this.values;
            for (d = 0,
            g = w.length; d < g; d++)
                h = w[d],
                c += h;
            a = 5 / (2 * p),
            e = 1.9999 * Math.PI - a * this.data.length,
            o = 0,
            s = 0,
            this.segments = [],
            E = this.values;
            for (i = v = 0,
            y = E.length; v < y; i = ++v)
                h = E[i],
                f = o + a + e * (h / c),
                l = new t.DonutSegment(n,r,p * 2,p,o,f,this.options.colors[s % this.options.colors.length],this.options.backgroundColor,s,this.raphael),
                l.render(),
                this.segments.push(l),
                l.on("hover", this.select),
                l.on("click", this.click),
                o = f,
                s += 1;
            this.text1 = this.drawEmptyDonutLabel(n, r - 10, this.options.labelColor, 15, 800),
            this.text2 = this.drawEmptyDonutLabel(n, r + 10, this.options.labelColor, 14),
            u = Math.max.apply(null, function() {
                var e, t, n, r;
                n = this.values,
                r = [];
                for (e = 0,
                t = n.length; e < t; e++)
                    h = n[e],
                    r.push(h);
                return r
            }
            .call(this)),
            s = 0,
            S = this.values,
            x = [];
            for (m = 0,
            b = S.length; m < b; m++) {
                h = S[m];
                if (h === u) {
                    this.select(s);
                    break
                }
                x.push(s += 1)
            }
            return x
        }
        ,
        r.prototype.click = function(e) {
            return this.fire("click", e, this.data[e])
        }
        ,
        r.prototype.select = function(e) {
            var t, n, r, i, s, o;
            o = this.segments;
            for (i = 0,
            s = o.length; i < s; i++)
                n = o[i],
                n.deselect();
            return r = this.segments[e],
            r.select(),
            t = this.data[e],
            this.setLabels(t.label, this.options.formatter(t.value, t))
        }
        ,
        r.prototype.setLabels = function(e, t) {
            var n, r, i, s, o, u, a, f;
            return n = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3,
            s = 1.8 * n,
            i = n / 2,
            r = n / 3,
            this.text1.attr({
                text: e,
                transform: ""
            }),
            o = this.text1.getBBox(),
            u = Math.min(s / o.width, i / o.height),
            this.text1.attr({
                transform: "S" + u + "," + u + "," + (o.x + o.width / 2) + "," + (o.y + o.height)
            }),
            this.text2.attr({
                text: t,
                transform: ""
            }),
            a = this.text2.getBBox(),
            f = Math.min(s / a.width, r / a.height),
            this.text2.attr({
                transform: "S" + f + "," + f + "," + (a.x + a.width / 2) + "," + a.y
            })
        }
        ,
        r.prototype.drawEmptyDonutLabel = function(e, t, n, r, i) {
            var s;
            return s = this.raphael.text(e, t, "").attr("font-size", r).attr("fill", n),
            i != null && s.attr("font-weight", i),
            s
        }
        ,
        r
    }(t.EventEmitter),
    t.DonutSegment = function(e) {
        function t(e, t, n, r, i, s, o, a, f, l) {
            this.cx = e,
            this.cy = t,
            this.inner = n,
            this.outer = r,
            this.color = o,
            this.backgroundColor = a,
            this.index = f,
            this.raphael = l,
            this.deselect = u(this.deselect, this),
            this.select = u(this.select, this),
            this.sin_p0 = Math.sin(i),
            this.cos_p0 = Math.cos(i),
            this.sin_p1 = Math.sin(s),
            this.cos_p1 = Math.cos(s),
            this.is_long = s - i > Math.PI ? 1 : 0,
            this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5),
            this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer),
            this.hilight = this.calcArc(this.inner)
        }
        return o(t, e),
        t.prototype.calcArcPoints = function(e) {
            return [this.cx + e * this.sin_p0, this.cy + e * this.cos_p0, this.cx + e * this.sin_p1, this.cy + e * this.cos_p1]
        }
        ,
        t.prototype.calcSegment = function(e, t) {
            var n, r, i, s, o, u, a, f, l, c;
            return l = this.calcArcPoints(e),
            n = l[0],
            i = l[1],
            r = l[2],
            s = l[3],
            c = this.calcArcPoints(t),
            o = c[0],
            a = c[1],
            u = c[2],
            f = c[3],
            "M" + n + "," + i + ("A" + e + "," + e + ",0," + this.is_long + ",0," + r + "," + s) + ("L" + u + "," + f) + ("A" + t + "," + t + ",0," + this.is_long + ",1," + o + "," + a) + "Z"
        }
        ,
        t.prototype.calcArc = function(e) {
            var t, n, r, i, s;
            return s = this.calcArcPoints(e),
            t = s[0],
            r = s[1],
            n = s[2],
            i = s[3],
            "M" + t + "," + r + ("A" + e + "," + e + ",0," + this.is_long + ",0," + n + "," + i)
        }
        ,
        t.prototype.render = function() {
            var e = this;
            return this.arc = this.drawDonutArc(this.hilight, this.color),
            this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function() {
                return e.fire("hover", e.index)
            }, function() {
                return e.fire("click", e.index)
            })
        }
        ,
        t.prototype.drawDonutArc = function(e, t) {
            return this.raphael.path(e).attr({
                stroke: t,
                "stroke-width": 2,
                opacity: 0
            })
        }
        ,
        t.prototype.drawDonutSegment = function(e, t, n, r, i) {
            return this.raphael.path(e).attr({
                fill: t,
                stroke: n,
                "stroke-width": 3
            }).hover(r).click(i)
        }
        ,
        t.prototype.select = function() {
            if (!this.selected)
                return this.seg.animate({
                    path: this.selectedPath
                }, 150, "<>"),
                this.arc.animate({
                    opacity: 1
                }, 150, "<>"),
                this.selected = !0
        }
        ,
        t.prototype.deselect = function() {
            if (this.selected)
                return this.seg.animate({
                    path: this.path
                }, 150, "<>"),
                this.arc.animate({
                    opacity: 0
                }, 150, "<>"),
                this.selected = !1
        }
        ,
        t
    }(t.EventEmitter)
}
).call(this);
(function(jQuery) {
    jQuery.fn.createTwigkitChart = function(settings) {
        function renderTwigkitChart(elem, config, callback) {
            var data = [];
            jQuery(elem).find('dl.data').each(function(index, el) {
                jQuery(el).find('dd').each(function(index, e) {
                    var label = jQuery(e).attr('data-label');
                    var url = jQuery(e).attr('data-url');
                    var value = parseInt(jQuery(e).html(), 10);
                    data.push({
                        label: label,
                        value: value,
                        url: encodeURI(url)
                    });
                });
            });
            var chartContainer = jQuery(elem).find('.chart-svg-container');
            function filterOnClick(url) {
                "use strict";
                window.location.href = decodeURI(url);
            }
            chartContainer.empty();
            if (config.type.toString() === 'bar') {
                Morris.Bar({
                    element: chartContainer,
                    data: data,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: config.label,
                    barColors: config.colors,
                    xLabelAngle: -60
                }).on('click', function(i, row) {
                    filterOnClick(row.url);
                });
            } else if (config.type.toString() === 'line') {
                Morris.Line({
                    element: chartContainer,
                    data: data,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: config.label,
                    lineColors: config.colors,
                    parseTime: false,
                    xLabelAngle: -60
                }).on('click', function(i, row) {
                    filterOnClick(row.url);
                });
            } else if (config.type.toString() === 'area') {
                Morris.Area({
                    element: chartContainer,
                    data: data,
                    xkey: 'label',
                    ykeys: ['value'],
                    labels: config.label,
                    lineColors: config.colors,
                    parseTime: false,
                    xLabelAngle: -60
                }).on('click', function(i, row) {
                    filterOnClick(row.url);
                });
            } else if (config.type.toString() === 'donut') {
                Morris.Donut({
                    element: chartContainer,
                    data: data,
                    colors: config.colors
                }).on('click', function(i, row) {
                    filterOnClick(row.url);
                });
            }
            if (callback !== undefined) {
                callback();
            }
        }
        var config = {
            'type': 'bar',
            'title': '',
            'label': ['value']
        };
        if (settings) {
            jQuery.extend(config, settings);
        }
        var chart = this;
        var rendering;
        jQuery(chart).parent().parent().bind('beforeShow', function() {
            if (!rendering) {
                rendering = true;
                setTimeout(function() {
                    renderTwigkitChart(chart, config);
                }, 50);
            }
        });
        if (jQuery(chart).is(':visible')) {
            setTimeout(function() {
                renderTwigkitChart(chart, config);
            }, 200);
        }
        return this;
    }
    ;
})(jQuery);
function TwigkitChartsRendererRegistration() {
    jQuery('div.chart.twigkit').each(function() {
        var settings = {};
        var data = jQuery(this).find('dl.data');
        if (data.attr('data-title')) {
            settings.title = data.attr('data-title').split(',');
        }
        if (data.attr('data-label')) {
            settings.label = data.attr('data-label').split(',');
        }
        if (data.attr('data-type')) {
            settings.type = data.attr('data-type').split(',');
        }
        if (data.attr('data-colors')) {
            settings.colors = data.attr('data-colors').split(',');
        }
        jQuery(this).createTwigkitChart(settings);
    });
}
TwigkitRenderCallbacks.add("TwigkitCharts", TwigkitChartsRendererRegistration);
Raphael.fn.pieChart = function(cx, cy, r, values, labels, urls, stroke, colorArray, textColor, tip) {
    var paper = this
      , rad = Math.PI / 180
      , chart = this.set();
    paper.clear();
    var w = 400;
    var h = 300;
    paper.setViewBox(0, 0, w, h, true);
    tip.hide();
    var tipText = "";
    var over = false;
    function sector(cx, cy, r, startAngle, endAngle, params) {
        var x1 = cx + r * Math.cos(-startAngle * rad)
          , x2 = cx + r * Math.cos(-endAngle * rad)
          , y1 = cy + r * Math.sin(-startAngle * rad)
          , y2 = cy + r * Math.sin(-endAngle * rad);
        if (startAngle === 0 && endAngle === 360) {
            return paper.circle(cx, cy, r).attr(params);
        }
        return paper.path(["M", cx, cy, "L", x1, y1, "A", r, r, 0, +(endAngle - startAngle > 180), 0, x2, y2, "z"]).attr(params);
    }
    function labelLine(cx, cy, r, angle, color) {
        var x1 = cx + Math.cos(-angle * rad) * r
          , y1 = cy + Math.sin(-angle * rad) * r
          , x2 = cx + Math.cos(-angle * rad) * (r + 20)
          , y2 = cy + Math.sin(-angle * rad) * (r + 20);
        return paper.path('M' + x1 + ' ' + y1 + 'L' + x2 + ' ' + y2).attr({
            stroke: color,
            "stroke-width": 1
        });
    }
    function addTip(node, txt, borderColour) {
        $(node).mouseenter(function() {
            tipText = txt;
            tip.css('border-color', borderColour);
            tip.show();
            over = true;
        }).mouseleave(function() {
            tip.hide();
            over = false;
        });
    }
    var angle = 0
      , total = 0
      , start = 0
      , colorPos = 0
      , process = function(j) {
        var value = values[j]
          , angleplus = 360 * value / total
          , popangle = angle + (angleplus / 2)
          , fillcolor = colorArray[colorPos]
          , ms = 500
          , delta = 5
          , segment = sector(cx, cy, r, angle, angle + angleplus, {
            fill: fillcolor,
            stroke: stroke,
            "stroke-width": 1
        })
          , txt = paper.text(cx + (r + delta + 55) * Math.cos(-popangle * rad), cy + (r + delta + 25) * Math.sin(-popangle * rad), labels[j]).attr({
            fill: textColor,
            stroke: "none",
            opacity: 1,
            "font-size": 12
        });
        addTip(segment.node, labels[j] + ' ' + value, fillcolor);
        labelLine(cx, cy, r, popangle, colorArray[colorPos]);
        if (!(angle === 0 && angle + angleplus === 360)) {
            segment.mouseover(function() {
                segment.stop().animate({
                    transform: "s1.1 1.1 " + cx + " " + cy
                }, ms, "elastic");
            }).mouseout(function() {
                segment.stop().animate({
                    transform: ""
                }, ms, "elastic");
            });
            if (urls.length > 0 && typeof urls[j] !== 'undefined') {
                segment.click(function() {
                    document.location.href = './' + urls[j];
                });
            }
        }
        $(document).mousemove(function(e) {
            if (over) {
                tip.css("left", e.pageX + 20).css("top", e.pageY + 20);
                tip.text(tipText);
            }
        });
        segment.scale(0, 0, this.cx, this.cy);
        var animateOpen = Raphael.animation({
            transform: "s1 1 " + this.cx + " " + this.cy
        }, 400, "backOut");
        segment.animate(animateOpen.delay(200 + (100 * j)));
        angle += angleplus;
        chart.push(segment);
        chart.push(txt);
        start += 0.1;
        colorPos += 1;
        if (colorPos === colorArray.length) {
            colorPos = 0;
        }
    };
    for (var i = 0, ii = values.length; i < ii; i++) {
        total += values[i];
    }
    for (i = 0; i < ii; i++) {
        process(i);
    }
    return chart;
}
;
$(function() {
    $('.chart-pie').each(function() {
        var values = []
          , labels = []
          , urls = [];
        var rendering;
        $(this).find(".chart-pie-data tr").each(function() {
            values.push(parseInt($("td", this).text(), 10));
            labels.push($("th", this).text());
            urls.push($("th", this).data('url'));
        });
        $(".chart-pie-data").hide();
        var svgContainer = $(this).find(".chart-svg").get(0);
        var pie = Raphael(svgContainer, 400, 320);
        var colorString = '#3781d6,#0e2338,#8dbb2d,#8e0007,#2eaecd,#472c6f,#ef8d48,#79a3e3,#c12129,#a7c86e,#674ecc,#0f5118';
        var textColor = "#000";
        if ($(this).is('[data-text-color]')) {
            textColor = $(this).attr('data-text-color');
        }
        if ($(this).is('[data-colors]')) {
            colorString = $(this).attr('data-colors');
        }
        var colorArray = colorString.split(',');
        var chartTipClassName = 'tk-chart-tip';
        $(this).append("<div class='" + chartTipClassName + "'></div>");
        var tip = $(this).find("." + chartTipClassName);
        $(this).parent().bind('beforeShow', function(event) {
            var toggleTriggered = false;
            if (event.target != null && event.currentTarget != null && event.target === event.currentTarget) {
                toggleTriggered = true;
            }
            if (!rendering && toggleTriggered) {
                rendering = true;
                setTimeout(function() {
                    pie.pieChart(200, 150, 100, values, labels, urls, "#FFFFFF", colorArray, textColor, tip);
                }, 50);
            }
        });
        if ($(this).is(':visible')) {
            setTimeout(function() {
                pie.pieChart(200, 150, 100, values, labels, urls, "#FFFFFF", colorArray, textColor, tip);
            }, 200);
        }
    });
});
(function(jQuery) {
    jQuery.fn.facetChart = function() {
        var self = $(this);
        var showMoreLink = self.find(".more-link").find('a');
        showMoreLink.click(function(e) {
            if (self.hasClass('showing-more')) {
                self.removeClass("showing-more");
                $(this).text("Show more...");
            } else {
                self.addClass("showing-more");
                $(this).text("Show less...");
            }
            e.preventDefault();
        });
    }
})(jQuery);
function FacetChart() {
    jQuery('div.facetchart').each(function() {
        jQuery(this).facetChart();
    });
}
TwigkitRenderCallbacks.add("FacetChart", FacetChart);
(function(jQuery) {
    function BingMap() {
        return this;
    }
    ;BingMap.prototype = {
        init: function(container, urlPrefix, zoomLevel, linkTarget) {
            this.urlPrefix = urlPrefix;
            this.linkTarget = linkTarget;
            this.locations = [];
            this.results = [];
            this.map = new Microsoft.Maps.Map(jQuery(container).children('div')[0],{
                credentials: "Am0nuHMC-S0DlWkPGEKVYjK4WCSUnI7q6UDhcOK7vf0fKR6D5sAjCGUDtJU7MOTF",
                zoom: parseInt(zoomLevel),
                showCopyright: false,
                enableClickableLogo: false,
                enableSearchLogo: false,
                showDashboard: false,
                scrollwheel: false
            });
            var self = this;
            var arr = jQuery(container).find('dl dd');
            var count = 0;
            var geocoding = false;
            arr.each(function(index, el) {
                self.results[index] = {
                    url: jQuery(el).attr('data-url')
                };
                if (jQuery(el).attr('data-latitude') && jQuery(el).attr('data-longitude')) {
                    self.add(index, jQuery(el).attr('data-latitude'), jQuery(el).attr('data-longitude'));
                } else {
                    self.geocode(index, jQuery(el).html(), function(index, lat, lon) {
                        geocoding = true;
                        self.add(index, lat, lon);
                        if (count++ === (arr.length - 1)) {
                            self.render(function() {
                                self.zoom();
                            });
                        }
                    });
                }
            });
            if (!geocoding) {
                self.render(function() {
                    self.zoom();
                });
            }
        },
        zoom: function() {
            var viewRect = Microsoft.Maps.LocationRect.fromLocations(this.locations);
            this.map.setView({
                bounds: viewRect
            });
        },
        add: function(index, lat, lon) {
            var loc = new Microsoft.Maps.Location(lat,lon);
            this.locations[index] = loc;
        },
        render: function(callback) {
            for (var i = 0; i < this.locations.length; i++) {
                var pin = new Microsoft.Maps.Pushpin(this.locations[i],{
                    text: '' + (i + 1)
                });
                var self = this;
                Microsoft.Maps.Events.addHandler(pin, 'mouseup', function(e) {
                    if (e.targetType === 'pushpin') {
                        window.open((self.urlPrefix !== undefined ? self.urlPrefix : '') + self.results[parseInt(e.target.getText()) - 1].url, self.linkTarget !== undefined ? self.linkTarget : '_blank');
                    }
                });
                this.map.entities.push(pin);
            }
            if (callback !== undefined) {
                callback();
            }
        },
        geocode: function(index, address, callback) {
            jQuery.getJSON('http://dev.virtualearth.net/REST/v1/Locations?query=' + address + '&key=Am0nuHMC-S0DlWkPGEKVYjK4WCSUnI7q6UDhcOK7vf0fKR6D5sAjCGUDtJU7MOTF&jsonp=?', function(result) {
                var point = result.resourceSets[0].resources[0].point;
                callback(index, point.coordinates[0], point.coordinates[1]);
            });
        }
    }
    var config;
    jQuery.fn.createBingMap = function(settings) {
        this.each(function() {
            var map = new BingMap();
            var self = this;
            var rendering;
            if (jQuery(this).is(':visible')) {
                setTimeout(function() {
                    map.init(self, settings.urlPrefix, settings.zoomLevel, settings.linkTarget);
                }, 200);
            }
        });
        return this;
    }
    ;
})(jQuery);
TwigkitRenderCallbacks.add("BingMaps", function() {
    'use strict';
    jQuery('.bing-map').each(function() {
        var settings = {};
        settings.linkTarget = jQuery(this).attr('data-link-target');
        settings.urlPrefix = jQuery(this).attr('data-url-prefix');
        settings.zoomLevel = jQuery(this).attr('data-zoom-level');
        jQuery(this).createBingMap(settings);
    });
});
(function(jQuery) {
    function GoogleMap() {
        return this;
    }
    GoogleMap.prototype = {
        init: function(container, urlPrefix, zoomLevel, scrollToZoom, linkTarget) {
            this.urlPrefix = urlPrefix;
            this.linkTarget = linkTarget;
            this.zoomLevel = parseInt(zoomLevel);
            this.locations = [];
            this.results = [];
            this.bounds = new google.maps.LatLngBounds();
            var scrollToZoom = jQuery(document).width() > 480 ? scrollToZoom : false;
            var isDraggable = jQuery(document).width() > 480 ? true : false;
            var options = {
                zoom: this.zoomLevel,
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: false,
                zoomControl: true,
                scrollwheel: scrollToZoom,
                draggable: isDraggable
            }
            this.map = new google.maps.Map(jQuery(container).children('div')[0],options);
            var self = this;
            var arr = jQuery(container).find('dl dd');
            var count = 0;
            var geocoding = false;
            arr.each(function(index, el) {
                if (jQuery(el).attr('data-url') != '') {
                    self.results[index] = {
                        label: jQuery(el).attr('data-label'),
                        url: jQuery(el).attr('data-url')
                    };
                } else {
                    self.results[index] = {
                        label: jQuery(el).attr('data-label')
                    };
                }
                if (jQuery(el).attr('data-latitude') && jQuery(el).attr('data-longitude')) {
                    self.add(index, jQuery(el).attr('data-latitude'), jQuery(el).attr('data-longitude'));
                } else {
                    self.geocode(index, jQuery(el).html(), function(index, lat, lon) {
                        geocoding = true;
                        self.add(index, lat, lon);
                        count = count + 1;
                        if (count === (arr.length) || count % 5 === 0) {
                            self.render(function() {
                                self.zoom();
                            });
                        }
                    });
                }
            });
            if (!geocoding) {
                self.render(function() {
                    self.zoom();
                });
            }
        },
        zoom: function() {
            function allLocationsInSamePlace(locations) {
                if (locations.length > 1) {
                    var lat = locations[0].lat();
                    var lng = locations[0].lng();
                    for (var i = 1; i < locations.length; i++) {
                        var loc = locations[i];
                        if (typeof loc !== 'undefined') {
                            if (typeof lat === 'number' && typeof loc.lat() === 'number' && loc.lat() !== lat) {
                                return false;
                            }
                            if (typeof lng === 'number' && typeof loc.lng() === 'number' && loc.lng() !== lng) {
                                return false;
                            }
                        }
                    }
                }
                return true;
            }
            if (!allLocationsInSamePlace(this.locations)) {
                this.map.fitBounds(this.bounds);
            } else {
                this.map.setZoom(this.zoomLevel);
                this.map.setCenter(this.bounds.getCenter());
            }
        },
        add: function(index, lat, lon) {
            var loc = new google.maps.LatLng(lat,lon);
            this.bounds.extend(loc);
            this.locations[index] = loc;
        },
        render: function(callback) {
            for (var i = 0; i < this.locations.length; i++) {
                var markerTitle = this.results[i].label != '' ? this.results[i].label : '' + (i + 1);
                var self = this;
                var url = self.results[i].url;
                var marker = new google.maps.Marker({
                    map: this.map,
                    position: this.locations[i],
                    title: markerTitle,
                    draggable: false,
                    url: url
                });
                if (url != null) {
                    google.maps.event.addListener(marker, 'click', function(event) {
                        window.open((self.urlPrefix !== undefined ? self.urlPrefix : '') + this.url, self.linkTarget !== undefined ? self.linkTarget : '_blank');
                    });
                }
            }
            var center = this.map.getCenter();
            google.maps.event.trigger(this.map, "resize");
            this.map.setCenter(center);
            if (callback !== undefined) {
                callback();
            }
        },
        geocode: function(index, address, callback) {
            var geocoder = new google.maps.Geocoder();
            function attemptGeocode(targetAddress) {
                geocoder.geocode({
                    'address': targetAddress
                }, function(results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        callback(index, results[0].geometry.location.lat(), results[0].geometry.location.lng());
                    } else if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
                        var delay = 1000 + (index % 4) * 1000;
                        setTimeout(function() {
                            attemptGeocode(targetAddress)
                        }, delay);
                    }
                });
            }
            attemptGeocode(address);
        }
    }
    var config;
    jQuery.fn.createGoogleMap = function(settings) {
        this.each(function() {
            var map = new GoogleMap();
            var self = this;
            var rendering;
            jQuery(this).parent().bind('beforeShow', function() {
                if (!rendering) {
                    map.init(self, settings.urlPrefix, settings.zoomLevel, settings.scrollToZoom, settings.linkTarget);
                    rendering = true;
                }
            });
            if (jQuery(this).is(':visible')) {
                setTimeout(function() {
                    map.init(self, settings.urlPrefix, settings.zoomLevel, settings.scrollToZoom, settings.linkTarget);
                }, 200);
            }
        });
        return this;
    }
    ;
})(jQuery);
TwigkitRenderCallbacks.add("GoogleMaps", function() {
    'use strict';
    jQuery('.google-map').each(function() {
        var settings = {};
        settings.linkTarget = jQuery(this).attr('data-link-target');
        settings.urlPrefix = jQuery(this).attr('data-url-prefix');
        settings.zoomLevel = jQuery(this).attr('data-zoom-level');
        settings.scrollToZoom = jQuery(this).attr('data-scroll-to-zoom');
        jQuery(this).createGoogleMap(settings);
    });
});
(function(jQuery) {
    function Heatmap() {
        return this;
    }
    Heatmap.prototype = {
        init: function(container, urlPrefix, scrollToZoom, color, invert, radius) {
            this.urlPrefix = urlPrefix;
            this.locations = [];
            this.results = [];
            this.radius = radius;
            this.bounds = new google.maps.LatLngBounds();
            if (this.map) {
                return;
            }
            var scrollToZoom = jQuery(document).width() > 480 ? scrollToZoom : false;
            var isDraggable = jQuery(document).width() > 480 ? true : false;
            var styles;
            if (color !== undefined && color !== '') {
                styles = [{
                    stylers: [{
                        hue: color
                    }, {
                        saturation: 0
                    }]
                }, {
                    featureType: "landscape",
                    elementType: "all",
                    stylers: [{
                        color: color
                    }, {
                        invert_lightness: true
                    }, {
                        saturation: -20
                    }]
                }, {
                    featureType: "water",
                    elementType: "all",
                    stylers: [{
                        invert_lightness: invert
                    }, {
                        saturation: -100
                    }]
                }];
            }
            var options = {
                mapTypeId: google.maps.MapTypeId.ROADMAP,
                disableDefaultUI: false,
                zoomControl: true,
                scrollwheel: scrollToZoom,
                draggable: isDraggable
            }
            if (styles) {
                options.styles = styles;
            }
            var mapContainer = jQuery(container).children('div.container')[0];
            this.map = new google.maps.Map(mapContainer,options);
            var self = this;
            google.maps.event.addListener(this.map, 'zoom_changed', function() {
                if (self.heatViz) {
                    self.heatViz.set('radius', self.map.getZoom() * radius);
                }
            });
            var arr = jQuery(container).find('dl dd');
            var count = 0;
            arr.each(function(index, el) {
                self.results[index] = {
                    url: jQuery(el).attr('data-url')
                };
                if (jQuery(el).attr('data-latitude') && jQuery(el).attr('data-longitude')) {
                    self.add(index, jQuery(el).attr('data-latitude'), jQuery(el).attr('data-longitude'), jQuery(el).attr('data-count'));
                }
            });
            self.render(function() {
                self.zoom();
            });
        },
        zoom: function() {
            if (this.locations.length > 1) {
                this.map.fitBounds(this.bounds);
            } else {
                this.map.setCenter(this.bounds.getCenter());
            }
        },
        add: function(index, lat, lon, weight) {
            var loc = new google.maps.LatLng(lat,lon);
            this.bounds.extend(loc);
            var obj = {};
            obj.location = loc;
            if (weight) {
                obj.weight = parseInt(weight);
            }
            this.locations[index] = obj;
        },
        render: function(callback) {
            this.heatViz = new google.maps.visualization.HeatmapLayer({
                data: this.locations,
                maxIntensity: 1,
                opacity: 0.67,
                dissipating: true,
                radius: this.map.getZoom() * this.radius
            });
            this.heatViz.setMap(this.map);
            if (callback !== undefined) {
                callback();
            }
            if (this.rendering)
                this.rendering = false;
        }
    }
    var config;
    jQuery.fn.createHeatmap = function(settings) {
        this.each(function() {
            var map = new Heatmap();
            var self = this;
            map.rendering = false;
            jQuery(this).parent().bind('beforeShow', function() {
                if (!map.rendering) {
                    map.init(self, settings.urlPrefix, settings.scrollToZoom, settings.color, settings.invert, settings.radius);
                    map.rendering = true;
                }
            });
            if (jQuery(this).is(':visible')) {
                setTimeout(function() {
                    map.init(self, settings.urlPrefix, settings.scrollToZoom, settings.color, settings.invert, settings.radius);
                }, 200);
            }
        });
        return this;
    }
    ;
})(jQuery);
TwigkitRenderCallbacks.add("Heatmap", function() {
    'use strict';
    jQuery('.heat-map').each(function() {
        var settings = {};
        settings.urlPrefix = jQuery(this).attr('data-url-prefix');
        settings.scrollToZoom = jQuery(this).attr('data-scroll-to-zoom');
        settings.color = jQuery(this).attr('data-color');
        settings.invert = jQuery(this).attr('data-invert');
        settings.radius = jQuery(this).attr('data-radius');
        jQuery(this).createHeatmap(settings);
    });
});
(function(jQuery) {
    function EsriMap() {
        return this;
    }
    EsriMap.prototype = {
        init: function(container, urlPrefix, zoomLevel, linkTarget, mapId, geocodeServer, basemap) {
            this.urlPrefix = urlPrefix;
            this.linkTarget = linkTarget;
            this.zoomLevel = parseInt(zoomLevel);
            this.points = [];
            this.results = [];
            this.graphics = [];
            this.clickEventSet = false;
            dojo.require("esri.map");
            dojo.require("dojo/domReady!");
            this.map = new esri.Map(mapId,{
                center: [0, 0],
                basemap: basemap
            });
            var self = this;
            this.map.on("load", function() {
                var arr = jQuery(container).find('dl dd');
                var count = 0;
                var geocoding = false;
                arr.each(function(index, el) {
                    if (jQuery(el).attr('data-url') != '') {
                        self.results[index] = {
                            label: jQuery(el).attr('data-label'),
                            header: jQuery(el).attr('data-header'),
                            url: jQuery(el).attr('data-url')
                        };
                    } else {
                        self.results[index] = {
                            label: jQuery(el).attr('data-label'),
                            header: jQuery(el).attr('data-header')
                        };
                    }
                    if (jQuery(el).attr('data-latitude') && jQuery(el).attr('data-longitude')) {
                        self.add(index, jQuery(el).attr('data-latitude'), jQuery(el).attr('data-longitude'));
                    } else {
                        self.geocode(index, jQuery(el).html(), geocodeServer, function(index, lat, lon) {
                            geocoding = true;
                            self.add(index, lat, lon);
                            if (count++ == (arr.length - 1)) {
                                self.render(function() {
                                    self.zoom();
                                });
                            }
                        });
                    }
                });
                if (!geocoding) {
                    self.render(function() {
                        self.zoom();
                    });
                }
            });
        },
        zoom: function() {
            if (this.points.length == 1) {
                this.map.centerAndZoom(this.points[0], 12);
            } else if (this.points.length > 1) {
                var extGraphics = esri.graphicsExtent(this.graphics);
                this.map.setExtent(extGraphics, true)
            }
        },
        add: function(index, lat, lon) {
            dojo.require("esri/geometry/Point");
            var point = {};
            if (lat != null && lon != null) {
                point = new esri.geometry.Point(lon,lat);
            }
            this.points[index] = point;
        },
        render: function(callback) {
            dojo.require("esri/symbols/SimpleMarkerSymbol");
            dojo.require("esri/symbols/SimpleLineSymbol");
            dojo.require("esri/graphic");
            dojo.require("dijit/TooltipDialog");
            dojo.require("dijit/popup");
            dojo.require("dojo/dom-style");
            var sms = new esri.symbol.SimpleMarkerSymbol(esri.symbol.SimpleMarkerSymbol.STYLE_CIRCLE,10,new esri.symbol.SimpleLineSymbol(esri.symbol.SimpleLineSymbol.STYLE_SOLID,new esri.Color([255, 0, 0]),1),new esri.Color([0, 255, 0, 0.25]));
            if (!this.clickEventSet) {
                this.clickEventSet = true;
                dojo.connect(this.map.graphics, "onClick", function(e) {
                    if (e.graphic.attributes.url != null) {
                        window.open(e.graphic.attributes.url, this.linkTarget !== undefined ? this.linkTarget : '_blank');
                    }
                });
                dojo.connect(this.map.graphics, "onMouseMove", function(evt) {
                    var g = evt.graphic;
                    if (g.getContent() != null) {
                        this._map.infoWindow.setContent(g.getContent());
                        this._map.infoWindow.setTitle(g.getTitle());
                        this._map.infoWindow.show(evt.screenPoint, this._map.getInfoWindowAnchor(evt.screenPoint));
                    }
                });
                dojo.connect(this.map.graphics, "onMouseOut", function() {
                    this._map.infoWindow.hide();
                });
            }
            for (var i = 0; i < this.points.length; i++) {
                if (this.points[i] != {}) {
                    var self = this;
                    var url = self.results[i].url;
                    var attrs = {};
                    if (url != null) {
                        attrs = {
                            "url": (self.urlPrefix !== undefined ? self.urlPrefix : '') + url
                        }
                    }
                    attrs.label = " ";
                    var label = self.results[i].label;
                    if (label != null && label != "") {
                        attrs.label = label;
                    }
                    attrs.header = " ";
                    var header = self.results[i].header;
                    if (header != null && header != "") {
                        attrs.header = header;
                    }
                    var graphic = new esri.Graphic(this.points[i],sms,attrs);
                    if (attrs.label != " " || attrs.header != " ") {
                        var infoTemplate = new esri.InfoTemplate(attrs.header,label);
                        graphic.setInfoTemplate(infoTemplate);
                    }
                    this.map.graphics.add(graphic);
                    this.graphics.push(graphic);
                }
            }
            if (callback !== undefined) {
                callback();
            }
        },
        geocode: function(index, address, geocodeServer, callback) {
            jQuery.getJSON(geocodeServer + 'find?text=' + address + '&f=pjson', function(result) {
                try {
                    var point = result.locations[0].feature.geometry;
                    callback(index, point.y, point.x);
                } catch (e) {
                    callback(index, null, null)
                }
            }).error(function() {
                callback(index, null, null);
            });
        }
    }
    jQuery.fn.createEsriMap = function(settings) {
        this.each(function() {
            var map = new EsriMap();
            var self = this;
            var rendering;
            jQuery(this).parent().bind('beforeShow', function() {
                if (!rendering) {
                    map.init(self, settings.urlPrefix, settings.zoomLevel, settings.linkTarget, settings.mapId, settings.geocodeServer, settings.basemap);
                    rendering = true;
                }
            });
            if (jQuery(this).is(':visible')) {
                setTimeout(function() {
                    map.init(self, settings.urlPrefix, settings.zoomLevel, settings.linkTarget, settings.mapId, settings.geocodeServer, settings.basemap);
                }, 200);
            }
        });
        return this;
    }
    ;
})(jQuery);
TwigkitRenderCallbacks.add("EsriMaps", function() {
    'use strict';
    jQuery('.esri-map').each(function() {
        var settings = {};
        settings.linkTarget = jQuery(this).attr('data-link-target');
        settings.urlPrefix = jQuery(this).attr('data-url-prefix');
        settings.zoomLevel = jQuery(this).attr('data-zoom-level');
        settings.mapId = jQuery(this).attr("data-map-id");
        settings.geocodeServer = jQuery(this).attr("data-geocode-server");
        settings.basemap = jQuery(this).attr("data-basemap");
        jQuery(this).createEsriMap(settings);
    });
});
(function(jQuery) {
    jQuery.fn.createChart = function(settings) {
        var rendering;
        var config = {
            'maxCharacters': -1,
            'maxLabels': -1,
            'type': 'pie',
            'backgroundColor': 'transparent'
        };
        window.highcharts = function(settings) {}
        ;
        highcharts.prototype = {
            init: function() {}
        };
        if (settings) {
            jQuery.extend(config, settings);
        }
        this.each(function() {
            var chart = this;
            jQuery(chart).parent().bind('beforeShow', function() {
                if (!rendering) {
                    rendering = true;
                    setTimeout(function() {
                        render(chart, config);
                    }, 50);
                }
            })
            if (jQuery(chart).is(':visible')) {
                setTimeout(function() {
                    render(chart, config);
                }, 200);
            }
        });
        return this;
    }
    ;
    function renderDefaults(multiSeries, clickable) {
        return {
            showInLegend: multiSeries,
            allowPointSelect: clickable
        };
    }
    var series = [];
    function clearSeries() {
        series = [];
    }
    function addSeries(index, name, type) {
        series[index] = {
            name: name,
            data: [],
            type: type
        };
    }
    function addPoint(index, label, count) {
        series[index].data.push([label, count]);
    }
    function render(elem, config, callback) {
        var urls = {};
        var title = config.title;
        var container = jQuery(elem).find('.container')[0];
        clearSeries();
        var i = 0;
        jQuery(elem).find('dl.data dd.series').each(function(index, el) {
            addSeries(i, jQuery(el).attr('title'), config.type[i] != null ? config.type[i] : config.type[0]);
            jQuery(el).find('dl dd.point').each(function(index, e) {
                var label = jQuery(e).html();
                addPoint(i, label, parseFloat(jQuery(e).attr('data-value')));
                urls[label] = jQuery(e).attr('data-url');
            });
            i++;
        });
        var showInterval = Math.ceil(series[0].data.length / config.maxLabels);
        var labelCounter = 0;
        new Highcharts.Chart({
            chart: {
                backgroundColor: config.backgroundColor,
                renderTo: container,
                defaultSeriesType: 'pie'
            },
            legend: {
                enabled: config.showLegend
            },
            title: {
                text: title
            },
            series: series,
            credits: {
                enabled: false
            },
            exporting: {
                enabled: false
            },
            tooltip: {
                headerFormat: '',
                pointFormat: config.pointFormat,
                enabled: config.showTooltips
            },
            xAxis: {
                categories: series[0].data,
                title: {
                    text: config.xTitle
                },
                labels: {
                    rotation: 75,
                    useHTML: true,
                    enabled: config.showLabels,
                    align: 'left',
                    formatter: function() {
                        labelCounter++;
                        if (config.maxLabels == -1 || labelCounter % showInterval == 0) {
                            var maxCharacters = parseInt(config.maxCharacters);
                            if (maxCharacters > 0 && this.value[0].length > maxCharacters) {
                                return this.value[0].substr(0, maxCharacters) + '...' + (config.showCount === true ? ' (' + this.value[1] + ')' : '');
                            } else {
                                return this.value[0] + (config.showCount === true && config.maxLabels == -1 ? ' (' + this.value[1] + ')' : '');
                            }
                        } else {
                            return '';
                        }
                    }
                }
            },
            yAxis: {
                title: {
                    text: config.yTitle
                },
                labels: {
                    useHTML: true
                }
            },
            plotOptions: {
                pie: jQuery.extend(renderDefaults(series.length > 1, true), {
                    innerSize: '20%',
                    dataLabels: {
                        useHTML: true,
                        formatter: function() {
                            if (config.showLabels) {
                                var maxCharacters = parseInt(config.maxCharacters);
                                if (maxCharacters > 0 && this.point.name.length > maxCharacters) {
                                    return this.point.name.substr(0, maxCharacters) + '...' + (config.showCount === true ? ' (' + this.point.y + ')' : '');
                                } else {
                                    return this.point.name + (config.showCount === true ? ' (' + this.point.y + ')' : '');
                                }
                            }
                        }
                    },
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                }),
                column: jQuery.extend(renderDefaults(series.length > 1, true), {
                    stacking: config.stacked ? 'normal' : null,
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                }),
                line: jQuery.extend(renderDefaults(series.length > 1, true), {
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                }),
                area: jQuery.extend(renderDefaults(series.length > 1, true), {
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                }),
                scatter: jQuery.extend(renderDefaults(series.length > 1, true), {
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                }),
                bar: jQuery.extend(renderDefaults(series.length > 1, true), {
                    stacking: config.stacked ? 'normal' : null,
                    point: {
                        events: {
                            click: function(event) {
                                if (urls[this.name]) {
                                    document.location = urls[this.name];
                                }
                            }
                        }
                    }
                })
            }
        });
        if (callback !== undefined)
            callback();
    }
})(jQuery);
function TwigkitHighchartsRendererRegistration() {
    jQuery('div.chart.highcharts').each(function() {
        var settings = {};
        settings['title'] = '';
        settings['xTitle'] = jQuery(this).find('dl.data').attr('data-x-title');
        settings['pointFormat'] = jQuery(this).find('dl.data').attr('data-point-format');
        settings['yTitle'] = jQuery(this).find('dl.data').attr('data-y-title');
        settings['type'] = jQuery(this).find('dl.data').attr('data-type').split(',');
        settings['maxCharacters'] = jQuery(this).find('dl.data').attr('data-max-characters');
        settings['maxLabels'] = jQuery(this).find('dl.data').attr('data-max-labels');
        settings['showLabels'] = jQuery(this).find('dl.data').attr('data-show-labels') === 'true';
        settings['showTooltips'] = jQuery(this).find('dl.data').attr('data-show-tooltips') === 'true';
        settings['backgroundColor'] = 'rgba(255,255,255,0)';
        settings['showCount'] = jQuery(this).find('dl.data').attr('data-show-count') === 'true';
        settings['stacked'] = jQuery(this).find('dl.data').attr('data-stacked') === 'true';
        settings['showLegend'] = jQuery(this).find('dl.data').attr('data-show-legend') === 'true';
        jQuery(this).createChart(settings);
    });
}
TwigkitRenderCallbacks.add("Chart", TwigkitHighchartsRendererRegistration);
(function() {
    function D() {
        var a, b = arguments, c, d = {}, e = function(a, b) {
            var c, d;
            typeof a !== "object" && (a = {});
            for (d in b)
                b.hasOwnProperty(d) && (c = b[d],
                a[d] = c && typeof c === "object" && Object.prototype.toString.call(c) !== "[object Array]" && d !== "renderTo" && typeof c.nodeType !== "number" ? e(a[d] || {}, c) : b[d]);
            return a
        };
        b[0] === !0 && (d = b[1],
        b = Array.prototype.slice.call(b, 2));
        c = b.length;
        for (a = 0; a < c; a++)
            d = e(d, b[a]);
        return d
    }
    function G(a, b) {
        return parseInt(a, b || 10)
    }
    function Ba(a) {
        return typeof a === "string"
    }
    function da(a) {
        return a && typeof a === "object"
    }
    function Ga(a) {
        return Object.prototype.toString.call(a) === "[object Array]"
    }
    function qa(a) {
        return typeof a === "number"
    }
    function Ca(a) {
        return V.log(a) / V.LN10
    }
    function ia(a) {
        return V.pow(10, a)
    }
    function ja(a, b) {
        for (var c = a.length; c--; )
            if (a[c] === b) {
                a.splice(c, 1);
                break
            }
    }
    function q(a) {
        return a !== x && a !== null
    }
    function K(a, b, c) {
        var d, e;
        if (Ba(b))
            q(c) ? a.setAttribute(b, c) : a && a.getAttribute && (e = a.getAttribute(b));
        else if (q(b) && da(b))
            for (d in b)
                a.setAttribute(d, b[d]);
        return e
    }
    function ra(a) {
        return Ga(a) ? a : [a]
    }
    function M(a, b) {
        if (sa && !ca && b && b.opacity !== x)
            b.filter = "alpha(opacity=" + b.opacity * 100 + ")";
        t(a.style, b)
    }
    function $(a, b, c, d, e) {
        a = C.createElement(a);
        b && t(a, b);
        e && M(a, {
            padding: 0,
            border: P,
            margin: 0
        });
        c && M(a, c);
        d && d.appendChild(a);
        return a
    }
    function ka(a, b) {
        var c = function() {
            return x
        };
        c.prototype = new a;
        t(c.prototype, b);
        return c
    }
    function Ha(a, b) {
        return Array((b || 2) + 1 - String(a).length).join(0) + a
    }
    function Wa(a) {
        return (db && db(a) || nb || 0) * 6E4
    }
    function Ia(a, b) {
        for (var c = "{", d = !1, e, f, g, h, i, j = []; (c = a.indexOf(c)) !== -1; ) {
            e = a.slice(0, c);
            if (d) {
                f = e.split(":");
                g = f.shift().split(".");
                i = g.length;
                e = b;
                for (h = 0; h < i; h++)
                    e = e[g[h]];
                if (f.length)
                    f = f.join(":"),
                    g = /\.([0-9])/,
                    h = S.lang,
                    i = void 0,
                    /f$/.test(f) ? (i = (i = f.match(g)) ? i[1] : -1,
                    e !== null && (e = B.numberFormat(e, i, h.decimalPoint, f.indexOf(",") > -1 ? h.thousandsSep : ""))) : e = Na(f, e)
            }
            j.push(e);
            a = a.slice(c + 1);
            c = (d = !d) ? "}" : "{"
        }
        j.push(a);
        return j.join("")
    }
    function ob(a) {
        return V.pow(10, T(V.log(a) / V.LN10))
    }
    function pb(a, b, c, d, e) {
        var f, g = a, c = p(c, 1);
        f = a / c;
        b || (b = [1, 2, 2.5, 5, 10],
        d === !1 && (c === 1 ? b = [1, 2, 5, 10] : c <= 0.1 && (b = [1 / c])));
        for (d = 0; d < b.length; d++)
            if (g = b[d],
            e && g * c >= a || !e && f <= (b[d] + (b[d + 1] || b[d])) / 2)
                break;
        g *= c;
        return g
    }
    function qb(a, b) {
        var c = a.length, d, e;
        for (e = 0; e < c; e++)
            a[e].ss_i = e;
        a.sort(function(a, c) {
            d = b(a, c);
            return d === 0 ? a.ss_i - c.ss_i : d
        });
        for (e = 0; e < c; e++)
            delete a[e].ss_i
    }
    function Oa(a) {
        for (var b = a.length, c = a[0]; b--; )
            a[b] < c && (c = a[b]);
        return c
    }
    function Da(a) {
        for (var b = a.length, c = a[0]; b--; )
            a[b] > c && (c = a[b]);
        return c
    }
    function Pa(a, b) {
        for (var c in a)
            a[c] && a[c] !== b && a[c].destroy && a[c].destroy(),
            delete a[c]
    }
    function Qa(a) {
        eb || (eb = $(Ja));
        a && eb.appendChild(a);
        eb.innerHTML = ""
    }
    function la(a, b) {
        var c = "Highcharts error #" + a + ": www.highcharts.com/errors/" + a;
        if (b)
            throw c;
        L.console && console.log(c)
    }
    function ea(a, b) {
        return parseFloat(a.toPrecision(b || 14))
    }
    function Ra(a, b) {
        b.renderer.globalAnimation = p(a, b.animation)
    }
    function Cb() {
        var a = S.global
          , b = a.useUTC
          , c = b ? "getUTC" : "get"
          , d = b ? "setUTC" : "set";
        ya = a.Date || window.Date;
        nb = b && a.timezoneOffset;
        db = b && a.getTimezoneOffset;
        fb = function(a, c, d, h, i, j) {
            var k;
            b ? (k = ya.UTC.apply(0, arguments),
            k += Wa(k)) : k = (new ya(a,c,p(d, 1),p(h, 0),p(i, 0),p(j, 0))).getTime();
            return k
        }
        ;
        rb = c + "Minutes";
        sb = c + "Hours";
        tb = c + "Day";
        Xa = c + "Date";
        Ya = c + "Month";
        Za = c + "FullYear";
        Db = d + "Milliseconds";
        Eb = d + "Seconds";
        Fb = d + "Minutes";
        Gb = d + "Hours";
        ub = d + "Date";
        vb = d + "Month";
        wb = d + "FullYear"
    }
    function Q() {}
    function Sa(a, b, c, d) {
        this.axis = a;
        this.pos = b;
        this.type = c || "";
        this.isNew = !0;
        !c && !d && this.addLabel()
    }
    function Hb(a, b, c, d, e) {
        var f = a.chart.inverted;
        this.axis = a;
        this.isNegative = c;
        this.options = b;
        this.x = d;
        this.total = null;
        this.points = {};
        this.stack = e;
        this.alignOptions = {
            align: b.align || (f ? c ? "left" : "right" : "center"),
            verticalAlign: b.verticalAlign || (f ? "middle" : c ? "bottom" : "top"),
            y: p(b.y, f ? 4 : c ? 14 : -6),
            x: p(b.x, f ? c ? -6 : 6 : 0)
        };
        this.textAlign = b.textAlign || (f ? c ? "right" : "left" : "center")
    }
    var x, C = document, L = window, V = Math, w = V.round, T = V.floor, ta = V.ceil, s = V.max, z = V.min, O = V.abs, W = V.cos, aa = V.sin, ma = V.PI, ga = ma * 2 / 360, za = navigator.userAgent, Ib = L.opera, sa = /(msie|trident|edge)/i.test(za) && !Ib, gb = C.documentMode === 8, hb = !sa && /AppleWebKit/.test(za), Ka = /Firefox/.test(za), Jb = /(Mobile|Android|Windows Phone)/.test(za), Ea = "http://www.w3.org/2000/svg", ca = !!C.createElementNS && !!C.createElementNS(Ea, "svg").createSVGRect, Nb = Ka && parseInt(za.split("Firefox/")[1], 10) < 4, fa = !ca && !sa && !!C.createElement("canvas").getContext, $a, ab, Kb = {}, xb = 0, eb, S, Na, yb, F, ua = function() {
        return x
    }, X = [], bb = 0, Ja = "div", P = "none", Ob = /^[0-9]+$/, ib = ["plotTop", "marginRight", "marginBottom", "plotLeft"], Pb = "stroke-width", ya, fb, nb, db, rb, sb, tb, Xa, Ya, Za, Db, Eb, Fb, Gb, ub, vb, wb, N = {}, B;
    B = L.Highcharts = L.Highcharts ? la(16, !0) : {};
    B.seriesTypes = N;
    var t = B.extend = function(a, b) {
        var c;
        a || (a = {});
        for (c in b)
            a[c] = b[c];
        return a
    }
      , p = B.pick = function() {
        var a = arguments, b, c, d = a.length;
        for (b = 0; b < d; b++)
            if (c = a[b],
            c !== x && c !== null)
                return c
    }
      , Ta = B.wrap = function(a, b, c) {
        var d = a[b];
        a[b] = function() {
            var a = Array.prototype.slice.call(arguments);
            a.unshift(d);
            return c.apply(this, a)
        }
    }
    ;
    Na = function(a, b, c) {
        if (!q(b) || isNaN(b))
            return S.lang.invalidDate || "";
        var a = p(a, "%Y-%m-%d %H:%M:%S"), d = new ya(b - Wa(b)), e, f = d[sb](), g = d[tb](), h = d[Xa](), i = d[Ya](), j = d[Za](), k = S.lang, m = k.weekdays, d = t({
            a: m[g].substr(0, 3),
            A: m[g],
            d: Ha(h),
            e: h,
            w: g,
            b: k.shortMonths[i],
            B: k.months[i],
            m: Ha(i + 1),
            y: j.toString().substr(2, 2),
            Y: j,
            H: Ha(f),
            k: f,
            I: Ha(f % 12 || 12),
            l: f % 12 || 12,
            M: Ha(d[rb]()),
            p: f < 12 ? "AM" : "PM",
            P: f < 12 ? "am" : "pm",
            S: Ha(d.getSeconds()),
            L: Ha(w(b % 1E3), 3)
        }, B.dateFormats);
        for (e in d)
            for (; a.indexOf("%" + e) !== -1; )
                a = a.replace("%" + e, typeof d[e] === "function" ? d[e](b) : d[e]);
        return c ? a.substr(0, 1).toUpperCase() + a.substr(1) : a
    }
    ;
    F = {
        millisecond: 1,
        second: 1E3,
        minute: 6E4,
        hour: 36E5,
        day: 864E5,
        week: 6048E5,
        month: 24192E5,
        year: 314496E5
    };
    B.numberFormat = function(a, b, c, d) {
        var e = S.lang
          , a = +a || 0
          , f = b === -1 ? z((a.toString().split(".")[1] || "").length, 20) : isNaN(b = O(b)) ? 2 : b
          , b = c === void 0 ? e.decimalPoint : c
          , d = d === void 0 ? e.thousandsSep : d
          , e = a < 0 ? "-" : ""
          , c = String(G(a = O(a).toFixed(f)))
          , g = c.length > 3 ? c.length % 3 : 0;
        return e + (g ? c.substr(0, g) + d : "") + c.substr(g).replace(/(\d{3})(?=\d)/g, "$1" + d) + (f ? b + O(a - c).toFixed(f).slice(2) : "")
    }
    ;
    yb = {
        init: function(a, b, c) {
            var b = b || "", d = a.shift, e = b.indexOf("C") > -1, f = e ? 7 : 3, g, b = b.split(" "), c = [].concat(c), h, i, j = function(a) {
                for (g = a.length; g--; )
                    a[g] === "M" && a.splice(g + 1, 0, a[g + 1], a[g + 2], a[g + 1], a[g + 2])
            };
            e && (j(b),
            j(c));
            a.isArea && (h = b.splice(b.length - 6, 6),
            i = c.splice(c.length - 6, 6));
            if (d <= c.length / f && b.length === c.length)
                for (; d--; )
                    c = [].concat(c).splice(0, f).concat(c);
            a.shift = 0;
            if (b.length)
                for (a = c.length; b.length < a; )
                    d = [].concat(b).splice(b.length - f, f),
                    e && (d[f - 6] = d[f - 2],
                    d[f - 5] = d[f - 1]),
                    b = b.concat(d);
            h && (b = b.concat(h),
            c = c.concat(i));
            return [b, c]
        },
        step: function(a, b, c, d) {
            var e = []
              , f = a.length;
            if (c === 1)
                e = d;
            else if (f === b.length && c < 1)
                for (; f--; )
                    d = parseFloat(a[f]),
                    e[f] = isNaN(d) ? a[f] : c * parseFloat(b[f] - d) + d;
            else
                e = b;
            return e
        }
    };
    (function(a) {
        L.HighchartsAdapter = L.HighchartsAdapter || a && {
            init: function(b) {
                var c = a.fx;
                a.extend(a.easing, {
                    easeOutQuad: function(a, b, c, g, h) {
                        return -g * (b /= h) * (b - 2) + c
                    }
                });
                a.each(["cur", "_default", "width", "height", "opacity"], function(b, e) {
                    var f = c.step, g;
                    e === "cur" ? f = c.prototype : e === "_default" && a.Tween && (f = a.Tween.propHooks[e],
                    e = "set");
                    (g = f[e]) && (f[e] = function(a) {
                        var c, a = b ? a : this;
                        if (a.prop !== "align")
                            return c = a.elem,
                            c.attr ? c.attr(a.prop, e === "cur" ? x : a.now) : g.apply(this, arguments)
                    }
                    )
                });
                Ta(a.cssHooks.opacity, "get", function(a, b, c) {
                    return b.attr ? b.opacity || 0 : a.call(this, b, c)
                });
                this.addAnimSetter("d", function(a) {
                    var c = a.elem, f;
                    if (!a.started)
                        f = b.init(c, c.d, c.toD),
                        a.start = f[0],
                        a.end = f[1],
                        a.started = !0;
                    c.attr("d", b.step(a.start, a.end, a.pos, c.toD))
                });
                this.each = Array.prototype.forEach ? function(a, b) {
                    return Array.prototype.forEach.call(a, b)
                }
                : function(a, b) {
                    var c, g = a.length;
                    for (c = 0; c < g; c++)
                        if (b.call(a[c], a[c], c, a) === !1)
                            return c
                }
                ;
                a.fn.highcharts = function() {
                    var a = "Chart", b = arguments, c, g;
                    if (this[0]) {
                        Ba(b[0]) && (a = b[0],
                        b = Array.prototype.slice.call(b, 1));
                        c = b[0];
                        if (c !== x)
                            c.chart = c.chart || {},
                            c.chart.renderTo = this[0],
                            new B[a](c,b[1]),
                            g = this;
                        c === x && (g = X[K(this[0], "data-highcharts-chart")])
                    }
                    return g
                }
            },
            addAnimSetter: function(b, c) {
                a.Tween ? a.Tween.propHooks[b] = {
                    set: c
                } : a.fx.step[b] = c
            },
            getScript: a.getScript,
            inArray: a.inArray,
            adapterRun: function(b, c) {
                return a(b)[c]()
            },
            grep: a.grep,
            map: function(a, c) {
                for (var d = [], e = 0, f = a.length; e < f; e++)
                    d[e] = c.call(a[e], a[e], e, a);
                return d
            },
            offset: function(b) {
                return a(b).offset()
            },
            addEvent: function(b, c, d) {
                a(b).bind(c, d)
            },
            removeEvent: function(b, c, d) {
                var e = C.removeEventListener ? "removeEventListener" : "detachEvent";
                C[e] && b && !b[e] && (b[e] = function() {}
                );
                a(b).unbind(c, d)
            },
            fireEvent: function(b, c, d, e) {
                var f = a.Event(c), g = "detached" + c, h;
                !sa && d && (delete d.layerX,
                delete d.layerY,
                delete d.returnValue);
                t(f, d);
                b[c] && (b[g] = b[c],
                b[c] = null);
                a.each(["preventDefault", "stopPropagation"], function(a, b) {
                    var c = f[b];
                    f[b] = function() {
                        try {
                            c.call(f)
                        } catch (a) {
                            b === "preventDefault" && (h = !0)
                        }
                    }
                });
                a(b).trigger(f);
                b[g] && (b[c] = b[g],
                b[g] = null);
                e && !f.isDefaultPrevented() && !h && e(f)
            },
            washMouseEvent: function(a) {
                var c = a.originalEvent || a;
                if (c.pageX === x)
                    c.pageX = a.pageX,
                    c.pageY = a.pageY;
                return c
            },
            animate: function(b, c, d) {
                var e = a(b);
                if (!b.style)
                    b.style = {};
                if (c.d)
                    b.toD = c.d,
                    c.d = 1;
                e.stop();
                c.opacity !== x && b.attr && (c.opacity += "px");
                b.hasAnim = 1;
                e.animate(c, d)
            },
            stop: function(b) {
                b.hasAnim && a(b).stop()
            }
        }
    })(L.jQuery);
    var U = L.HighchartsAdapter
      , E = U || {};
    U && U.init.call(U, yb);
    var jb = E.adapterRun
      , Qb = E.getScript
      , La = E.inArray
      , o = B.each = E.each
      , kb = E.grep
      , Rb = E.offset
      , Ua = E.map
      , I = E.addEvent
      , Y = E.removeEvent
      , J = E.fireEvent
      , Sb = E.washMouseEvent
      , lb = E.animate
      , cb = E.stop;
    S = {
        colors: "#7cb5ec,#434348,#90ed7d,#f7a35c,#8085e9,#f15c80,#e4d354,#2b908f,#f45b5b,#91e8e1".split(","),
        symbols: ["circle", "diamond", "square", "triangle", "triangle-down"],
        lang: {
            loading: "Loading...",
            months: "January,February,March,April,May,June,July,August,September,October,November,December".split(","),
            shortMonths: "Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec".split(","),
            weekdays: "Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday".split(","),
            decimalPoint: ".",
            numericSymbols: "k,M,G,T,P,E".split(","),
            resetZoom: "Reset zoom",
            resetZoomTitle: "Reset zoom level 1:1",
            thousandsSep: " "
        },
        global: {
            useUTC: !0,
            canvasToolsURL: "http://code.highcharts.com/4.1.9/modules/canvas-tools.js",
            VMLRadialGradientURL: "http://code.highcharts.com/4.1.9/gfx/vml-radial-gradient.png"
        },
        chart: {
            borderColor: "#4572A7",
            borderRadius: 0,
            defaultSeriesType: "line",
            ignoreHiddenSeries: !0,
            spacing: [10, 10, 15, 10],
            backgroundColor: "#FFFFFF",
            plotBorderColor: "#C0C0C0",
            resetZoomButton: {
                theme: {
                    zIndex: 20
                },
                position: {
                    align: "right",
                    x: -10,
                    y: 10
                }
            }
        },
        title: {
            text: "Chart title",
            align: "center",
            margin: 15,
            style: {
                color: "#333333",
                fontSize: "18px"
            }
        },
        subtitle: {
            text: "",
            align: "center",
            style: {
                color: "#555555"
            }
        },
        plotOptions: {
            line: {
                allowPointSelect: !1,
                showCheckbox: !1,
                animation: {
                    duration: 1E3
                },
                events: {},
                lineWidth: 2,
                marker: {
                    lineWidth: 0,
                    radius: 4,
                    lineColor: "#FFFFFF",
                    states: {
                        hover: {
                            enabled: !0,
                            lineWidthPlus: 1,
                            radiusPlus: 2
                        },
                        select: {
                            fillColor: "#FFFFFF",
                            lineColor: "#000000",
                            lineWidth: 2
                        }
                    }
                },
                point: {
                    events: {}
                },
                dataLabels: {
                    align: "center",
                    formatter: function() {
                        return this.y === null ? "" : B.numberFormat(this.y, -1)
                    },
                    style: {
                        color: "contrast",
                        fontSize: "11px",
                        fontWeight: "bold",
                        textShadow: "0 0 6px contrast, 0 0 3px contrast"
                    },
                    verticalAlign: "bottom",
                    x: 0,
                    y: 0,
                    padding: 5
                },
                cropThreshold: 300,
                pointRange: 0,
                softThreshold: !0,
                states: {
                    hover: {
                        lineWidthPlus: 1,
                        marker: {},
                        halo: {
                            size: 10,
                            opacity: 0.25
                        }
                    },
                    select: {
                        marker: {}
                    }
                },
                stickyTracking: !0,
                turboThreshold: 1E3
            }
        },
        labels: {
            style: {
                position: "absolute",
                color: "#3E576F"
            }
        },
        legend: {
            enabled: !0,
            align: "center",
            layout: "horizontal",
            labelFormatter: function() {
                return this.name
            },
            borderColor: "#909090",
            borderRadius: 0,
            navigation: {
                activeColor: "#274b6d",
                inactiveColor: "#CCC"
            },
            shadow: !1,
            itemStyle: {
                color: "#333333",
                fontSize: "12px",
                fontWeight: "bold"
            },
            itemHoverStyle: {
                color: "#000"
            },
            itemHiddenStyle: {
                color: "#CCC"
            },
            itemCheckboxStyle: {
                position: "absolute",
                width: "13px",
                height: "13px"
            },
            symbolPadding: 5,
            verticalAlign: "bottom",
            x: 0,
            y: 0,
            title: {
                style: {
                    fontWeight: "bold"
                }
            }
        },
        loading: {
            labelStyle: {
                fontWeight: "bold",
                position: "relative",
                top: "45%"
            },
            style: {
                position: "absolute",
                backgroundColor: "white",
                opacity: 0.5,
                textAlign: "center"
            }
        },
        tooltip: {
            enabled: !0,
            animation: ca,
            backgroundColor: "rgba(249, 249, 249, .85)",
            borderWidth: 1,
            borderRadius: 3,
            dateTimeLabelFormats: {
                millisecond: "%A, %b %e, %H:%M:%S.%L",
                second: "%A, %b %e, %H:%M:%S",
                minute: "%A, %b %e, %H:%M",
                hour: "%A, %b %e, %H:%M",
                day: "%A, %b %e, %Y",
                week: "Week from %A, %b %e, %Y",
                month: "%B %Y",
                year: "%Y"
            },
            footerFormat: "",
            headerFormat: '<span style="font-size: 10px">{point.key}</span><br/>',
            pointFormat: '<span style="color:{point.color}">\u25cf</span> {series.name}: <b>{point.y}</b><br/>',
            shadow: !0,
            snap: Jb ? 25 : 10,
            style: {
                color: "#333333",
                cursor: "default",
                fontSize: "12px",
                padding: "8px",
                pointerEvents: "none",
                whiteSpace: "nowrap"
            }
        },
        credits: {
            enabled: !0,
            text: "Highcharts.com",
            href: "http://www.highcharts.com",
            position: {
                align: "right",
                x: -10,
                verticalAlign: "bottom",
                y: -5
            },
            style: {
                cursor: "pointer",
                color: "#909090",
                fontSize: "9px"
            }
        }
    };
    var ba = S.plotOptions
      , U = ba.line;
    Cb();
    var Tb = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/
      , Ub = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/
      , Vb = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/
      , na = function(a) {
        var b = [], c, d;
        (function(a) {
            a && a.stops ? d = Ua(a.stops, function(a) {
                return na(a[1])
            }) : (c = Tb.exec(a)) ? b = [G(c[1]), G(c[2]), G(c[3]), parseFloat(c[4], 10)] : (c = Ub.exec(a)) ? b = [G(c[1], 16), G(c[2], 16), G(c[3], 16), 1] : (c = Vb.exec(a)) && (b = [G(c[1]), G(c[2]), G(c[3]), 1])
        })(a);
        return {
            get: function(c) {
                var f;
                d ? (f = D(a),
                f.stops = [].concat(f.stops),
                o(d, function(a, b) {
                    f.stops[b] = [f.stops[b][0], a.get(c)]
                })) : f = b && !isNaN(b[0]) ? c === "rgb" ? "rgb(" + b[0] + "," + b[1] + "," + b[2] + ")" : c === "a" ? b[3] : "rgba(" + b.join(",") + ")" : a;
                return f
            },
            brighten: function(a) {
                if (d)
                    o(d, function(b) {
                        b.brighten(a)
                    });
                else if (qa(a) && a !== 0) {
                    var c;
                    for (c = 0; c < 3; c++)
                        b[c] += G(a * 255),
                        b[c] < 0 && (b[c] = 0),
                        b[c] > 255 && (b[c] = 255)
                }
                return this
            },
            rgba: b,
            setOpacity: function(a) {
                b[3] = a;
                return this
            },
            raw: a
        }
    };
    Q.prototype = {
        opacity: 1,
        textProps: "fontSize,fontWeight,fontFamily,fontStyle,color,lineHeight,width,textDecoration,textOverflow,textShadow".split(","),
        init: function(a, b) {
            this.element = b === "span" ? $(b) : C.createElementNS(Ea, b);
            this.renderer = a
        },
        animate: function(a, b, c) {
            b = p(b, this.renderer.globalAnimation, !0);
            cb(this);
            if (b) {
                b = D(b, {});
                if (c)
                    b.complete = c;
                lb(this, a, b)
            } else
                this.attr(a, null, c);
            return this
        },
        colorGradient: function(a, b, c) {
            var d = this.renderer, e, f, g, h, i, j, k, m, n, l, u, r = [];
            a.linearGradient ? f = "linearGradient" : a.radialGradient && (f = "radialGradient");
            if (f) {
                g = a[f];
                i = d.gradients;
                k = a.stops;
                l = c.radialReference;
                Ga(g) && (a[f] = g = {
                    x1: g[0],
                    y1: g[1],
                    x2: g[2],
                    y2: g[3],
                    gradientUnits: "userSpaceOnUse"
                });
                f === "radialGradient" && l && !q(g.gradientUnits) && (h = g,
                g = D(g, d.getRadialAttr(l, h), {
                    gradientUnits: "userSpaceOnUse"
                }));
                for (u in g)
                    u !== "id" && r.push(u, g[u]);
                for (u in k)
                    r.push(k[u]);
                r = r.join(",");
                i[r] ? a = i[r].attr("id") : (g.id = a = "highcharts-" + xb++,
                i[r] = j = d.createElement(f).attr(g).add(d.defs),
                j.radAttr = h,
                j.stops = [],
                o(k, function(a) {
                    a[1].indexOf("rgba") === 0 ? (e = na(a[1]),
                    m = e.get("rgb"),
                    n = e.get("a")) : (m = a[1],
                    n = 1);
                    a = d.createElement("stop").attr({
                        offset: a[0],
                        "stop-color": m,
                        "stop-opacity": n
                    }).add(j);
                    j.stops.push(a)
                }));
                c.setAttribute(b, "url(" + d.url + "#" + a + ")");
                c.gradient = r
            }
        },
        applyTextShadow: function(a) {
            var b = this.element, c, d = a.indexOf("contrast") !== -1, e = {}, f = this.renderer.forExport, g = f || b.style.textShadow !== x && !sa;
            if (d)
                e.textShadow = a = a.replace(/contrast/g, this.renderer.getContrast(b.style.fill));
            if (hb || f)
                e.textRendering = "geometricPrecision";
            g ? this.css(e) : (this.fakeTS = !0,
            this.ySetter = this.xSetter,
            c = [].slice.call(b.getElementsByTagName("tspan")),
            o(a.split(/\s?,\s?/g), function(a) {
                var d = b.firstChild, e, f, a = a.split(" ");
                e = a[a.length - 1];
                (f = a[a.length - 2]) && o(c, function(a, c) {
                    var g;
                    c === 0 && (a.setAttribute("x", b.getAttribute("x")),
                    c = b.getAttribute("y"),
                    a.setAttribute("y", c || 0),
                    c === null && b.setAttribute("y", 0));
                    g = a.cloneNode(1);
                    K(g, {
                        "class": "highcharts-text-shadow",
                        fill: e,
                        stroke: e,
                        "stroke-opacity": 1 / s(G(f), 3),
                        "stroke-width": f,
                        "stroke-linejoin": "round"
                    });
                    b.insertBefore(g, d)
                })
            }))
        },
        attr: function(a, b, c) {
            var d, e = this.element, f, g = this, h;
            typeof a === "string" && b !== x && (d = a,
            a = {},
            a[d] = b);
            if (typeof a === "string")
                g = (this[a + "Getter"] || this._defaultGetter).call(this, a, e);
            else {
                for (d in a) {
                    b = a[d];
                    h = !1;
                    this.symbolName && /^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/.test(d) && (f || (this.symbolAttr(a),
                    f = !0),
                    h = !0);
                    if (this.rotation && (d === "x" || d === "y"))
                        this.doTransform = !0;
                    h || (this[d + "Setter"] || this._defaultSetter).call(this, b, d, e);
                    this.shadows && /^(width|height|visibility|x|y|d|transform|cx|cy|r)$/.test(d) && this.updateShadows(d, b)
                }
                if (this.doTransform)
                    this.updateTransform(),
                    this.doTransform = !1
            }
            c && c();
            return g
        },
        updateShadows: function(a, b) {
            for (var c = this.shadows, d = c.length; d--; )
                c[d].setAttribute(a, a === "height" ? s(b - (c[d].cutHeight || 0), 0) : a === "d" ? this.d : b)
        },
        addClass: function(a) {
            var b = this.element
              , c = K(b, "class") || "";
            c.indexOf(a) === -1 && K(b, "class", c + " " + a);
            return this
        },
        symbolAttr: function(a) {
            var b = this;
            o("x,y,r,start,end,width,height,innerR,anchorX,anchorY".split(","), function(c) {
                b[c] = p(a[c], b[c])
            });
            b.attr({
                d: b.renderer.symbols[b.symbolName](b.x, b.y, b.width, b.height, b)
            })
        },
        clip: function(a) {
            return this.attr("clip-path", a ? "url(" + this.renderer.url + "#" + a.id + ")" : P)
        },
        crisp: function(a) {
            var b, c = {}, d, e = a.strokeWidth || this.strokeWidth || 0;
            d = w(e) % 2 / 2;
            a.x = T(a.x || this.x || 0) + d;
            a.y = T(a.y || this.y || 0) + d;
            a.width = T((a.width || this.width || 0) - 2 * d);
            a.height = T((a.height || this.height || 0) - 2 * d);
            a.strokeWidth = e;
            for (b in a)
                this[b] !== a[b] && (this[b] = c[b] = a[b]);
            return c
        },
        css: function(a) {
            var b = this.styles, c = {}, d = this.element, e, f, g = "";
            e = !b;
            if (a && a.color)
                a.fill = a.color;
            if (b)
                for (f in a)
                    a[f] !== b[f] && (c[f] = a[f],
                    e = !0);
            if (e) {
                e = this.textWidth = a && a.width && d.nodeName.toLowerCase() === "text" && G(a.width) || this.textWidth;
                b && (a = t(b, c));
                this.styles = a;
                e && (fa || !ca && this.renderer.forExport) && delete a.width;
                if (sa && !ca)
                    M(this.element, a);
                else {
                    b = function(a, b) {
                        return "-" + b.toLowerCase()
                    }
                    ;
                    for (f in a)
                        g += f.replace(/([A-Z])/g, b) + ":" + a[f] + ";";
                    K(d, "style", g)
                }
                e && this.added && this.renderer.buildText(this)
            }
            return this
        },
        on: function(a, b) {
            var c = this
              , d = c.element;
            ab && a === "click" ? (d.ontouchstart = function(a) {
                c.touchEventFired = ya.now();
                a.preventDefault();
                b.call(d, a)
            }
            ,
            d.onclick = function(a) {
                (za.indexOf("Android") === -1 || ya.now() - (c.touchEventFired || 0) > 1100) && b.call(d, a)
            }
            ) : d["on" + a] = b;
            return this
        },
        setRadialReference: function(a) {
            var b = this.renderer.gradients[this.element.gradient];
            this.element.radialReference = a;
            b && b.radAttr && b.animate(this.renderer.getRadialAttr(a, b.radAttr));
            return this
        },
        translate: function(a, b) {
            return this.attr({
                translateX: a,
                translateY: b
            })
        },
        invert: function() {
            this.inverted = !0;
            this.updateTransform();
            return this
        },
        updateTransform: function() {
            var a = this.translateX || 0
              , b = this.translateY || 0
              , c = this.scaleX
              , d = this.scaleY
              , e = this.inverted
              , f = this.rotation
              , g = this.element;
            e && (a += this.attr("width"),
            b += this.attr("height"));
            a = ["translate(" + a + "," + b + ")"];
            e ? a.push("rotate(90) scale(-1,1)") : f && a.push("rotate(" + f + " " + (g.getAttribute("x") || 0) + " " + (g.getAttribute("y") || 0) + ")");
            (q(c) || q(d)) && a.push("scale(" + p(c, 1) + " " + p(d, 1) + ")");
            a.length && g.setAttribute("transform", a.join(" "))
        },
        toFront: function() {
            var a = this.element;
            a.parentNode.appendChild(a);
            return this
        },
        align: function(a, b, c) {
            var d, e, f, g, h = {};
            e = this.renderer;
            f = e.alignedObjects;
            if (a) {
                if (this.alignOptions = a,
                this.alignByTranslate = b,
                !c || Ba(c))
                    this.alignTo = d = c || "renderer",
                    ja(f, this),
                    f.push(this),
                    c = null
            } else
                a = this.alignOptions,
                b = this.alignByTranslate,
                d = this.alignTo;
            c = p(c, e[d], e);
            d = a.align;
            e = a.verticalAlign;
            f = (c.x || 0) + (a.x || 0);
            g = (c.y || 0) + (a.y || 0);
            if (d === "right" || d === "center")
                f += (c.width - (a.width || 0)) / {
                    right: 1,
                    center: 2
                }[d];
            h[b ? "translateX" : "x"] = w(f);
            if (e === "bottom" || e === "middle")
                g += (c.height - (a.height || 0)) / ({
                    bottom: 1,
                    middle: 2
                }[e] || 1);
            h[b ? "translateY" : "y"] = w(g);
            this[this.placed ? "animate" : "attr"](h);
            this.placed = !0;
            this.alignAttr = h;
            return this
        },
        getBBox: function(a) {
            var b, c = this.renderer, d, e = this.rotation, f = this.element, g = this.styles, h = e * ga;
            d = this.textStr;
            var i, j = f.style, k, m;
            d !== x && (m = ["", e || 0, g && g.fontSize, f.style.width].join(","),
            m = d === "" || Ob.test(d) ? "num:" + d.toString().length + m : d + m);
            m && !a && (b = c.cache[m]);
            if (!b) {
                if (f.namespaceURI === Ea || c.forExport) {
                    try {
                        k = this.fakeTS && function(a) {
                            o(f.querySelectorAll(".highcharts-text-shadow"), function(b) {
                                b.style.display = a
                            })
                        }
                        ,
                        Ka && j.textShadow ? (i = j.textShadow,
                        j.textShadow = "") : k && k(P),
                        b = f.getBBox ? t({}, f.getBBox()) : {
                            width: f.offsetWidth,
                            height: f.offsetHeight
                        },
                        i ? j.textShadow = i : k && k("")
                    } catch (n) {}
                    if (!b || b.width < 0)
                        b = {
                            width: 0,
                            height: 0
                        }
                } else
                    b = this.htmlGetBBox();
                if (c.isSVG) {
                    a = b.width;
                    d = b.height;
                    if (sa && g && g.fontSize === "11px" && d.toPrecision(3) === "16.9")
                        b.height = d = 14;
                    if (e)
                        b.width = O(d * aa(h)) + O(a * W(h)),
                        b.height = O(d * W(h)) + O(a * aa(h))
                }
                m && (c.cache[m] = b)
            }
            return b
        },
        show: function(a) {
            return this.attr({
                visibility: a ? "inherit" : "visible"
            })
        },
        hide: function() {
            return this.attr({
                visibility: "hidden"
            })
        },
        fadeOut: function(a) {
            var b = this;
            b.animate({
                opacity: 0
            }, {
                duration: a || 150,
                complete: function() {
                    b.attr({
                        y: -9999
                    })
                }
            })
        },
        add: function(a) {
            var b = this.renderer, c = this.element, d;
            if (a)
                this.parentGroup = a;
            this.parentInverted = a && a.inverted;
            this.textStr !== void 0 && b.buildText(this);
            this.added = !0;
            if (!a || a.handleZ || this.zIndex)
                d = this.zIndexSetter();
            d || (a ? a.element : b.box).appendChild(c);
            if (this.onAdd)
                this.onAdd();
            return this
        },
        safeRemoveChild: function(a) {
            var b = a.parentNode;
            b && b.removeChild(a)
        },
        destroy: function() {
            var a = this, b = a.element || {}, c = a.shadows, d = a.renderer.isSVG && b.nodeName === "SPAN" && a.parentGroup, e, f;
            b.onclick = b.onmouseout = b.onmouseover = b.onmousemove = b.point = null;
            cb(a);
            if (a.clipPath)
                a.clipPath = a.clipPath.destroy();
            if (a.stops) {
                for (f = 0; f < a.stops.length; f++)
                    a.stops[f] = a.stops[f].destroy();
                a.stops = null
            }
            a.safeRemoveChild(b);
            for (c && o(c, function(b) {
                a.safeRemoveChild(b)
            }); d && d.div && d.div.childNodes.length === 0; )
                b = d.parentGroup,
                a.safeRemoveChild(d.div),
                delete d.div,
                d = b;
            a.alignTo && ja(a.renderer.alignedObjects, a);
            for (e in a)
                delete a[e];
            return null
        },
        shadow: function(a, b, c) {
            var d = [], e, f, g = this.element, h, i, j, k;
            if (a) {
                i = p(a.width, 3);
                j = (a.opacity || 0.15) / i;
                k = this.parentInverted ? "(-1,-1)" : "(" + p(a.offsetX, 1) + ", " + p(a.offsetY, 1) + ")";
                for (e = 1; e <= i; e++) {
                    f = g.cloneNode(0);
                    h = i * 2 + 1 - 2 * e;
                    K(f, {
                        isShadow: "true",
                        stroke: a.color || "black",
                        "stroke-opacity": j * e,
                        "stroke-width": h,
                        transform: "translate" + k,
                        fill: P
                    });
                    if (c)
                        K(f, "height", s(K(f, "height") - h, 0)),
                        f.cutHeight = h;
                    b ? b.element.appendChild(f) : g.parentNode.insertBefore(f, g);
                    d.push(f)
                }
                this.shadows = d
            }
            return this
        },
        xGetter: function(a) {
            this.element.nodeName === "circle" && (a = {
                x: "cx",
                y: "cy"
            }[a] || a);
            return this._defaultGetter(a)
        },
        _defaultGetter: function(a) {
            a = p(this[a], this.element ? this.element.getAttribute(a) : null, 0);
            /^[\-0-9\.]+$/.test(a) && (a = parseFloat(a));
            return a
        },
        dSetter: function(a, b, c) {
            a && a.join && (a = a.join(" "));
            /(NaN| {2}|^$)/.test(a) && (a = "M 0 0");
            c.setAttribute(b, a);
            this[b] = a
        },
        dashstyleSetter: function(a) {
            var b;
            if (a = a && a.toLowerCase()) {
                a = a.replace("shortdashdotdot", "3,1,1,1,1,1,").replace("shortdashdot", "3,1,1,1").replace("shortdot", "1,1,").replace("shortdash", "3,1,").replace("longdash", "8,3,").replace(/dot/g, "1,3,").replace("dash", "4,3,").replace(/,$/, "").split(",");
                for (b = a.length; b--; )
                    a[b] = G(a[b]) * this["stroke-width"];
                a = a.join(",").replace("NaN", "none");
                this.element.setAttribute("stroke-dasharray", a)
            }
        },
        alignSetter: function(a) {
            this.element.setAttribute("text-anchor", {
                left: "start",
                center: "middle",
                right: "end"
            }[a])
        },
        opacitySetter: function(a, b, c) {
            this[b] = a;
            c.setAttribute(b, a)
        },
        titleSetter: function(a) {
            var b = this.element.getElementsByTagName("title")[0];
            b || (b = C.createElementNS(Ea, "title"),
            this.element.appendChild(b));
            b.appendChild(C.createTextNode(String(p(a), "").replace(/<[^>]*>/g, "")))
        },
        textSetter: function(a) {
            if (a !== this.textStr)
                delete this.bBox,
                this.textStr = a,
                this.added && this.renderer.buildText(this)
        },
        fillSetter: function(a, b, c) {
            typeof a === "string" ? c.setAttribute(b, a) : a && this.colorGradient(a, b, c)
        },
        visibilitySetter: function(a, b, c) {
            a === "inherit" ? c.removeAttribute(b) : c.setAttribute(b, a)
        },
        zIndexSetter: function(a, b) {
            var c = this.renderer, d = this.parentGroup, c = (d || c).element || c.box, e, f, g = this.element, h;
            e = this.added;
            var i;
            q(a) && (g.setAttribute(b, a),
            a = +a,
            this[b] === a && (e = !1),
            this[b] = a);
            if (e) {
                if ((a = this.zIndex) && d)
                    d.handleZ = !0;
                d = c.childNodes;
                for (i = 0; i < d.length && !h; i++)
                    if (e = d[i],
                    f = K(e, "zIndex"),
                    e !== g && (G(f) > a || !q(a) && q(f)))
                        c.insertBefore(g, e),
                        h = !0;
                h || c.appendChild(g)
            }
            return h
        },
        _defaultSetter: function(a, b, c) {
            c.setAttribute(b, a)
        }
    };
    Q.prototype.yGetter = Q.prototype.xGetter;
    Q.prototype.translateXSetter = Q.prototype.translateYSetter = Q.prototype.rotationSetter = Q.prototype.verticalAlignSetter = Q.prototype.scaleXSetter = Q.prototype.scaleYSetter = function(a, b) {
        this[b] = a;
        this.doTransform = !0
    }
    ;
    Q.prototype["stroke-widthSetter"] = Q.prototype.strokeSetter = function(a, b, c) {
        this[b] = a;
        if (this.stroke && this["stroke-width"])
            this.strokeWidth = this["stroke-width"],
            Q.prototype.fillSetter.call(this, this.stroke, "stroke", c),
            c.setAttribute("stroke-width", this["stroke-width"]),
            this.hasStroke = !0;
        else if (b === "stroke-width" && a === 0 && this.hasStroke)
            c.removeAttribute("stroke"),
            this.hasStroke = !1
    }
    ;
    var Aa = function() {
        this.init.apply(this, arguments)
    };
    Aa.prototype = {
        Element: Q,
        init: function(a, b, c, d, e, f) {
            var g = location, h, d = this.createElement("svg").attr({
                version: "1.1"
            }).css(this.getStyle(d));
            h = d.element;
            a.appendChild(h);
            a.innerHTML.indexOf("xmlns") === -1 && K(h, "xmlns", Ea);
            this.isSVG = !0;
            this.box = h;
            this.boxWrapper = d;
            this.alignedObjects = [];
            this.url = (Ka || hb) && C.getElementsByTagName("base").length ? g.href.replace(/#.*?$/, "").replace(/([\('\)])/g, "\\$1").replace(/ /g, "%20") : "";
            this.createElement("desc").add().element.appendChild(C.createTextNode("Created with Highcharts 4.1.9"));
            this.defs = this.createElement("defs").add();
            this.allowHTML = f;
            this.forExport = e;
            this.gradients = {};
            this.cache = {};
            this.setSize(b, c, !1);
            var i;
            if (Ka && a.getBoundingClientRect)
                this.subPixelFix = b = function() {
                    M(a, {
                        left: 0,
                        top: 0
                    });
                    i = a.getBoundingClientRect();
                    M(a, {
                        left: ta(i.left) - i.left + "px",
                        top: ta(i.top) - i.top + "px"
                    })
                }
                ,
                b(),
                I(L, "resize", b)
        },
        getStyle: function(a) {
            return this.style = t({
                fontFamily: '"Lucida Grande", "Lucida Sans Unicode", Arial, Helvetica, sans-serif',
                fontSize: "12px"
            }, a)
        },
        isHidden: function() {
            return !this.boxWrapper.getBBox().width
        },
        destroy: function() {
            var a = this.defs;
            this.box = null;
            this.boxWrapper = this.boxWrapper.destroy();
            Pa(this.gradients || {});
            this.gradients = null;
            if (a)
                this.defs = a.destroy();
            this.subPixelFix && Y(L, "resize", this.subPixelFix);
            return this.alignedObjects = null
        },
        createElement: function(a) {
            var b = new this.Element;
            b.init(this, a);
            return b
        },
        draw: function() {},
        getRadialAttr: function(a, b) {
            return {
                cx: a[0] - a[2] / 2 + b.cx * a[2],
                cy: a[1] - a[2] / 2 + b.cy * a[2],
                r: b.r * a[2]
            }
        },
        buildText: function(a) {
            for (var b = a.element, c = this, d = c.forExport, e = p(a.textStr, "").toString(), f = e.indexOf("<") !== -1, g = b.childNodes, h, i, j = K(b, "x"), k = a.styles, m = a.textWidth, n = k && k.lineHeight, l = k && k.textShadow, u = k && k.textOverflow === "ellipsis", r = g.length, Z = m && !a.added && this.box, A = function(a) {
                return n ? G(n) : c.fontMetrics(/(px|em)$/.test(a && a.style.fontSize) ? a.style.fontSize : k && k.fontSize || c.style.fontSize || 12, a).h
            }, v = function(a) {
                return a.replace(/&lt;/g, "<").replace(/&gt;/g, ">")
            }; r--; )
                b.removeChild(g[r]);
            !f && !l && !u && e.indexOf(" ") === -1 ? b.appendChild(C.createTextNode(v(e))) : (h = /<.*style="([^"]+)".*>/,
            i = /<.*href="(http[^"]+)".*>/,
            Z && Z.appendChild(b),
            e = f ? e.replace(/<(b|strong)>/g, '<span style="font-weight:bold">').replace(/<(i|em)>/g, '<span style="font-style:italic">').replace(/<a/g, "<span").replace(/<\/(b|strong|i|em|a)>/g, "</span>").split(/<br.*?>/g) : [e],
            e[e.length - 1] === "" && e.pop(),
            o(e, function(e, f) {
                var g, n = 0, e = e.replace(/<span/g, "|||<span").replace(/<\/span>/g, "</span>|||");
                g = e.split("|||");
                o(g, function(e) {
                    if (e !== "" || g.length === 1) {
                        var l = {}, r = C.createElementNS(Ea, "tspan"), p;
                        h.test(e) && (p = e.match(h)[1].replace(/(;| |^)color([ :])/, "$1fill$2"),
                        K(r, "style", p));
                        i.test(e) && !d && (K(r, "onclick", 'location.href="' + e.match(i)[1] + '"'),
                        M(r, {
                            cursor: "pointer"
                        }));
                        e = v(e.replace(/<(.|\n)*?>/g, "") || " ");
                        if (e !== " ") {
                            r.appendChild(C.createTextNode(e));
                            if (n)
                                l.dx = 0;
                            else if (f && j !== null)
                                l.x = j;
                            K(r, l);
                            b.appendChild(r);
                            !n && f && (!ca && d && M(r, {
                                display: "block"
                            }),
                            K(r, "dy", A(r)));
                            if (m) {
                                for (var l = e.replace(/([^\^])-/g, "$1- ").split(" "), Z = g.length > 1 || f || l.length > 1 && k.whiteSpace !== "nowrap", o, y, q, s = [], x = A(r), t = 1, w = a.rotation, z = e, D = z.length; (Z || u) && (l.length || s.length); )
                                    a.rotation = 0,
                                    o = a.getBBox(!0),
                                    q = o.width,
                                    !ca && c.forExport && (q = c.measureSpanWidth(r.firstChild.data, a.styles)),
                                    o = q > m,
                                    y === void 0 && (y = o),
                                    u && y ? (D /= 2,
                                    z === "" || !o && D < 0.5 ? l = [] : (o && (y = !0),
                                    z = e.substring(0, z.length + (o ? -1 : 1) * ta(D)),
                                    l = [z + (m > 3 ? "\u2026" : "")],
                                    r.removeChild(r.firstChild))) : !o || l.length === 1 ? (l = s,
                                    s = [],
                                    l.length && (t++,
                                    r = C.createElementNS(Ea, "tspan"),
                                    K(r, {
                                        dy: x,
                                        x: j
                                    }),
                                    p && K(r, "style", p),
                                    b.appendChild(r)),
                                    q > m && (m = q)) : (r.removeChild(r.firstChild),
                                    s.unshift(l.pop())),
                                    l.length && r.appendChild(C.createTextNode(l.join(" ").replace(/- /g, "-")));
                                y && a.attr("title", a.textStr);
                                a.rotation = w
                            }
                            n++
                        }
                    }
                })
            }),
            Z && Z.removeChild(b),
            l && a.applyTextShadow && a.applyTextShadow(l))
        },
        getContrast: function(a) {
            a = na(a).rgba;
            return a[0] + a[1] + a[2] > 384 ? "#000000" : "#FFFFFF"
        },
        button: function(a, b, c, d, e, f, g, h, i) {
            var j = this.label(a, b, c, i, null, null, null, null, "button"), k = 0, m, n, l, u, r, p, a = {
                x1: 0,
                y1: 0,
                x2: 0,
                y2: 1
            }, e = D({
                "stroke-width": 1,
                stroke: "#CCCCCC",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#FEFEFE"], [1, "#F6F6F6"]]
                },
                r: 2,
                padding: 5,
                style: {
                    color: "black"
                }
            }, e);
            l = e.style;
            delete e.style;
            f = D(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#FFF"], [1, "#ACF"]]
                }
            }, f);
            u = f.style;
            delete f.style;
            g = D(e, {
                stroke: "#68A",
                fill: {
                    linearGradient: a,
                    stops: [[0, "#9BD"], [1, "#CDF"]]
                }
            }, g);
            r = g.style;
            delete g.style;
            h = D(e, {
                style: {
                    color: "#CCC"
                }
            }, h);
            p = h.style;
            delete h.style;
            I(j.element, sa ? "mouseover" : "mouseenter", function() {
                k !== 3 && j.attr(f).css(u)
            });
            I(j.element, sa ? "mouseout" : "mouseleave", function() {
                k !== 3 && (m = [e, f, g][k],
                n = [l, u, r][k],
                j.attr(m).css(n))
            });
            j.setState = function(a) {
                (j.state = k = a) ? a === 2 ? j.attr(g).css(r) : a === 3 && j.attr(h).css(p) : j.attr(e).css(l)
            }
            ;
            return j.on("click", function(a) {
                k !== 3 && d.call(j, a)
            }).attr(e).css(t({
                cursor: "default"
            }, l))
        },
        crispLine: function(a, b) {
            a[1] === a[4] && (a[1] = a[4] = w(a[1]) - b % 2 / 2);
            a[2] === a[5] && (a[2] = a[5] = w(a[2]) + b % 2 / 2);
            return a
        },
        path: function(a) {
            var b = {
                fill: P
            };
            Ga(a) ? b.d = a : da(a) && t(b, a);
            return this.createElement("path").attr(b)
        },
        circle: function(a, b, c) {
            a = da(a) ? a : {
                x: a,
                y: b,
                r: c
            };
            b = this.createElement("circle");
            b.xSetter = function(a) {
                this.element.setAttribute("cx", a)
            }
            ;
            b.ySetter = function(a) {
                this.element.setAttribute("cy", a)
            }
            ;
            return b.attr(a)
        },
        arc: function(a, b, c, d, e, f) {
            if (da(a))
                b = a.y,
                c = a.r,
                d = a.innerR,
                e = a.start,
                f = a.end,
                a = a.x;
            a = this.symbol("arc", a || 0, b || 0, c || 0, c || 0, {
                innerR: d || 0,
                start: e || 0,
                end: f || 0
            });
            a.r = c;
            return a
        },
        rect: function(a, b, c, d, e, f) {
            var e = da(a) ? a.r : e
              , g = this.createElement("rect")
              , a = da(a) ? a : a === x ? {} : {
                x: a,
                y: b,
                width: s(c, 0),
                height: s(d, 0)
            };
            if (f !== x)
                a.strokeWidth = f,
                a = g.crisp(a);
            if (e)
                a.r = e;
            g.rSetter = function(a) {
                K(this.element, {
                    rx: a,
                    ry: a
                })
            }
            ;
            return g.attr(a)
        },
        setSize: function(a, b, c) {
            var d = this.alignedObjects
              , e = d.length;
            this.width = a;
            this.height = b;
            for (this.boxWrapper[p(c, !0) ? "animate" : "attr"]({
                width: a,
                height: b
            }); e--; )
                d[e].align()
        },
        g: function(a) {
            var b = this.createElement("g");
            return q(a) ? b.attr({
                "class": "highcharts-" + a
            }) : b
        },
        image: function(a, b, c, d, e) {
            var f = {
                preserveAspectRatio: P
            };
            arguments.length > 1 && t(f, {
                x: b,
                y: c,
                width: d,
                height: e
            });
            f = this.createElement("image").attr(f);
            f.element.setAttributeNS ? f.element.setAttributeNS("http://www.w3.org/1999/xlink", "href", a) : f.element.setAttribute("hc-svg-href", a);
            return f
        },
        symbol: function(a, b, c, d, e, f) {
            var g, h = this.symbols[a], h = h && h(w(b), w(c), d, e, f), i = /^url\((.*?)\)$/, j, k;
            if (h)
                g = this.path(h),
                t(g, {
                    symbolName: a,
                    x: b,
                    y: c,
                    width: d,
                    height: e
                }),
                f && t(g, f);
            else if (i.test(a))
                k = function(a, b) {
                    a.element && (a.attr({
                        width: b[0],
                        height: b[1]
                    }),
                    a.alignByTranslate || a.translate(w((d - b[0]) / 2), w((e - b[1]) / 2)))
                }
                ,
                j = a.match(i)[1],
                a = Kb[j] || f && f.width && f.height && [f.width, f.height],
                g = this.image(j).attr({
                    x: b,
                    y: c
                }),
                g.isImg = !0,
                a ? k(g, a) : (g.attr({
                    width: 0,
                    height: 0
                }),
                $("img", {
                    onload: function() {
                        this.width === 0 && (M(this, {
                            position: "absolute",
                            top: "-999em"
                        }),
                        document.body.appendChild(this));
                        k(g, Kb[j] = [this.width, this.height]);
                        this.parentNode && this.parentNode.removeChild(this)
                    },
                    src: j
                }));
            return g
        },
        symbols: {
            circle: function(a, b, c, d) {
                var e = 0.166 * c;
                return ["M", a + c / 2, b, "C", a + c + e, b, a + c + e, b + d, a + c / 2, b + d, "C", a - e, b + d, a - e, b, a + c / 2, b, "Z"]
            },
            square: function(a, b, c, d) {
                return ["M", a, b, "L", a + c, b, a + c, b + d, a, b + d, "Z"]
            },
            triangle: function(a, b, c, d) {
                return ["M", a + c / 2, b, "L", a + c, b + d, a, b + d, "Z"]
            },
            "triangle-down": function(a, b, c, d) {
                return ["M", a, b, "L", a + c, b, a + c / 2, b + d, "Z"]
            },
            diamond: function(a, b, c, d) {
                return ["M", a + c / 2, b, "L", a + c, b + d / 2, a + c / 2, b + d, a, b + d / 2, "Z"]
            },
            arc: function(a, b, c, d, e) {
                var f = e.start
                  , c = e.r || c || d
                  , g = e.end - 0.001
                  , d = e.innerR
                  , h = e.open
                  , i = W(f)
                  , j = aa(f)
                  , k = W(g)
                  , g = aa(g)
                  , e = e.end - f < ma ? 0 : 1;
                return ["M", a + c * i, b + c * j, "A", c, c, 0, e, 1, a + c * k, b + c * g, h ? "M" : "L", a + d * k, b + d * g, "A", d, d, 0, e, 0, a + d * i, b + d * j, h ? "" : "Z"]
            },
            callout: function(a, b, c, d, e) {
                var f = z(e && e.r || 0, c, d), g = f + 6, h = e && e.anchorX, e = e && e.anchorY, i;
                i = ["M", a + f, b, "L", a + c - f, b, "C", a + c, b, a + c, b, a + c, b + f, "L", a + c, b + d - f, "C", a + c, b + d, a + c, b + d, a + c - f, b + d, "L", a + f, b + d, "C", a, b + d, a, b + d, a, b + d - f, "L", a, b + f, "C", a, b, a, b, a + f, b];
                h && h > c && e > b + g && e < b + d - g ? i.splice(13, 3, "L", a + c, e - 6, a + c + 6, e, a + c, e + 6, a + c, b + d - f) : h && h < 0 && e > b + g && e < b + d - g ? i.splice(33, 3, "L", a, e + 6, a - 6, e, a, e - 6, a, b + f) : e && e > d && h > a + g && h < a + c - g ? i.splice(23, 3, "L", h + 6, b + d, h, b + d + 6, h - 6, b + d, a + f, b + d) : e && e < 0 && h > a + g && h < a + c - g && i.splice(3, 3, "L", h - 6, b, h, b - 6, h + 6, b, c - f, b);
                return i
            }
        },
        clipRect: function(a, b, c, d) {
            var e = "highcharts-" + xb++
              , f = this.createElement("clipPath").attr({
                id: e
            }).add(this.defs)
              , a = this.rect(a, b, c, d, 0).add(f);
            a.id = e;
            a.clipPath = f;
            a.count = 0;
            return a
        },
        text: function(a, b, c, d) {
            var e = fa || !ca && this.forExport
              , f = {};
            if (d && (this.allowHTML || !this.forExport))
                return this.html(a, b, c);
            f.x = Math.round(b || 0);
            if (c)
                f.y = Math.round(c);
            if (a || a === 0)
                f.text = a;
            a = this.createElement("text").attr(f);
            e && a.css({
                position: "absolute"
            });
            if (!d)
                a.xSetter = function(a, b, c) {
                    var d = c.getElementsByTagName("tspan"), e, f = c.getAttribute(b), n;
                    for (n = 0; n < d.length; n++)
                        e = d[n],
                        e.getAttribute(b) === f && e.setAttribute(b, a);
                    c.setAttribute(b, a)
                }
                ;
            return a
        },
        fontMetrics: function(a, b) {
            var c, d, a = a || this.style.fontSize;
            !a && b && L.getComputedStyle && (b = b.element || b,
            a = (c = L.getComputedStyle(b, "")) && c.fontSize);
            a = /px/.test(a) ? G(a) : /em/.test(a) ? parseFloat(a) * 12 : 12;
            c = a < 24 ? a + 3 : w(a * 1.2);
            d = w(c * 0.8);
            return {
                h: c,
                b: d,
                f: a
            }
        },
        rotCorr: function(a, b, c) {
            var d = a;
            b && c && (d = s(d * W(b * ga), 4));
            return {
                x: -a / 3 * aa(b * ga),
                y: d
            }
        },
        label: function(a, b, c, d, e, f, g, h, i) {
            function j() {
                var a, b;
                a = u.element.style;
                p = (s === void 0 || va === void 0 || l.styles.textAlign) && q(u.textStr) && u.getBBox();
                l.width = (s || p.width || 0) + 2 * v + y;
                l.height = (va || p.height || 0) + 2 * v;
                B = v + n.fontMetrics(a && a.fontSize, u).b;
                if (E) {
                    if (!r)
                        a = w(-A * v) + C,
                        b = (h ? -B : 0) + C,
                        l.box = r = d ? n.symbol(d, a, b, l.width, l.height, H) : n.rect(a, b, l.width, l.height, 0, H[Pb]),
                        r.isImg || r.attr("fill", P),
                        r.add(l);
                    r.isImg || r.attr(t({
                        width: w(l.width),
                        height: w(l.height)
                    }, H));
                    H = null
                }
            }
            function k() {
                var a = l.styles, a = a && a.textAlign, b = y + v * (1 - A), c;
                c = h ? 0 : B;
                if (q(s) && p && (a === "center" || a === "right"))
                    b += {
                        center: 0.5,
                        right: 1
                    }[a] * (s - p.width);
                if (b !== u.x || c !== u.y)
                    u.attr("x", b),
                    c !== x && u.attr("y", c);
                u.x = b;
                u.y = c
            }
            function m(a, b) {
                r ? r.attr(a, b) : H[a] = b
            }
            var n = this, l = n.g(i), u = n.text("", 0, 0, g).attr({
                zIndex: 1
            }), r, p, A = 0, v = 3, y = 0, s, va, zb, z, C = 0, H = {}, B, E;
            l.onAdd = function() {
                u.add(l);
                l.attr({
                    text: a || a === 0 ? a : "",
                    x: b,
                    y: c
                });
                r && q(e) && l.attr({
                    anchorX: e,
                    anchorY: f
                })
            }
            ;
            l.widthSetter = function(a) {
                s = a
            }
            ;
            l.heightSetter = function(a) {
                va = a
            }
            ;
            l.paddingSetter = function(a) {
                if (q(a) && a !== v)
                    v = l.padding = a,
                    k()
            }
            ;
            l.paddingLeftSetter = function(a) {
                q(a) && a !== y && (y = a,
                k())
            }
            ;
            l.alignSetter = function(a) {
                A = {
                    left: 0,
                    center: 0.5,
                    right: 1
                }[a]
            }
            ;
            l.textSetter = function(a) {
                a !== x && u.textSetter(a);
                j();
                k()
            }
            ;
            l["stroke-widthSetter"] = function(a, b) {
                a && (E = !0);
                C = a % 2 / 2;
                m(b, a)
            }
            ;
            l.strokeSetter = l.fillSetter = l.rSetter = function(a, b) {
                b === "fill" && a && (E = !0);
                m(b, a)
            }
            ;
            l.anchorXSetter = function(a, b) {
                e = a;
                m(b, w(a) - C - zb)
            }
            ;
            l.anchorYSetter = function(a, b) {
                f = a;
                m(b, a - z)
            }
            ;
            l.xSetter = function(a) {
                l.x = a;
                A && (a -= A * ((s || p.width) + v));
                zb = w(a);
                l.attr("translateX", zb)
            }
            ;
            l.ySetter = function(a) {
                z = l.y = w(a);
                l.attr("translateY", z)
            }
            ;
            var G = l.css;
            return t(l, {
                css: function(a) {
                    if (a) {
                        var b = {}
                          , a = D(a);
                        o(l.textProps, function(c) {
                            a[c] !== x && (b[c] = a[c],
                            delete a[c])
                        });
                        u.css(b)
                    }
                    return G.call(l, a)
                },
                getBBox: function() {
                    return {
                        width: p.width + 2 * v,
                        height: p.height + 2 * v,
                        x: p.x - v,
                        y: p.y - v
                    }
                },
                shadow: function(a) {
                    r && r.shadow(a);
                    return l
                },
                destroy: function() {
                    Y(l.element, "mouseenter");
                    Y(l.element, "mouseleave");
                    u && (u = u.destroy());
                    r && (r = r.destroy());
                    Q.prototype.destroy.call(l);
                    l = n = j = k = m = null
                }
            })
        }
    };
    $a = Aa;
    t(Q.prototype, {
        htmlCss: function(a) {
            var b = this.element;
            if (b = a && b.tagName === "SPAN" && a.width)
                delete a.width,
                this.textWidth = b,
                this.updateTransform();
            if (a && a.textOverflow === "ellipsis")
                a.whiteSpace = "nowrap",
                a.overflow = "hidden";
            this.styles = t(this.styles, a);
            M(this.element, a);
            return this
        },
        htmlGetBBox: function() {
            var a = this.element;
            if (a.nodeName === "text")
                a.style.position = "absolute";
            return {
                x: a.offsetLeft,
                y: a.offsetTop,
                width: a.offsetWidth,
                height: a.offsetHeight
            }
        },
        htmlUpdateTransform: function() {
            if (this.added) {
                var a = this.renderer
                  , b = this.element
                  , c = this.translateX || 0
                  , d = this.translateY || 0
                  , e = this.x || 0
                  , f = this.y || 0
                  , g = this.textAlign || "left"
                  , h = {
                    left: 0,
                    center: 0.5,
                    right: 1
                }[g]
                  , i = this.shadows
                  , j = this.styles;
                M(b, {
                    marginLeft: c,
                    marginTop: d
                });
                i && o(i, function(a) {
                    M(a, {
                        marginLeft: c + 1,
                        marginTop: d + 1
                    })
                });
                this.inverted && o(b.childNodes, function(c) {
                    a.invertChild(c, b)
                });
                if (b.tagName === "SPAN") {
                    var k = this.rotation, m, n = G(this.textWidth), l = [k, g, b.innerHTML, this.textWidth, this.textAlign].join(",");
                    if (l !== this.cTT) {
                        m = a.fontMetrics(b.style.fontSize).b;
                        q(k) && this.setSpanRotation(k, h, m);
                        i = p(this.elemWidth, b.offsetWidth);
                        if (i > n && /[ \-]/.test(b.textContent || b.innerText))
                            M(b, {
                                width: n + "px",
                                display: "block",
                                whiteSpace: j && j.whiteSpace || "normal"
                            }),
                            i = n;
                        this.getSpanCorrection(i, m, h, k, g)
                    }
                    M(b, {
                        left: e + (this.xCorr || 0) + "px",
                        top: f + (this.yCorr || 0) + "px"
                    });
                    if (hb)
                        m = b.offsetHeight;
                    this.cTT = l
                }
            } else
                this.alignOnAdd = !0
        },
        setSpanRotation: function(a, b, c) {
            var d = {}
              , e = sa ? "-ms-transform" : hb ? "-webkit-transform" : Ka ? "MozTransform" : Ib ? "-o-transform" : "";
            d[e] = d.transform = "rotate(" + a + "deg)";
            d[e + (Ka ? "Origin" : "-origin")] = d.transformOrigin = b * 100 + "% " + c + "px";
            M(this.element, d)
        },
        getSpanCorrection: function(a, b, c) {
            this.xCorr = -a * c;
            this.yCorr = -b
        }
    });
    t(Aa.prototype, {
        html: function(a, b, c) {
            var d = this.createElement("span")
              , e = d.element
              , f = d.renderer;
            d.textSetter = function(a) {
                a !== e.innerHTML && delete this.bBox;
                e.innerHTML = this.textStr = a;
                d.htmlUpdateTransform()
            }
            ;
            d.xSetter = d.ySetter = d.alignSetter = d.rotationSetter = function(a, b) {
                b === "align" && (b = "textAlign");
                d[b] = a;
                d.htmlUpdateTransform()
            }
            ;
            d.attr({
                text: a,
                x: w(b),
                y: w(c)
            }).css({
                position: "absolute",
                fontFamily: this.style.fontFamily,
                fontSize: this.style.fontSize
            });
            e.style.whiteSpace = "nowrap";
            d.css = d.htmlCss;
            if (f.isSVG)
                d.add = function(a) {
                    var b, c = f.box.parentNode, j = [];
                    if (this.parentGroup = a) {
                        if (b = a.div,
                        !b) {
                            for (; a; )
                                j.push(a),
                                a = a.parentGroup;
                            o(j.reverse(), function(a) {
                                var d, e = K(a.element, "class");
                                e && (e = {
                                    className: e
                                });
                                b = a.div = a.div || $(Ja, e, {
                                    position: "absolute",
                                    left: (a.translateX || 0) + "px",
                                    top: (a.translateY || 0) + "px"
                                }, b || c);
                                d = b.style;
                                t(a, {
                                    translateXSetter: function(b, c) {
                                        d.left = b + "px";
                                        a[c] = b;
                                        a.doTransform = !0
                                    },
                                    translateYSetter: function(b, c) {
                                        d.top = b + "px";
                                        a[c] = b;
                                        a.doTransform = !0
                                    }
                                });
                                o(["opacity", "visibility"], function(b) {
                                    Ta(a, b + "Setter", function(a, b, c, e) {
                                        a.call(this, b, c, e);
                                        d[c] = b
                                    })
                                })
                            })
                        }
                    } else
                        b = c;
                    b.appendChild(e);
                    d.added = !0;
                    d.alignOnAdd && d.htmlUpdateTransform();
                    return d
                }
                ;
            return d
        }
    });
    if (!ca && !fa) {
        E = {
            init: function(a, b) {
                var c = ["<", b, ' filled="f" stroked="f"']
                  , d = ["position: ", "absolute", ";"]
                  , e = b === Ja;
                (b === "shape" || e) && d.push("left:0;top:0;width:1px;height:1px;");
                d.push("visibility: ", e ? "hidden" : "visible");
                c.push(' style="', d.join(""), '"/>');
                if (b)
                    c = e || b === "span" || b === "img" ? c.join("") : a.prepVML(c),
                    this.element = $(c);
                this.renderer = a
            },
            add: function(a) {
                var b = this.renderer
                  , c = this.element
                  , d = b.box
                  , d = a ? a.element || a : d;
                a && a.inverted && b.invertChild(c, d);
                d.appendChild(c);
                this.added = !0;
                this.alignOnAdd && !this.deferUpdateTransform && this.updateTransform();
                if (this.onAdd)
                    this.onAdd();
                return this
            },
            updateTransform: Q.prototype.htmlUpdateTransform,
            setSpanRotation: function() {
                var a = this.rotation
                  , b = W(a * ga)
                  , c = aa(a * ga);
                M(this.element, {
                    filter: a ? ["progid:DXImageTransform.Microsoft.Matrix(M11=", b, ", M12=", -c, ", M21=", c, ", M22=", b, ", sizingMethod='auto expand')"].join("") : P
                })
            },
            getSpanCorrection: function(a, b, c, d, e) {
                var f = d ? W(d * ga) : 1, g = d ? aa(d * ga) : 0, h = p(this.elemHeight, this.element.offsetHeight), i;
                this.xCorr = f < 0 && -a;
                this.yCorr = g < 0 && -h;
                i = f * g < 0;
                this.xCorr += g * b * (i ? 1 - c : c);
                this.yCorr -= f * b * (d ? i ? c : 1 - c : 1);
                e && e !== "left" && (this.xCorr -= a * c * (f < 0 ? -1 : 1),
                d && (this.yCorr -= h * c * (g < 0 ? -1 : 1)),
                M(this.element, {
                    textAlign: e
                }))
            },
            pathToVML: function(a) {
                for (var b = a.length, c = []; b--; )
                    if (qa(a[b]))
                        c[b] = w(a[b] * 10) - 5;
                    else if (a[b] === "Z")
                        c[b] = "x";
                    else if (c[b] = a[b],
                    a.isArc && (a[b] === "wa" || a[b] === "at"))
                        c[b + 5] === c[b + 7] && (c[b + 7] += a[b + 7] > a[b + 5] ? 1 : -1),
                        c[b + 6] === c[b + 8] && (c[b + 8] += a[b + 8] > a[b + 6] ? 1 : -1);
                return c.join(" ") || "x"
            },
            clip: function(a) {
                var b = this, c;
                a ? (c = a.members,
                ja(c, b),
                c.push(b),
                b.destroyClip = function() {
                    ja(c, b)
                }
                ,
                a = a.getCSS(b)) : (b.destroyClip && b.destroyClip(),
                a = {
                    clip: gb ? "inherit" : "rect(auto)"
                });
                return b.css(a)
            },
            css: Q.prototype.htmlCss,
            safeRemoveChild: function(a) {
                a.parentNode && Qa(a)
            },
            destroy: function() {
                this.destroyClip && this.destroyClip();
                return Q.prototype.destroy.apply(this)
            },
            on: function(a, b) {
                this.element["on" + a] = function() {
                    var a = L.event;
                    a.target = a.srcElement;
                    b(a)
                }
                ;
                return this
            },
            cutOffPath: function(a, b) {
                var c, a = a.split(/[ ,]/);
                c = a.length;
                if (c === 9 || c === 11)
                    a[c - 4] = a[c - 2] = G(a[c - 2]) - 10 * b;
                return a.join(" ")
            },
            shadow: function(a, b, c) {
                var d = [], e, f = this.element, g = this.renderer, h, i = f.style, j, k = f.path, m, n, l, u;
                k && typeof k.value !== "string" && (k = "x");
                n = k;
                if (a) {
                    l = p(a.width, 3);
                    u = (a.opacity || 0.15) / l;
                    for (e = 1; e <= 3; e++) {
                        m = l * 2 + 1 - 2 * e;
                        c && (n = this.cutOffPath(k.value, m + 0.5));
                        j = ['<shape isShadow="true" strokeweight="', m, '" filled="false" path="', n, '" coordsize="10 10" style="', f.style.cssText, '" />'];
                        h = $(g.prepVML(j), null, {
                            left: G(i.left) + p(a.offsetX, 1),
                            top: G(i.top) + p(a.offsetY, 1)
                        });
                        if (c)
                            h.cutOff = m + 1;
                        j = ['<stroke color="', a.color || "black", '" opacity="', u * e, '"/>'];
                        $(g.prepVML(j), null, null, h);
                        b ? b.element.appendChild(h) : f.parentNode.insertBefore(h, f);
                        d.push(h)
                    }
                    this.shadows = d
                }
                return this
            },
            updateShadows: ua,
            setAttr: function(a, b) {
                gb ? this.element[a] = b : this.element.setAttribute(a, b)
            },
            classSetter: function(a) {
                this.element.className = a
            },
            dashstyleSetter: function(a, b, c) {
                (c.getElementsByTagName("stroke")[0] || $(this.renderer.prepVML(["<stroke/>"]), null, null, c))[b] = a || "solid";
                this[b] = a
            },
            dSetter: function(a, b, c) {
                var d = this.shadows
                  , a = a || [];
                this.d = a.join && a.join(" ");
                c.path = a = this.pathToVML(a);
                if (d)
                    for (c = d.length; c--; )
                        d[c].path = d[c].cutOff ? this.cutOffPath(a, d[c].cutOff) : a;
                this.setAttr(b, a)
            },
            fillSetter: function(a, b, c) {
                var d = c.nodeName;
                if (d === "SPAN")
                    c.style.color = a;
                else if (d !== "IMG")
                    c.filled = a !== P,
                    this.setAttr("fillcolor", this.renderer.color(a, c, b, this))
            },
            opacitySetter: ua,
            rotationSetter: function(a, b, c) {
                c = c.style;
                this[b] = c[b] = a;
                c.left = -w(aa(a * ga) + 1) + "px";
                c.top = w(W(a * ga)) + "px"
            },
            strokeSetter: function(a, b, c) {
                this.setAttr("strokecolor", this.renderer.color(a, c, b))
            },
            "stroke-widthSetter": function(a, b, c) {
                c.stroked = !!a;
                this[b] = a;
                qa(a) && (a += "px");
                this.setAttr("strokeweight", a)
            },
            titleSetter: function(a, b) {
                this.setAttr(b, a)
            },
            visibilitySetter: function(a, b, c) {
                a === "inherit" && (a = "visible");
                this.shadows && o(this.shadows, function(c) {
                    c.style[b] = a
                });
                c.nodeName === "DIV" && (a = a === "hidden" ? "-999em" : 0,
                gb || (c.style[b] = a ? "visible" : "hidden"),
                b = "top");
                c.style[b] = a
            },
            xSetter: function(a, b, c) {
                this[b] = a;
                b === "x" ? b = "left" : b === "y" && (b = "top");
                this.updateClipping ? (this[b] = a,
                this.updateClipping()) : c.style[b] = a
            },
            zIndexSetter: function(a, b, c) {
                c.style[b] = a
            }
        };
        B.VMLElement = E = ka(Q, E);
        E.prototype.ySetter = E.prototype.widthSetter = E.prototype.heightSetter = E.prototype.xSetter;
        var Ma = {
            Element: E,
            isIE8: za.indexOf("MSIE 8.0") > -1,
            init: function(a, b, c, d) {
                var e;
                this.alignedObjects = [];
                d = this.createElement(Ja).css(t(this.getStyle(d), {
                    position: "relative"
                }));
                e = d.element;
                a.appendChild(d.element);
                this.isVML = !0;
                this.box = e;
                this.boxWrapper = d;
                this.cache = {};
                this.setSize(b, c, !1);
                if (!C.namespaces.hcv) {
                    C.namespaces.add("hcv", "urn:schemas-microsoft-com:vml");
                    try {
                        C.createStyleSheet().cssText = "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                    } catch (f) {
                        C.styleSheets[0].cssText += "hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } "
                    }
                }
            },
            isHidden: function() {
                return !this.box.offsetWidth
            },
            clipRect: function(a, b, c, d) {
                var e = this.createElement()
                  , f = da(a);
                return t(e, {
                    members: [],
                    count: 0,
                    left: (f ? a.x : a) + 1,
                    top: (f ? a.y : b) + 1,
                    width: (f ? a.width : c) - 1,
                    height: (f ? a.height : d) - 1,
                    getCSS: function(a) {
                        var b = a.element
                          , c = b.nodeName
                          , a = a.inverted
                          , d = this.top - (c === "shape" ? b.offsetTop : 0)
                          , e = this.left
                          , b = e + this.width
                          , f = d + this.height
                          , d = {
                            clip: "rect(" + w(a ? e : d) + "px," + w(a ? f : b) + "px," + w(a ? b : f) + "px," + w(a ? d : e) + "px)"
                        };
                        !a && gb && c === "DIV" && t(d, {
                            width: b + "px",
                            height: f + "px"
                        });
                        return d
                    },
                    updateClipping: function() {
                        o(e.members, function(a) {
                            a.element && a.css(e.getCSS(a))
                        })
                    }
                })
            },
            color: function(a, b, c, d) {
                var e = this, f, g = /^rgba/, h, i, j = P;
                a && a.linearGradient ? i = "gradient" : a && a.radialGradient && (i = "pattern");
                if (i) {
                    var k, m, n = a.linearGradient || a.radialGradient, l, u, r, p, A, v = "", a = a.stops, y, q = [], va = function() {
                        h = ['<fill colors="' + q.join(",") + '" opacity="', r, '" o:opacity2="', u, '" type="', i, '" ', v, 'focus="100%" method="any" />'];
                        $(e.prepVML(h), null, null, b)
                    };
                    l = a[0];
                    y = a[a.length - 1];
                    l[0] > 0 && a.unshift([0, l[1]]);
                    y[0] < 1 && a.push([1, y[1]]);
                    o(a, function(a, b) {
                        g.test(a[1]) ? (f = na(a[1]),
                        k = f.get("rgb"),
                        m = f.get("a")) : (k = a[1],
                        m = 1);
                        q.push(a[0] * 100 + "% " + k);
                        b ? (r = m,
                        p = k) : (u = m,
                        A = k)
                    });
                    if (c === "fill")
                        if (i === "gradient")
                            c = n.x1 || n[0] || 0,
                            a = n.y1 || n[1] || 0,
                            l = n.x2 || n[2] || 0,
                            n = n.y2 || n[3] || 0,
                            v = 'angle="' + (90 - V.atan((n - a) / (l - c)) * 180 / ma) + '"',
                            va();
                        else {
                            var j = n.r, s = j * 2, x = j * 2, t = n.cx, w = n.cy, z = b.radialReference, D, j = function() {
                                z && (D = d.getBBox(),
                                t += (z[0] - D.x) / D.width - 0.5,
                                w += (z[1] - D.y) / D.height - 0.5,
                                s *= z[2] / D.width,
                                x *= z[2] / D.height);
                                v = 'src="' + S.global.VMLRadialGradientURL + '" size="' + s + "," + x + '" origin="0.5,0.5" position="' + t + "," + w + '" color2="' + A + '" ';
                                va()
                            };
                            d.added ? j() : d.onAdd = j;
                            j = p
                        }
                    else
                        j = k
                } else if (g.test(a) && b.tagName !== "IMG")
                    f = na(a),
                    h = ["<", c, ' opacity="', f.get("a"), '"/>'],
                    $(this.prepVML(h), null, null, b),
                    j = f.get("rgb");
                else {
                    j = b.getElementsByTagName(c);
                    if (j.length)
                        j[0].opacity = 1,
                        j[0].type = "solid";
                    j = a
                }
                return j
            },
            prepVML: function(a) {
                var b = this.isIE8
                  , a = a.join("");
                b ? (a = a.replace("/>", ' xmlns="urn:schemas-microsoft-com:vml" />'),
                a = a.indexOf('style="') === -1 ? a.replace("/>", ' style="display:inline-block;behavior:url(#default#VML);" />') : a.replace('style="', 'style="display:inline-block;behavior:url(#default#VML);')) : a = a.replace("<", "<hcv:");
                return a
            },
            text: Aa.prototype.html,
            path: function(a) {
                var b = {
                    coordsize: "10 10"
                };
                Ga(a) ? b.d = a : da(a) && t(b, a);
                return this.createElement("shape").attr(b)
            },
            circle: function(a, b, c) {
                var d = this.symbol("circle");
                if (da(a))
                    c = a.r,
                    b = a.y,
                    a = a.x;
                d.isCircle = !0;
                d.r = c;
                return d.attr({
                    x: a,
                    y: b
                })
            },
            g: function(a) {
                var b;
                a && (b = {
                    className: "highcharts-" + a,
                    "class": "highcharts-" + a
                });
                return this.createElement(Ja).attr(b)
            },
            image: function(a, b, c, d, e) {
                var f = this.createElement("img").attr({
                    src: a
                });
                arguments.length > 1 && f.attr({
                    x: b,
                    y: c,
                    width: d,
                    height: e
                });
                return f
            },
            createElement: function(a) {
                return a === "rect" ? this.symbol(a) : Aa.prototype.createElement.call(this, a)
            },
            invertChild: function(a, b) {
                var c = this
                  , d = b.style
                  , e = a.tagName === "IMG" && a.style;
                M(a, {
                    flip: "x",
                    left: G(d.width) - (e ? G(e.top) : 1),
                    top: G(d.height) - (e ? G(e.left) : 1),
                    rotation: -90
                });
                o(a.childNodes, function(b) {
                    c.invertChild(b, a)
                })
            },
            symbols: {
                arc: function(a, b, c, d, e) {
                    var f = e.start
                      , g = e.end
                      , h = e.r || c || d
                      , c = e.innerR
                      , d = W(f)
                      , i = aa(f)
                      , j = W(g)
                      , k = aa(g);
                    if (g - f === 0)
                        return ["x"];
                    f = ["wa", a - h, b - h, a + h, b + h, a + h * d, b + h * i, a + h * j, b + h * k];
                    e.open && !c && f.push("e", "M", a, b);
                    f.push("at", a - c, b - c, a + c, b + c, a + c * j, b + c * k, a + c * d, b + c * i, "x", "e");
                    f.isArc = !0;
                    return f
                },
                circle: function(a, b, c, d, e) {
                    e && (c = d = 2 * e.r);
                    e && e.isCircle && (a -= c / 2,
                    b -= d / 2);
                    return ["wa", a, b, a + c, b + d, a + c, b + d / 2, a + c, b + d / 2, "e"]
                },
                rect: function(a, b, c, d, e) {
                    return Aa.prototype.symbols[!q(e) || !e.r ? "square" : "callout"].call(0, a, b, c, d, e)
                }
            }
        };
        B.VMLRenderer = E = function() {
            this.init.apply(this, arguments)
        }
        ;
        E.prototype = D(Aa.prototype, Ma);
        $a = E
    }
    Aa.prototype.measureSpanWidth = function(a, b) {
        var c = C.createElement("span"), d;
        d = C.createTextNode(a);
        c.appendChild(d);
        M(c, b);
        this.box.appendChild(c);
        d = c.offsetWidth;
        Qa(c);
        return d
    }
    ;
    var Lb;
    if (fa)
        B.CanVGRenderer = E = function() {
            Ea = "http://www.w3.org/1999/xhtml"
        }
        ,
        E.prototype.symbols = {},
        Lb = function() {
            function a() {
                var a = b.length, d;
                for (d = 0; d < a; d++)
                    b[d]();
                b = []
            }
            var b = [];
            return {
                push: function(c, d) {
                    b.length === 0 && Qb(d, a);
                    b.push(c)
                }
            }
        }(),
        $a = E;
    Sa.prototype = {
        addLabel: function() {
            var a = this.axis, b = a.options, c = a.chart, d = a.categories, e = a.names, f = this.pos, g = b.labels, h = a.tickPositions, i = f === h[0], j = f === h[h.length - 1], e = d ? p(d[f], e[f], f) : f, d = this.label, h = h.info, k;
            a.isDatetimeAxis && h && (k = b.dateTimeLabelFormats[h.higherRanks[f] || h.unitName]);
            this.isFirst = i;
            this.isLast = j;
            b = a.labelFormatter.call({
                axis: a,
                chart: c,
                isFirst: i,
                isLast: j,
                dateTimeLabelFormat: k,
                value: a.isLog ? ea(ia(e)) : e
            });
            q(d) ? d && d.attr({
                text: b
            }) : (this.labelLength = (this.label = d = q(b) && g.enabled ? c.renderer.text(b, 0, 0, g.useHTML).css(D(g.style)).add(a.labelGroup) : null) && d.getBBox().width,
            this.rotation = 0)
        },
        getLabelSize: function() {
            return this.label ? this.label.getBBox()[this.axis.horiz ? "height" : "width"] : 0
        },
        handleOverflow: function(a) {
            var b = this.axis, c = a.x, d = b.chart.chartWidth, e = b.chart.spacing, f = p(b.labelLeft, z(b.pos, e[3])), e = p(b.labelRight, s(b.pos + b.len, d - e[1])), g = this.label, h = this.rotation, i = {
                left: 0,
                center: 0.5,
                right: 1
            }[b.labelAlign], j = g.getBBox().width, k = b.slotWidth, m = 1, n, l = {};
            if (h)
                h < 0 && c - i * j < f ? n = w(c / W(h * ga) - f) : h > 0 && c + i * j > e && (n = w((d - c) / W(h * ga)));
            else if (d = c + (1 - i) * j,
            c - i * j < f ? k = a.x + k * (1 - i) - f : d > e && (k = e - a.x + k * i,
            m = -1),
            k = z(b.slotWidth, k),
            k < b.slotWidth && b.labelAlign === "center" && (a.x += m * (b.slotWidth - k - i * (b.slotWidth - z(j, k)))),
            j > k || b.autoRotation && g.styles.width)
                n = k;
            if (n) {
                l.width = n;
                if (!b.options.labels.style.textOverflow)
                    l.textOverflow = "ellipsis";
                g.css(l)
            }
        },
        getPosition: function(a, b, c, d) {
            var e = this.axis
              , f = e.chart
              , g = d && f.oldChartHeight || f.chartHeight;
            return {
                x: a ? e.translate(b + c, null, null, d) + e.transB : e.left + e.offset + (e.opposite ? (d && f.oldChartWidth || f.chartWidth) - e.right - e.left : 0),
                y: a ? g - e.bottom + e.offset - (e.opposite ? e.height : 0) : g - e.translate(b + c, null, null, d) - e.transB
            }
        },
        getLabelPosition: function(a, b, c, d, e, f, g, h) {
            var i = this.axis
              , j = i.transA
              , k = i.reversed
              , m = i.staggerLines
              , n = i.tickRotCorr || {
                x: 0,
                y: 0
            }
              , c = p(e.y, n.y + (i.side === 2 ? 8 : -(c.getBBox().height / 2)))
              , a = a + e.x + n.x - (f && d ? f * j * (k ? -1 : 1) : 0)
              , b = b + c - (f && !d ? f * j * (k ? 1 : -1) : 0);
            m && (b += g / (h || 1) % m * (i.labelOffset / m));
            return {
                x: a,
                y: w(b)
            }
        },
        getMarkPath: function(a, b, c, d, e, f) {
            return f.crispLine(["M", a, b, "L", a + (e ? 0 : -c), b + (e ? c : 0)], d)
        },
        render: function(a, b, c) {
            var d = this.axis
              , e = d.options
              , f = d.chart.renderer
              , g = d.horiz
              , h = this.type
              , i = this.label
              , j = this.pos
              , k = e.labels
              , m = this.gridLine
              , n = h ? h + "Grid" : "grid"
              , l = h ? h + "Tick" : "tick"
              , u = e[n + "LineWidth"]
              , r = e[n + "LineColor"]
              , o = e[n + "LineDashStyle"]
              , A = e[l + "Length"]
              , n = p(e[l + "Width"], !h && d.isXAxis ? 1 : 0)
              , v = e[l + "Color"]
              , y = e[l + "Position"]
              , l = this.mark
              , q = k.step
              , va = !0
              , s = d.tickmarkOffset
              , t = this.getPosition(g, j, s, b)
              , w = t.x
              , t = t.y
              , z = g && w === d.pos + d.len || !g && t === d.pos ? -1 : 1
              , c = p(c, 1);
            this.isActive = !0;
            if (u) {
                j = d.getPlotLinePath(j + s, u * z, b, !0);
                if (m === x) {
                    m = {
                        stroke: r,
                        "stroke-width": u
                    };
                    if (o)
                        m.dashstyle = o;
                    if (!h)
                        m.zIndex = 1;
                    if (b)
                        m.opacity = 0;
                    this.gridLine = m = u ? f.path(j).attr(m).add(d.gridGroup) : null
                }
                if (!b && m && j)
                    m[this.isNew ? "attr" : "animate"]({
                        d: j,
                        opacity: c
                    })
            }
            if (n && A)
                y === "inside" && (A = -A),
                d.opposite && (A = -A),
                h = this.getMarkPath(w, t, A, n * z, g, f),
                l ? l.animate({
                    d: h,
                    opacity: c
                }) : this.mark = f.path(h).attr({
                    stroke: v,
                    "stroke-width": n,
                    opacity: c
                }).add(d.axisGroup);
            if (i && !isNaN(w))
                i.xy = t = this.getLabelPosition(w, t, i, g, k, s, a, q),
                this.isFirst && !this.isLast && !p(e.showFirstLabel, 1) || this.isLast && !this.isFirst && !p(e.showLastLabel, 1) ? va = !1 : g && !d.isRadial && !k.step && !k.rotation && !b && c !== 0 && this.handleOverflow(t),
                q && a % q && (va = !1),
                va && !isNaN(t.y) ? (t.opacity = c,
                i[this.isNew ? "attr" : "animate"](t),
                this.isNew = !1) : i.attr("y", -9999)
        },
        destroy: function() {
            Pa(this, this.axis)
        }
    };
    B.PlotLineOrBand = function(a, b) {
        this.axis = a;
        if (b)
            this.options = b,
            this.id = b.id
    }
    ;
    B.PlotLineOrBand.prototype = {
        render: function() {
            var a = this, b = a.axis, c = b.horiz, d = a.options, e = d.label, f = a.label, g = d.width, h = d.to, i = d.from, j = q(i) && q(h), k = d.value, m = d.dashStyle, n = a.svgElem, l = [], u, r = d.color, p = d.zIndex, o = d.events, v = {}, y = b.chart.renderer;
            b.isLog && (i = Ca(i),
            h = Ca(h),
            k = Ca(k));
            if (g) {
                if (l = b.getPlotLinePath(k, g),
                v = {
                    stroke: r,
                    "stroke-width": g
                },
                m)
                    v.dashstyle = m
            } else if (j) {
                l = b.getPlotBandPath(i, h, d);
                if (r)
                    v.fill = r;
                if (d.borderWidth)
                    v.stroke = d.borderColor,
                    v["stroke-width"] = d.borderWidth
            } else
                return;
            if (q(p))
                v.zIndex = p;
            if (n)
                if (l)
                    n.animate({
                        d: l
                    }, null, n.onGetPath);
                else {
                    if (n.hide(),
                    n.onGetPath = function() {
                        n.show()
                    }
                    ,
                    f)
                        a.label = f = f.destroy()
                }
            else if (l && l.length && (a.svgElem = n = y.path(l).attr(v).add(),
            o))
                for (u in d = function(b) {
                    n.on(b, function(c) {
                        o[b].apply(a, [c])
                    })
                }
                ,
                o)
                    d(u);
            if (e && q(e.text) && l && l.length && b.width > 0 && b.height > 0) {
                e = D({
                    align: c && j && "center",
                    x: c ? !j && 4 : 10,
                    verticalAlign: !c && j && "middle",
                    y: c ? j ? 16 : 10 : j ? 6 : -4,
                    rotation: c && !j && 90
                }, e);
                if (!f) {
                    v = {
                        align: e.textAlign || e.align,
                        rotation: e.rotation
                    };
                    if (q(p))
                        v.zIndex = p;
                    a.label = f = y.text(e.text, 0, 0, e.useHTML).attr(v).css(e.style).add()
                }
                b = [l[1], l[4], j ? l[6] : l[1]];
                j = [l[2], l[5], j ? l[7] : l[2]];
                l = Oa(b);
                c = Oa(j);
                f.align(e, !1, {
                    x: l,
                    y: c,
                    width: Da(b) - l,
                    height: Da(j) - c
                });
                f.show()
            } else
                f && f.hide();
            return a
        },
        destroy: function() {
            ja(this.axis.plotLinesAndBands, this);
            delete this.axis;
            Pa(this)
        }
    };
    var ha = B.Axis = function() {
        this.init.apply(this, arguments)
    }
    ;
    ha.prototype = {
        defaultOptions: {
            dateTimeLabelFormats: {
                millisecond: "%H:%M:%S.%L",
                second: "%H:%M:%S",
                minute: "%H:%M",
                hour: "%H:%M",
                day: "%e. %b",
                week: "%e. %b",
                month: "%b '%y",
                year: "%Y"
            },
            endOnTick: !1,
            gridLineColor: "#D8D8D8",
            labels: {
                enabled: !0,
                style: {
                    color: "#606060",
                    cursor: "default",
                    fontSize: "11px"
                },
                x: 0,
                y: 15
            },
            lineColor: "#C0D0E0",
            lineWidth: 1,
            minPadding: 0.01,
            maxPadding: 0.01,
            minorGridLineColor: "#E0E0E0",
            minorGridLineWidth: 1,
            minorTickColor: "#A0A0A0",
            minorTickLength: 2,
            minorTickPosition: "outside",
            startOfWeek: 1,
            startOnTick: !1,
            tickColor: "#C0D0E0",
            tickLength: 10,
            tickmarkPlacement: "between",
            tickPixelInterval: 100,
            tickPosition: "outside",
            title: {
                align: "middle",
                style: {
                    color: "#707070"
                }
            },
            type: "linear"
        },
        defaultYAxisOptions: {
            endOnTick: !0,
            gridLineWidth: 1,
            tickPixelInterval: 72,
            showLastLabel: !0,
            labels: {
                x: -8,
                y: 3
            },
            lineWidth: 0,
            maxPadding: 0.05,
            minPadding: 0.05,
            startOnTick: !0,
            title: {
                rotation: 270,
                text: "Values"
            },
            stackLabels: {
                enabled: !1,
                formatter: function() {
                    return B.numberFormat(this.total, -1)
                },
                style: D(ba.line.dataLabels.style, {
                    color: "#000000"
                })
            }
        },
        defaultLeftAxisOptions: {
            labels: {
                x: -15,
                y: null
            },
            title: {
                rotation: 270
            }
        },
        defaultRightAxisOptions: {
            labels: {
                x: 15,
                y: null
            },
            title: {
                rotation: 90
            }
        },
        defaultBottomAxisOptions: {
            labels: {
                autoRotation: [-45],
                x: 0,
                y: null
            },
            title: {
                rotation: 0
            }
        },
        defaultTopAxisOptions: {
            labels: {
                autoRotation: [-45],
                x: 0,
                y: -15
            },
            title: {
                rotation: 0
            }
        },
        init: function(a, b) {
            var c = b.isX;
            this.chart = a;
            this.horiz = a.inverted ? !c : c;
            this.coll = (this.isXAxis = c) ? "xAxis" : "yAxis";
            this.opposite = b.opposite;
            this.side = b.side || (this.horiz ? this.opposite ? 0 : 2 : this.opposite ? 1 : 3);
            this.setOptions(b);
            var d = this.options
              , e = d.type;
            this.labelFormatter = d.labels.formatter || this.defaultLabelFormatter;
            this.userOptions = b;
            this.minPixelPadding = 0;
            this.reversed = d.reversed;
            this.visible = d.visible !== !1;
            this.zoomEnabled = d.zoomEnabled !== !1;
            this.categories = d.categories || e === "category";
            this.names = this.names || [];
            this.isLog = e === "logarithmic";
            this.isDatetimeAxis = e === "datetime";
            this.isLinked = q(d.linkedTo);
            this.ticks = {};
            this.labelEdge = [];
            this.minorTicks = {};
            this.plotLinesAndBands = [];
            this.alternateBands = {};
            this.len = 0;
            this.minRange = this.userMinRange = d.minRange || d.maxZoom;
            this.range = d.range;
            this.offset = d.offset || 0;
            this.stacks = {};
            this.oldStacks = {};
            this.stacksTouched = 0;
            this.min = this.max = null;
            this.crosshair = p(d.crosshair, ra(a.options.tooltip.crosshairs)[c ? 0 : 1], !1);
            var f, d = this.options.events;
            La(this, a.axes) === -1 && (c && !this.isColorAxis ? a.axes.splice(a.xAxis.length, 0, this) : a.axes.push(this),
            a[this.coll].push(this));
            this.series = this.series || [];
            if (a.inverted && c && this.reversed === x)
                this.reversed = !0;
            this.removePlotLine = this.removePlotBand = this.removePlotBandOrLine;
            for (f in d)
                I(this, f, d[f]);
            if (this.isLog)
                this.val2lin = Ca,
                this.lin2val = ia
        },
        setOptions: function(a) {
            this.options = D(this.defaultOptions, this.isXAxis ? {} : this.defaultYAxisOptions, [this.defaultTopAxisOptions, this.defaultRightAxisOptions, this.defaultBottomAxisOptions, this.defaultLeftAxisOptions][this.side], D(S[this.coll], a))
        },
        defaultLabelFormatter: function() {
            var a = this.axis, b = this.value, c = a.categories, d = this.dateTimeLabelFormat, e = S.lang.numericSymbols, f = e && e.length, g, h = a.options.labels.format, a = a.isLog ? b : a.tickInterval;
            if (h)
                g = Ia(h, this);
            else if (c)
                g = b;
            else if (d)
                g = Na(d, b);
            else if (f && a >= 1E3)
                for (; f-- && g === x; )
                    c = Math.pow(1E3, f + 1),
                    a >= c && b * 10 % c === 0 && e[f] !== null && (g = B.numberFormat(b / c, -1) + e[f]);
            g === x && (g = O(b) >= 1E4 ? B.numberFormat(b, -1) : B.numberFormat(b, -1, x, ""));
            return g
        },
        getSeriesExtremes: function() {
            var a = this
              , b = a.chart;
            a.hasVisibleSeries = !1;
            a.dataMin = a.dataMax = a.threshold = null;
            a.softThreshold = !a.isXAxis;
            a.buildStacks && a.buildStacks();
            o(a.series, function(c) {
                if (c.visible || !b.options.chart.ignoreHiddenSeries) {
                    var d = c.options, e = d.threshold, f;
                    a.hasVisibleSeries = !0;
                    a.isLog && e <= 0 && (e = null);
                    if (a.isXAxis) {
                        if (d = c.xData,
                        d.length)
                            a.dataMin = z(p(a.dataMin, d[0]), Oa(d)),
                            a.dataMax = s(p(a.dataMax, d[0]), Da(d))
                    } else {
                        c.getExtremes();
                        f = c.dataMax;
                        c = c.dataMin;
                        if (q(c) && q(f))
                            a.dataMin = z(p(a.dataMin, c), c),
                            a.dataMax = s(p(a.dataMax, f), f);
                        if (q(e))
                            a.threshold = e;
                        if (!d.softThreshold || a.isLog)
                            a.softThreshold = !1
                    }
                }
            })
        },
        translate: function(a, b, c, d, e, f) {
            var g = this.linkedParent || this
              , h = 1
              , i = 0
              , j = d ? g.oldTransA : g.transA
              , d = d ? g.oldMin : g.min
              , k = g.minPixelPadding
              , e = (g.doPostTranslate || g.isLog && e) && g.lin2val;
            if (!j)
                j = g.transA;
            if (c)
                h *= -1,
                i = g.len;
            g.reversed && (h *= -1,
            i -= h * (g.sector || g.len));
            b ? (a = a * h + i,
            a -= k,
            a = a / j + d,
            e && (a = g.lin2val(a))) : (e && (a = g.val2lin(a)),
            f === "between" && (f = 0.5),
            a = h * (a - d) * j + i + h * k + (qa(f) ? j * f * g.pointRange : 0));
            return a
        },
        toPixels: function(a, b) {
            return this.translate(a, !1, !this.horiz, null, !0) + (b ? 0 : this.pos)
        },
        toValue: function(a, b) {
            return this.translate(a - (b ? 0 : this.pos), !0, !this.horiz, null, !0)
        },
        getPlotLinePath: function(a, b, c, d, e) {
            var f = this.chart, g = this.left, h = this.top, i, j, k = c && f.oldChartHeight || f.chartHeight, m = c && f.oldChartWidth || f.chartWidth, n;
            i = this.transB;
            var l = function(a, b, c) {
                if (a < b || a > c)
                    d ? a = z(s(b, a), c) : n = !0;
                return a
            }
              , e = p(e, this.translate(a, null, null, c))
              , a = c = w(e + i);
            i = j = w(k - e - i);
            isNaN(e) ? n = !0 : this.horiz ? (i = h,
            j = k - this.bottom,
            a = c = l(a, g, g + this.width)) : (a = g,
            c = m - this.right,
            i = j = l(i, h, h + this.height));
            return n && !d ? null : f.renderer.crispLine(["M", a, i, "L", c, j], b || 1)
        },
        getLinearTickPositions: function(a, b, c) {
            var d, e = ea(T(b / a) * a), f = ea(ta(c / a) * a), g = [];
            if (b === c && qa(b))
                return [b];
            for (b = e; b <= f; ) {
                g.push(b);
                b = ea(b + a);
                if (b === d)
                    break;
                d = b
            }
            return g
        },
        getMinorTickPositions: function() {
            var a = this.options, b = this.tickPositions, c = this.minorTickInterval, d = [], e, f = this.pointRangePadding || 0;
            e = this.min - f;
            var f = this.max + f
              , g = f - e;
            if (g && g / c < this.len / 3)
                if (this.isLog) {
                    f = b.length;
                    for (e = 1; e < f; e++)
                        d = d.concat(this.getLogTickPositions(c, b[e - 1], b[e], !0))
                } else if (this.isDatetimeAxis && a.minorTickInterval === "auto")
                    d = d.concat(this.getTimeTicks(this.normalizeTimeTickInterval(c), e, f, a.startOfWeek));
                else
                    for (b = e + (b[0] - e) % c; b <= f; b += c)
                        d.push(b);
            d.length !== 0 && this.trimTicks(d, a.startOnTick, a.endOnTick);
            return d
        },
        adjustForMinRange: function() {
            var a = this.options, b = this.min, c = this.max, d, e = this.dataMax - this.dataMin >= this.minRange, f, g, h, i, j, k;
            if (this.isXAxis && this.minRange === x && !this.isLog)
                q(a.min) || q(a.max) ? this.minRange = null : (o(this.series, function(a) {
                    i = a.xData;
                    for (g = j = a.xIncrement ? 1 : i.length - 1; g > 0; g--)
                        if (h = i[g] - i[g - 1],
                        f === x || h < f)
                            f = h
                }),
                this.minRange = z(f * 5, this.dataMax - this.dataMin));
            if (c - b < this.minRange) {
                k = this.minRange;
                d = (k - c + b) / 2;
                d = [b - d, p(a.min, b - d)];
                if (e)
                    d[2] = this.dataMin;
                b = Da(d);
                c = [b + k, p(a.max, b + k)];
                if (e)
                    c[2] = this.dataMax;
                c = Oa(c);
                c - b < k && (d[0] = c - k,
                d[1] = p(a.min, c - k),
                b = Da(d))
            }
            this.min = b;
            this.max = c
        },
        setAxisTranslation: function(a) {
            var b = this, c = b.max - b.min, d = b.axisPointRange || 0, e, f = 0, g = 0, h = b.linkedParent, i = !!b.categories, j = b.transA, k = b.isXAxis;
            if (k || i || d)
                if (h ? (f = h.minPointOffset,
                g = h.pointRangePadding) : o(b.series, function(a) {
                    var c = i ? 1 : k ? a.pointRange : b.axisPointRange || 0
                      , h = a.options.pointPlacement
                      , j = a.closestPointRange;
                    d = s(d, c);
                    b.single || (f = s(f, Ba(h) ? 0 : c / 2),
                    g = s(g, h === "on" ? 0 : c));
                    !a.noSharedTooltip && q(j) && (e = q(e) ? z(e, j) : j)
                }),
                h = b.ordinalSlope && e ? b.ordinalSlope / e : 1,
                b.minPointOffset = f *= h,
                b.pointRangePadding = g *= h,
                b.pointRange = z(d, c),
                k)
                    b.closestPointRange = e;
            if (a)
                b.oldTransA = j;
            b.translationSlope = b.transA = j = b.len / (c + g || 1);
            b.transB = b.horiz ? b.left : b.bottom;
            b.minPixelPadding = j * f
        },
        minFromRange: function() {
            return this.max - this.range
        },
        setTickInterval: function(a) {
            var b = this, c = b.chart, d = b.options, e = b.isLog, f = b.isDatetimeAxis, g = b.isXAxis, h = b.isLinked, i = d.maxPadding, j = d.minPadding, k = d.tickInterval, m = d.tickPixelInterval, n = b.categories, l = b.threshold, u = b.softThreshold, r, Z, A, v;
            !f && !n && !h && this.getTickAmount();
            A = p(b.userMin, d.min);
            v = p(b.userMax, d.max);
            h ? (b.linkedParent = c[b.coll][d.linkedTo],
            c = b.linkedParent.getExtremes(),
            b.min = p(c.min, c.dataMin),
            b.max = p(c.max, c.dataMax),
            d.type !== b.linkedParent.options.type && la(11, 1)) : (!u && q(l) && (b.dataMin >= l ? (r = l,
            j = 0) : b.dataMax <= l && (Z = l,
            i = 0)),
            b.min = p(A, r, b.dataMin),
            b.max = p(v, Z, b.dataMax));
            if (e)
                !a && z(b.min, p(b.dataMin, b.min)) <= 0 && la(10, 1),
                b.min = ea(Ca(b.min), 15),
                b.max = ea(Ca(b.max), 15);
            if (b.range && q(b.max))
                b.userMin = b.min = A = s(b.min, b.minFromRange()),
                b.userMax = v = b.max,
                b.range = null;
            b.beforePadding && b.beforePadding();
            b.adjustForMinRange();
            if (!n && !b.axisPointRange && !b.usePercentage && !h && q(b.min) && q(b.max) && (c = b.max - b.min))
                !q(A) && j && (b.min -= c * j),
                !q(v) && i && (b.max += c * i);
            if (qa(d.floor))
                b.min = s(b.min, d.floor);
            if (qa(d.ceiling))
                b.max = z(b.max, d.ceiling);
            if (u && q(b.dataMin))
                if (l = l || 0,
                !q(A) && b.min < l && b.dataMin >= l)
                    b.min = l;
                else if (!q(v) && b.max > l && b.dataMax <= l)
                    b.max = l;
            b.tickInterval = b.min === b.max || b.min === void 0 || b.max === void 0 ? 1 : h && !k && m === b.linkedParent.options.tickPixelInterval ? k = b.linkedParent.tickInterval : p(k, this.tickAmount ? (b.max - b.min) / s(this.tickAmount - 1, 1) : void 0, n ? 1 : (b.max - b.min) * m / s(b.len, m));
            g && !a && o(b.series, function(a) {
                a.processData(b.min !== b.oldMin || b.max !== b.oldMax)
            });
            b.setAxisTranslation(!0);
            b.beforeSetTickPositions && b.beforeSetTickPositions();
            if (b.postProcessTickInterval)
                b.tickInterval = b.postProcessTickInterval(b.tickInterval);
            if (b.pointRange)
                b.tickInterval = s(b.pointRange, b.tickInterval);
            a = p(d.minTickInterval, b.isDatetimeAxis && b.closestPointRange);
            if (!k && b.tickInterval < a)
                b.tickInterval = a;
            if (!f && !e && !k)
                b.tickInterval = pb(b.tickInterval, null, ob(b.tickInterval), p(d.allowDecimals, !(b.tickInterval > 0.5 && b.tickInterval < 5 && b.max > 1E3 && b.max < 9999)), !!this.tickAmount);
            if (!this.tickAmount && this.len)
                b.tickInterval = b.unsquish();
            this.setTickPositions()
        },
        setTickPositions: function() {
            var a = this.options, b, c = a.tickPositions, d = a.tickPositioner, e = a.startOnTick, f = a.endOnTick, g;
            this.tickmarkOffset = this.categories && a.tickmarkPlacement === "between" && this.tickInterval === 1 ? 0.5 : 0;
            this.minorTickInterval = a.minorTickInterval === "auto" && this.tickInterval ? this.tickInterval / 5 : a.minorTickInterval;
            this.tickPositions = b = c && c.slice();
            if (!b && (b = this.isDatetimeAxis ? this.getTimeTicks(this.normalizeTimeTickInterval(this.tickInterval, a.units), this.min, this.max, a.startOfWeek, this.ordinalPositions, this.closestPointRange, !0) : this.isLog ? this.getLogTickPositions(this.tickInterval, this.min, this.max) : this.getLinearTickPositions(this.tickInterval, this.min, this.max),
            b.length > this.len && (b = [b[0], b.pop()]),
            this.tickPositions = b,
            d && (d = d.apply(this, [this.min, this.max]))))
                this.tickPositions = b = d;
            if (!this.isLinked)
                this.trimTicks(b, e, f),
                this.min === this.max && q(this.min) && !this.tickAmount && (g = !0,
                this.min -= 0.5,
                this.max += 0.5),
                this.single = g,
                !c && !d && this.adjustTickAmount()
        },
        trimTicks: function(a, b, c) {
            var d = a[0]
              , e = a[a.length - 1]
              , f = this.minPointOffset || 0;
            b ? this.min = d : this.min - f > d && a.shift();
            c ? this.max = e : this.max + f < e && a.pop();
            a.length === 0 && q(d) && a.push((e + d) / 2)
        },
        getTickAmount: function() {
            var a = {}, b, c = this.options, d = c.tickAmount, e = c.tickPixelInterval;
            !q(c.tickInterval) && this.len < e && !this.isRadial && !this.isLog && c.startOnTick && c.endOnTick && (d = 2);
            !d && this.chart.options.chart.alignTicks !== !1 && c.alignTicks !== !1 && (o(this.chart[this.coll], function(c) {
                var d = c.options
                  , e = c.horiz
                  , d = [e ? d.left : d.top, e ? d.width : d.height, d.pane].join(",");
                c.series.length && (a[d] ? b = !0 : a[d] = 1)
            }),
            b && (d = ta(this.len / e) + 1));
            if (d < 4)
                this.finalTickAmt = d,
                d = 5;
            this.tickAmount = d
        },
        adjustTickAmount: function() {
            var a = this.tickInterval
              , b = this.tickPositions
              , c = this.tickAmount
              , d = this.finalTickAmt
              , e = b && b.length;
            if (e < c) {
                for (; b.length < c; )
                    b.push(ea(b[b.length - 1] + a));
                this.transA *= (e - 1) / (c - 1);
                this.max = b[b.length - 1]
            } else
                e > c && (this.tickInterval *= 2,
                this.setTickPositions());
            if (q(d)) {
                for (a = c = b.length; a--; )
                    (d === 3 && a % 2 === 1 || d <= 2 && a > 0 && a < c - 1) && b.splice(a, 1);
                this.finalTickAmt = x
            }
        },
        setScale: function() {
            var a, b;
            this.oldMin = this.min;
            this.oldMax = this.max;
            this.oldAxisLength = this.len;
            this.setAxisSize();
            b = this.len !== this.oldAxisLength;
            o(this.series, function(b) {
                if (b.isDirtyData || b.isDirty || b.xAxis.isDirty)
                    a = !0
            });
            if (b || a || this.isLinked || this.forceRedraw || this.userMin !== this.oldUserMin || this.userMax !== this.oldUserMax) {
                if (this.resetStacks && this.resetStacks(),
                this.forceRedraw = !1,
                this.getSeriesExtremes(),
                this.setTickInterval(),
                this.oldUserMin = this.userMin,
                this.oldUserMax = this.userMax,
                !this.isDirty)
                    this.isDirty = b || this.min !== this.oldMin || this.max !== this.oldMax
            } else
                this.cleanStacks && this.cleanStacks()
        },
        setExtremes: function(a, b, c, d, e) {
            var f = this
              , g = f.chart
              , c = p(c, !0);
            o(f.series, function(a) {
                delete a.kdTree
            });
            e = t(e, {
                min: a,
                max: b
            });
            J(f, "setExtremes", e, function() {
                f.userMin = a;
                f.userMax = b;
                f.eventArgs = e;
                c && g.redraw(d)
            })
        },
        zoom: function(a, b) {
            var c = this.dataMin
              , d = this.dataMax
              , e = this.options
              , f = z(c, p(e.min, c))
              , e = s(d, p(e.max, d));
            this.allowZoomOutside || (q(c) && a <= f && (a = f),
            q(d) && b >= e && (b = e));
            this.displayBtn = a !== x || b !== x;
            this.setExtremes(a, b, !1, x, {
                trigger: "zoom"
            });
            return !0
        },
        setAxisSize: function() {
            var a = this.chart
              , b = this.options
              , c = b.offsetLeft || 0
              , d = this.horiz
              , e = p(b.width, a.plotWidth - c + (b.offsetRight || 0))
              , f = p(b.height, a.plotHeight)
              , g = p(b.top, a.plotTop)
              , b = p(b.left, a.plotLeft + c)
              , c = /%$/;
            c.test(f) && (f = parseFloat(f) / 100 * a.plotHeight);
            c.test(g) && (g = parseFloat(g) / 100 * a.plotHeight + a.plotTop);
            this.left = b;
            this.top = g;
            this.width = e;
            this.height = f;
            this.bottom = a.chartHeight - f - g;
            this.right = a.chartWidth - e - b;
            this.len = s(d ? e : f, 0);
            this.pos = d ? b : g
        },
        getExtremes: function() {
            var a = this.isLog;
            return {
                min: a ? ea(ia(this.min)) : this.min,
                max: a ? ea(ia(this.max)) : this.max,
                dataMin: this.dataMin,
                dataMax: this.dataMax,
                userMin: this.userMin,
                userMax: this.userMax
            }
        },
        getThreshold: function(a) {
            var b = this.isLog
              , c = b ? ia(this.min) : this.min
              , b = b ? ia(this.max) : this.max;
            a === null ? a = b < 0 ? b : c : c > a ? a = c : b < a && (a = b);
            return this.translate(a, 0, 1, 0, 1)
        },
        autoLabelAlign: function(a) {
            a = (p(a, 0) - this.side * 90 + 720) % 360;
            return a > 15 && a < 165 ? "right" : a > 195 && a < 345 ? "left" : "center"
        },
        unsquish: function() {
            var a = this.ticks, b = this.options.labels, c = this.horiz, d = this.tickInterval, e = d, f = this.len / (((this.categories ? 1 : 0) + this.max - this.min) / d), g, h = b.rotation, i = this.chart.renderer.fontMetrics(b.style.fontSize, a[0] && a[0].label), j, k = Number.MAX_VALUE, m, n = function(a) {
                a /= f || 1;
                a = a > 1 ? ta(a) : 1;
                return a * d
            };
            c ? (m = !b.staggerLines && !b.step && (q(h) ? [h] : f < p(b.autoRotationLimit, 80) && b.autoRotation)) && o(m, function(a) {
                var b;
                if (a === h || a && a >= -90 && a <= 90)
                    j = n(O(i.h / aa(ga * a))),
                    b = j + O(a / 360),
                    b < k && (k = b,
                    g = a,
                    e = j)
            }) : b.step || (e = n(i.h));
            this.autoRotation = m;
            this.labelRotation = p(g, h);
            return e
        },
        renderUnsquish: function() {
            var a = this.chart, b = a.renderer, c = this.tickPositions, d = this.ticks, e = this.options.labels, f = this.horiz, g = a.margin, h = this.categories ? c.length : c.length - 1, i = this.slotWidth = f && !e.step && !e.rotation && (this.staggerLines || 1) * a.plotWidth / h || !f && (g[3] && g[3] - a.spacing[3] || a.chartWidth * 0.33), j = s(1, w(i - 2 * (e.padding || 5))), k = {}, g = b.fontMetrics(e.style.fontSize, d[0] && d[0].label), h = e.style.textOverflow, m, n = 0;
            if (!Ba(e.rotation))
                k.rotation = e.rotation || 0;
            if (this.autoRotation)
                o(c, function(a) {
                    if ((a = d[a]) && a.labelLength > n)
                        n = a.labelLength
                }),
                n > j && n > g.h ? k.rotation = this.labelRotation : this.labelRotation = 0;
            else if (i && (m = {
                width: j + "px"
            },
            !h)) {
                m.textOverflow = "clip";
                for (i = c.length; !f && i--; )
                    if (j = c[i],
                    j = d[j].label)
                        if (j.styles.textOverflow === "ellipsis" && j.css({
                            textOverflow: "clip"
                        }),
                        j.getBBox().height > this.len / c.length - (g.h - g.f))
                            j.specCss = {
                                textOverflow: "ellipsis"
                            }
            }
            if (k.rotation && (m = {
                width: (n > a.chartHeight * 0.5 ? a.chartHeight * 0.33 : a.chartHeight) + "px"
            },
            !h))
                m.textOverflow = "ellipsis";
            this.labelAlign = k.align = e.align || this.autoLabelAlign(this.labelRotation);
            o(c, function(a) {
                var b = (a = d[a]) && a.label;
                if (b)
                    b.attr(k),
                    m && b.css(D(m, b.specCss)),
                    delete b.specCss,
                    a.rotation = k.rotation
            });
            this.tickRotCorr = b.rotCorr(g.b, this.labelRotation || 0, this.side === 2)
        },
        hasData: function() {
            return this.hasVisibleSeries || q(this.min) && q(this.max) && !!this.tickPositions
        },
        getOffset: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.options, e = a.tickPositions, f = a.ticks, g = a.horiz, h = a.side, i = b.inverted ? [1, 0, 3, 2][h] : h, j, k, m = 0, n, l = 0, u = d.title, r = d.labels, Z = 0, A = b.axisOffset, b = b.clipOffset, v = [-1, 1, 1, -1][h], y, t = a.axisParent;
            j = a.hasData();
            a.showAxis = k = j || p(d.showEmpty, !0);
            a.staggerLines = a.horiz && r.staggerLines;
            if (!a.axisGroup)
                a.gridGroup = c.g("grid").attr({
                    zIndex: d.gridZIndex || 1
                }).add(t),
                a.axisGroup = c.g("axis").attr({
                    zIndex: d.zIndex || 2
                }).add(t),
                a.labelGroup = c.g("axis-labels").attr({
                    zIndex: r.zIndex || 7
                }).addClass("highcharts-" + a.coll.toLowerCase() + "-labels").add(t);
            if (j || a.isLinked) {
                if (o(e, function(b) {
                    f[b] ? f[b].addLabel() : f[b] = new Sa(a,b)
                }),
                a.renderUnsquish(),
                o(e, function(b) {
                    if (h === 0 || h === 2 || {
                        1: "left",
                        3: "right"
                    }[h] === a.labelAlign)
                        Z = s(f[b].getLabelSize(), Z)
                }),
                a.staggerLines)
                    Z *= a.staggerLines,
                    a.labelOffset = Z
            } else
                for (y in f)
                    f[y].destroy(),
                    delete f[y];
            if (u && u.text && u.enabled !== !1) {
                if (!a.axisTitle)
                    a.axisTitle = c.text(u.text, 0, 0, u.useHTML).attr({
                        zIndex: 7,
                        rotation: u.rotation || 0,
                        align: u.textAlign || {
                            low: "left",
                            middle: "center",
                            high: "right"
                        }[u.align]
                    }).addClass("highcharts-" + this.coll.toLowerCase() + "-title").css(u.style).add(a.axisGroup),
                    a.axisTitle.isNew = !0;
                if (k)
                    m = a.axisTitle.getBBox()[g ? "height" : "width"],
                    n = u.offset,
                    l = q(n) ? 0 : p(u.margin, g ? 5 : 10);
                a.axisTitle[k ? "show" : "hide"]()
            }
            a.offset = v * p(d.offset, A[h]);
            a.tickRotCorr = a.tickRotCorr || {
                x: 0,
                y: 0
            };
            c = h === 2 ? a.tickRotCorr.y : 0;
            g = Z + l + (Z && v * (g ? p(r.y, a.tickRotCorr.y + 8) : r.x) - c);
            a.axisTitleMargin = p(n, g);
            A[h] = s(A[h], a.axisTitleMargin + m + v * a.offset, g);
            d = d.offset ? 0 : T(d.lineWidth / 2) * 2;
            b[i] = s(b[i], d)
        },
        getLinePath: function(a) {
            var b = this.chart
              , c = this.opposite
              , d = this.offset
              , e = this.horiz
              , f = this.left + (c ? this.width : 0) + d
              , d = b.chartHeight - this.bottom - (c ? this.height : 0) + d;
            c && (a *= -1);
            return b.renderer.crispLine(["M", e ? this.left : f, e ? d : this.top, "L", e ? b.chartWidth - this.right : f, e ? d : b.chartHeight - this.bottom], a)
        },
        getTitlePosition: function() {
            var a = this.horiz
              , b = this.left
              , c = this.top
              , d = this.len
              , e = this.options.title
              , f = a ? b : c
              , g = this.opposite
              , h = this.offset
              , i = e.x || 0
              , j = e.y || 0
              , k = G(e.style.fontSize || 12)
              , d = {
                low: f + (a ? 0 : d),
                middle: f + d / 2,
                high: f + (a ? d : 0)
            }[e.align]
              , b = (a ? c + this.height : b) + (a ? 1 : -1) * (g ? -1 : 1) * this.axisTitleMargin + (this.side === 2 ? k : 0);
            return {
                x: a ? d + i : b + (g ? this.width : 0) + h + i,
                y: a ? b + j - (g ? this.height : 0) + h : d + j
            }
        },
        render: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.options, e = a.isLog, f = a.isLinked, g = a.tickPositions, h = a.axisTitle, i = a.ticks, j = a.minorTicks, k = a.alternateBands, m = d.stackLabels, n = d.alternateGridColor, l = a.tickmarkOffset, u = d.lineWidth, r, p = b.hasRendered && q(a.oldMin) && !isNaN(a.oldMin), A = a.showAxis, v = c.globalAnimation, y, s;
            a.labelEdge.length = 0;
            a.overlap = !1;
            o([i, j, k], function(a) {
                for (var b in a)
                    a[b].isActive = !1
            });
            if (a.hasData() || f) {
                a.minorTickInterval && !a.categories && o(a.getMinorTickPositions(), function(b) {
                    j[b] || (j[b] = new Sa(a,b,"minor"));
                    p && j[b].isNew && j[b].render(null, !0);
                    j[b].render(null, !1, 1)
                });
                if (g.length && (o(g, function(b, c) {
                    if (!f || b >= a.min && b <= a.max)
                        i[b] || (i[b] = new Sa(a,b)),
                        p && i[b].isNew && i[b].render(c, !0, 0.1),
                        i[b].render(c)
                }),
                l && (a.min === 0 || a.single)))
                    i[-1] || (i[-1] = new Sa(a,-1,null,!0)),
                    i[-1].render(-1);
                n && o(g, function(b, c) {
                    s = g[c + 1] !== x ? g[c + 1] + l : a.max - l;
                    if (c % 2 === 0 && b < a.max && s <= a.max - l)
                        k[b] || (k[b] = new B.PlotLineOrBand(a)),
                        y = b + l,
                        k[b].options = {
                            from: e ? ia(y) : y,
                            to: e ? ia(s) : s,
                            color: n
                        },
                        k[b].render(),
                        k[b].isActive = !0
                });
                if (!a._addedPlotLB)
                    o((d.plotLines || []).concat(d.plotBands || []), function(b) {
                        a.addPlotBandOrLine(b)
                    }),
                    a._addedPlotLB = !0
            }
            o([i, j, k], function(a) {
                var c, d, e = [], f = v ? v.duration || 500 : 0, g = function() {
                    for (d = e.length; d--; )
                        a[e[d]] && !a[e[d]].isActive && (a[e[d]].destroy(),
                        delete a[e[d]])
                };
                for (c in a)
                    if (!a[c].isActive)
                        a[c].render(c, !1, 0),
                        a[c].isActive = !1,
                        e.push(c);
                a === k || !b.hasRendered || !f ? g() : f && setTimeout(g, f)
            });
            if (u)
                r = a.getLinePath(u),
                a.axisLine ? a.axisLine.animate({
                    d: r
                }) : a.axisLine = c.path(r).attr({
                    stroke: d.lineColor,
                    "stroke-width": u,
                    zIndex: 7
                }).add(a.axisGroup),
                a.axisLine[A ? "show" : "hide"]();
            if (h && A)
                h[h.isNew ? "attr" : "animate"](a.getTitlePosition()),
                h.isNew = !1;
            m && m.enabled && a.renderStackTotals();
            a.isDirty = !1
        },
        redraw: function() {
            this.visible && (this.render(),
            o(this.plotLinesAndBands, function(a) {
                a.render()
            }));
            o(this.series, function(a) {
                a.isDirty = !0
            })
        },
        destroy: function(a) {
            var b = this, c = b.stacks, d, e = b.plotLinesAndBands;
            a || Y(b);
            for (d in c)
                Pa(c[d]),
                c[d] = null;
            o([b.ticks, b.minorTicks, b.alternateBands], function(a) {
                Pa(a)
            });
            for (a = e.length; a--; )
                e[a].destroy();
            o("stackTotalGroup,axisLine,axisTitle,axisGroup,cross,gridGroup,labelGroup".split(","), function(a) {
                b[a] && (b[a] = b[a].destroy())
            });
            this.cross && this.cross.destroy()
        },
        drawCrosshair: function(a, b) {
            var c, d = this.crosshair, e = d.animation;
            if (!this.crosshair || (q(b) || !p(this.crosshair.snap, !0)) === !1 || b && b.series && b.series[this.coll] !== this)
                this.hideCrosshair();
            else if (p(d.snap, !0) ? q(b) && (c = this.isXAxis ? b.plotX : this.len - b.plotY) : c = this.horiz ? a.chartX - this.pos : this.len - a.chartY + this.pos,
            c = this.isRadial ? this.getPlotLinePath(this.isXAxis ? b.x : p(b.stackY, b.y)) || null : this.getPlotLinePath(null, null, null, null, c) || null,
            c === null)
                this.hideCrosshair();
            else if (this.cross)
                this.cross.attr({
                    visibility: "visible"
                })[e ? "animate" : "attr"]({
                    d: c
                }, e);
            else {
                e = this.categories && !this.isRadial;
                e = {
                    "stroke-width": d.width || (e ? this.transA : 1),
                    stroke: d.color || (e ? "rgba(155,200,255,0.2)" : "#C0C0C0"),
                    zIndex: d.zIndex || 2
                };
                if (d.dashStyle)
                    e.dashstyle = d.dashStyle;
                this.cross = this.chart.renderer.path(c).attr(e).add()
            }
        },
        hideCrosshair: function() {
            this.cross && this.cross.hide()
        }
    };
    t(ha.prototype, {
        getPlotBandPath: function(a, b) {
            var c = this.getPlotLinePath(b, null, null, !0)
              , d = this.getPlotLinePath(a, null, null, !0);
            d && c && d.toString() !== c.toString() ? d.push(c[4], c[5], c[1], c[2]) : d = null;
            return d
        },
        addPlotBand: function(a) {
            return this.addPlotBandOrLine(a, "plotBands")
        },
        addPlotLine: function(a) {
            return this.addPlotBandOrLine(a, "plotLines")
        },
        addPlotBandOrLine: function(a, b) {
            var c = (new B.PlotLineOrBand(this,a)).render()
              , d = this.userOptions;
            c && (b && (d[b] = d[b] || [],
            d[b].push(a)),
            this.plotLinesAndBands.push(c));
            return c
        },
        removePlotBandOrLine: function(a) {
            for (var b = this.plotLinesAndBands, c = this.options, d = this.userOptions, e = b.length; e--; )
                b[e].id === a && b[e].destroy();
            o([c.plotLines || [], d.plotLines || [], c.plotBands || [], d.plotBands || []], function(b) {
                for (e = b.length; e--; )
                    b[e].id === a && ja(b, b[e])
            })
        }
    });
    ha.prototype.getTimeTicks = function(a, b, c, d) {
        var e = [], f = {}, g = S.global.useUTC, h, i = new ya(b - Wa(b)), j = a.unitRange, k = a.count;
        if (q(b)) {
            i[Db](j >= F.second ? 0 : k * T(i.getMilliseconds() / k));
            if (j >= F.second)
                i[Eb](j >= F.minute ? 0 : k * T(i.getSeconds() / k));
            if (j >= F.minute)
                i[Fb](j >= F.hour ? 0 : k * T(i[rb]() / k));
            if (j >= F.hour)
                i[Gb](j >= F.day ? 0 : k * T(i[sb]() / k));
            if (j >= F.day)
                i[ub](j >= F.month ? 1 : k * T(i[Xa]() / k));
            j >= F.month && (i[vb](j >= F.year ? 0 : k * T(i[Ya]() / k)),
            h = i[Za]());
            j >= F.year && (h -= h % k,
            i[wb](h));
            if (j === F.week)
                i[ub](i[Xa]() - i[tb]() + p(d, 1));
            b = 1;
            if (nb || db)
                i = i.getTime(),
                i = new ya(i + Wa(i));
            h = i[Za]();
            for (var d = i.getTime(), m = i[Ya](), n = i[Xa](), l = (F.day + (g ? Wa(i) : i.getTimezoneOffset() * 6E4)) % F.day; d < c; )
                e.push(d),
                j === F.year ? d = fb(h + b * k, 0) : j === F.month ? d = fb(h, m + b * k) : !g && (j === F.day || j === F.week) ? d = fb(h, m, n + b * k * (j === F.day ? 1 : 7)) : d += j * k,
                b++;
            e.push(d);
            o(kb(e, function(a) {
                return j <= F.hour && a % F.day === l
            }), function(a) {
                f[a] = "day"
            })
        }
        e.info = t(a, {
            higherRanks: f,
            totalRange: j * k
        });
        return e
    }
    ;
    ha.prototype.normalizeTimeTickInterval = function(a, b) {
        var c = b || [["millisecond", [1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], ["second", [1, 2, 5, 10, 15, 30]], ["minute", [1, 2, 5, 10, 15, 30]], ["hour", [1, 2, 3, 4, 6, 8, 12]], ["day", [1, 2]], ["week", [1, 2]], ["month", [1, 2, 3, 4, 6]], ["year", null]], d = c[c.length - 1], e = F[d[0]], f = d[1], g;
        for (g = 0; g < c.length; g++)
            if (d = c[g],
            e = F[d[0]],
            f = d[1],
            c[g + 1] && a <= (e * f[f.length - 1] + F[c[g + 1][0]]) / 2)
                break;
        e === F.year && a < 5 * e && (f = [1, 2, 5]);
        c = pb(a / e, f, d[0] === "year" ? s(ob(a / e), 1) : 1);
        return {
            unitRange: e,
            count: c,
            unitName: d[0]
        }
    }
    ;
    ha.prototype.getLogTickPositions = function(a, b, c, d) {
        var e = this.options
          , f = this.len
          , g = [];
        if (!d)
            this._minorAutoInterval = null;
        if (a >= 0.5)
            a = w(a),
            g = this.getLinearTickPositions(a, b, c);
        else if (a >= 0.08)
            for (var f = T(b), h, i, j, k, m, e = a > 0.3 ? [1, 2, 4] : a > 0.15 ? [1, 2, 4, 6, 8] : [1, 2, 3, 4, 5, 6, 7, 8, 9]; f < c + 1 && !m; f++) {
                i = e.length;
                for (h = 0; h < i && !m; h++)
                    j = Ca(ia(f) * e[h]),
                    j > b && (!d || k <= c) && k !== x && g.push(k),
                    k > c && (m = !0),
                    k = j
            }
        else if (b = ia(b),
        c = ia(c),
        a = e[d ? "minorTickInterval" : "tickInterval"],
        a = p(a === "auto" ? null : a, this._minorAutoInterval, (c - b) * (e.tickPixelInterval / (d ? 5 : 1)) / ((d ? f / this.tickPositions.length : f) || 1)),
        a = pb(a, null, ob(a)),
        g = Ua(this.getLinearTickPositions(a, b, c), Ca),
        !d)
            this._minorAutoInterval = a / 5;
        if (!d)
            this.tickInterval = a;
        return g
    }
    ;
    var Mb = B.Tooltip = function() {
        this.init.apply(this, arguments)
    }
    ;
    Mb.prototype = {
        init: function(a, b) {
            var c = b.borderWidth
              , d = b.style
              , e = G(d.padding);
            this.chart = a;
            this.options = b;
            this.crosshairs = [];
            this.now = {
                x: 0,
                y: 0
            };
            this.isHidden = !0;
            this.label = a.renderer.label("", 0, 0, b.shape || "callout", null, null, b.useHTML, null, "tooltip").attr({
                padding: e,
                fill: b.backgroundColor,
                "stroke-width": c,
                r: b.borderRadius,
                zIndex: 8
            }).css(d).css({
                padding: 0
            }).add().attr({
                y: -9999
            });
            fa || this.label.shadow(b.shadow);
            this.shared = b.shared
        },
        destroy: function() {
            if (this.label)
                this.label = this.label.destroy();
            clearTimeout(this.hideTimer);
            clearTimeout(this.tooltipTimeout)
        },
        move: function(a, b, c, d) {
            var e = this
              , f = e.now
              , g = e.options.animation !== !1 && !e.isHidden && (O(a - f.x) > 1 || O(b - f.y) > 1)
              , h = e.followPointer || e.len > 1;
            t(f, {
                x: g ? (2 * f.x + a) / 3 : a,
                y: g ? (f.y + b) / 2 : b,
                anchorX: h ? x : g ? (2 * f.anchorX + c) / 3 : c,
                anchorY: h ? x : g ? (f.anchorY + d) / 2 : d
            });
            e.label.attr(f);
            if (g)
                clearTimeout(this.tooltipTimeout),
                this.tooltipTimeout = setTimeout(function() {
                    e && e.move(a, b, c, d)
                }, 32)
        },
        hide: function(a) {
            var b = this;
            clearTimeout(this.hideTimer);
            if (!this.isHidden)
                this.hideTimer = setTimeout(function() {
                    b.label.fadeOut();
                    b.isHidden = !0
                }, p(a, this.options.hideDelay, 500))
        },
        getAnchor: function(a, b) {
            var c, d = this.chart, e = d.inverted, f = d.plotTop, g = d.plotLeft, h = 0, i = 0, j, k, a = ra(a);
            c = a[0].tooltipPos;
            this.followPointer && b && (b.chartX === x && (b = d.pointer.normalize(b)),
            c = [b.chartX - d.plotLeft, b.chartY - f]);
            c || (o(a, function(a) {
                j = a.series.yAxis;
                k = a.series.xAxis;
                h += a.plotX + (!e && k ? k.left - g : 0);
                i += (a.plotLow ? (a.plotLow + a.plotHigh) / 2 : a.plotY) + (!e && j ? j.top - f : 0)
            }),
            h /= a.length,
            i /= a.length,
            c = [e ? d.plotWidth - i : h, this.shared && !e && a.length > 1 && b ? b.chartY - f : e ? d.plotHeight - h : i]);
            return Ua(c, w)
        },
        getPosition: function(a, b, c) {
            var d = this.chart, e = this.distance, f = {}, g = c.h || 0, h, i = ["y", d.chartHeight, b, c.plotY + d.plotTop, d.plotTop, d.plotTop + d.plotHeight], j = ["x", d.chartWidth, a, c.plotX + d.plotLeft, d.plotLeft, d.plotLeft + d.plotWidth], k = p(c.ttBelow, d.inverted && !c.negative || !d.inverted && c.negative), m = function(a, b, c, d, h, i) {
                var j = c < d - e
                  , n = d + e + c < b
                  , m = d - e - c;
                d += e;
                if (k && n)
                    f[a] = d;
                else if (!k && j)
                    f[a] = m;
                else if (j)
                    f[a] = z(i - c, m - g < 0 ? m : m - g);
                else if (n)
                    f[a] = s(h, d + g + c > b ? d : d + g);
                else
                    return !1
            }, n = function(a, b, c, d) {
                if (d < e || d > b - e)
                    return !1;
                else
                    f[a] = d < c / 2 ? 1 : d > b - c / 2 ? b - c - 2 : d - c / 2
            }, l = function(a) {
                var b = i;
                i = j;
                j = b;
                h = a
            }, u = function() {
                m.apply(0, i) !== !1 ? n.apply(0, j) === !1 && !h && (l(!0),
                u()) : h ? f.x = f.y = 0 : (l(!0),
                u())
            };
            (d.inverted || this.len > 1) && l();
            u();
            return f
        },
        defaultFormatter: function(a) {
            var b = this.points || ra(this), c;
            c = [a.tooltipFooterHeaderFormatter(b[0])];
            c = c.concat(a.bodyFormatter(b));
            c.push(a.tooltipFooterHeaderFormatter(b[0], !0));
            return c.join("")
        },
        refresh: function(a, b) {
            var c = this.chart, d = this.label, e = this.options, f, g, h, i = {}, j, k = [];
            j = e.formatter || this.defaultFormatter;
            var i = c.hoverPoints, m, n = this.shared;
            clearTimeout(this.hideTimer);
            this.followPointer = ra(a)[0].series.tooltipOptions.followPointer;
            h = this.getAnchor(a, b);
            f = h[0];
            g = h[1];
            n && (!a.series || !a.series.noSharedTooltip) ? (c.hoverPoints = a,
            i && o(i, function(a) {
                a.setState()
            }),
            o(a, function(a) {
                a.setState("hover");
                k.push(a.getLabelConfig())
            }),
            i = {
                x: a[0].category,
                y: a[0].y
            },
            i.points = k,
            this.len = k.length,
            a = a[0]) : i = a.getLabelConfig();
            j = j.call(i, this);
            i = a.series;
            this.distance = p(i.tooltipOptions.distance, 16);
            j === !1 ? this.hide() : (this.isHidden && (cb(d),
            d.attr("opacity", 1).show()),
            d.attr({
                text: j
            }),
            m = e.borderColor || a.color || i.color || "#606060",
            d.attr({
                stroke: m
            }),
            this.updatePosition({
                plotX: f,
                plotY: g,
                negative: a.negative,
                ttBelow: a.ttBelow,
                h: h[2] || 0
            }),
            this.isHidden = !1);
            J(c, "tooltipRefresh", {
                text: j,
                x: f + c.plotLeft,
                y: g + c.plotTop,
                borderColor: m
            })
        },
        updatePosition: function(a) {
            var b = this.chart
              , c = this.label
              , c = (this.options.positioner || this.getPosition).call(this, c.width, c.height, a);
            this.move(w(c.x), w(c.y || 0), a.plotX + b.plotLeft, a.plotY + b.plotTop)
        },
        getXDateFormat: function(a, b, c) {
            var d, b = b.dateTimeLabelFormats, e = c && c.closestPointRange, f, g = {
                millisecond: 15,
                second: 12,
                minute: 9,
                hour: 6,
                day: 3
            }, h, i = "millisecond";
            if (e) {
                h = Na("%m-%d %H:%M:%S.%L", a.x);
                for (f in F) {
                    if (e === F.week && +Na("%w", a.x) === c.options.startOfWeek && h.substr(6) === "00:00:00.000") {
                        f = "week";
                        break
                    } else if (F[f] > e) {
                        f = i;
                        break
                    } else if (g[f] && h.substr(g[f]) !== "01-01 00:00:00.000".substr(g[f]))
                        break;
                    f !== "week" && (i = f)
                }
                f && (d = b[f])
            } else
                d = b.day;
            return d || b.year
        },
        tooltipFooterHeaderFormatter: function(a, b) {
            var c = b ? "footer" : "header"
              , d = a.series
              , e = d.tooltipOptions
              , f = e.xDateFormat
              , g = d.xAxis
              , h = g && g.options.type === "datetime" && qa(a.key)
              , c = e[c + "Format"];
            h && !f && (f = this.getXDateFormat(a, e, g));
            h && f && (c = c.replace("{point.key}", "{point.key:" + f + "}"));
            return Ia(c, {
                point: a,
                series: d
            })
        },
        bodyFormatter: function(a) {
            return Ua(a, function(a) {
                var c = a.series.tooltipOptions;
                return (c.pointFormatter || a.point.tooltipFormatter).call(a.point, c.pointFormat)
            })
        }
    };
    var oa;
    ab = C.documentElement.ontouchstart !== x;
    var Va = B.Pointer = function(a, b) {
        this.init(a, b)
    }
    ;
    Va.prototype = {
        init: function(a, b) {
            var c = b.chart, d = c.events, e = fa ? "" : c.zoomType, c = a.inverted, f;
            this.options = b;
            this.chart = a;
            this.zoomX = f = /x/.test(e);
            this.zoomY = e = /y/.test(e);
            this.zoomHor = f && !c || e && c;
            this.zoomVert = e && !c || f && c;
            this.hasZoom = f || e;
            this.runChartClick = d && !!d.click;
            this.pinchDown = [];
            this.lastValidTouch = {};
            if (B.Tooltip && b.tooltip.enabled)
                a.tooltip = new Mb(a,b.tooltip),
                this.followTouchMove = p(b.tooltip.followTouchMove, !0);
            this.setDOMEvents()
        },
        normalize: function(a, b) {
            var c, d, a = a || window.event, a = Sb(a);
            if (!a.target)
                a.target = a.srcElement;
            d = a.touches ? a.touches.length ? a.touches.item(0) : a.changedTouches[0] : a;
            if (!b)
                this.chartPosition = b = Rb(this.chart.container);
            d.pageX === x ? (c = s(a.x, a.clientX - b.left),
            d = a.y) : (c = d.pageX - b.left,
            d = d.pageY - b.top);
            return t(a, {
                chartX: w(c),
                chartY: w(d)
            })
        },
        getCoordinates: function(a) {
            var b = {
                xAxis: [],
                yAxis: []
            };
            o(this.chart.axes, function(c) {
                b[c.isXAxis ? "xAxis" : "yAxis"].push({
                    axis: c,
                    value: c.toValue(a[c.horiz ? "chartX" : "chartY"])
                })
            });
            return b
        },
        runPointActions: function(a) {
            var b = this.chart, c = b.series, d = b.tooltip, e = d ? d.shared : !1, f = b.hoverPoint, g = b.hoverSeries, h, i = Number.MAX_VALUE, j, k, m = [], n, l;
            if (!e && !g)
                for (h = 0; h < c.length; h++)
                    if (c[h].directTouch || !c[h].options.stickyTracking)
                        c = [];
            g && (e ? g.noSharedTooltip : g.directTouch) && f ? n = f : (o(c, function(b) {
                j = b.noSharedTooltip && e;
                k = !e && b.directTouch;
                b.visible && !j && !k && p(b.options.enableMouseTracking, !0) && (l = b.searchPoint(a, !j && b.kdDimensions === 1)) && m.push(l)
            }),
            o(m, function(a) {
                if (a && typeof a.dist === "number" && a.dist < i)
                    i = a.dist,
                    n = a
            }));
            if (n && (n !== this.prevKDPoint || d && d.isHidden)) {
                if (e && !n.series.noSharedTooltip) {
                    for (h = m.length; h--; )
                        (m[h].clientX !== n.clientX || m[h].series.noSharedTooltip) && m.splice(h, 1);
                    m.length && d && d.refresh(m, a);
                    o(m, function(b) {
                        b.onMouseOver(a, b !== (g && g.directTouch && f || n))
                    })
                } else if (d && d.refresh(n, a),
                !g || !g.directTouch)
                    n.onMouseOver(a);
                this.prevKDPoint = n
            } else
                c = g && g.tooltipOptions.followPointer,
                d && c && !d.isHidden && (c = d.getAnchor([{}], a),
                d.updatePosition({
                    plotX: c[0],
                    plotY: c[1]
                }));
            if (d && !this._onDocumentMouseMove)
                this._onDocumentMouseMove = function(a) {
                    if (X[oa])
                        X[oa].pointer.onDocumentMouseMove(a)
                }
                ,
                I(C, "mousemove", this._onDocumentMouseMove);
            o(b.axes, function(b) {
                b.drawCrosshair(a, p(n, f))
            })
        },
        reset: function(a, b) {
            var c = this.chart
              , d = c.hoverSeries
              , e = c.hoverPoint
              , f = c.hoverPoints
              , g = c.tooltip
              , h = g && g.shared ? f : e;
            (a = a && g && h) && ra(h)[0].plotX === x && (a = !1);
            if (a)
                g.refresh(h),
                e && (e.setState(e.state, !0),
                o(c.axes, function(a) {
                    p(a.options.crosshair && a.options.crosshair.snap, !0) ? a.drawCrosshair(null, e) : a.hideCrosshair()
                }));
            else {
                if (e)
                    e.onMouseOut();
                f && o(f, function(a) {
                    a.setState()
                });
                if (d)
                    d.onMouseOut();
                g && g.hide(b);
                if (this._onDocumentMouseMove)
                    Y(C, "mousemove", this._onDocumentMouseMove),
                    this._onDocumentMouseMove = null;
                o(c.axes, function(a) {
                    a.hideCrosshair()
                });
                this.hoverX = c.hoverPoints = c.hoverPoint = null
            }
        },
        scaleGroups: function(a, b) {
            var c = this.chart, d;
            o(c.series, function(e) {
                d = a || e.getPlotBox();
                e.xAxis && e.xAxis.zoomEnabled && (e.group.attr(d),
                e.markerGroup && (e.markerGroup.attr(d),
                e.markerGroup.clip(b ? c.clipRect : null)),
                e.dataLabelsGroup && e.dataLabelsGroup.attr(d))
            });
            c.clipRect.attr(b || c.clipBox)
        },
        dragStart: function(a) {
            var b = this.chart;
            b.mouseIsDown = a.type;
            b.cancelClick = !1;
            b.mouseDownX = this.mouseDownX = a.chartX;
            b.mouseDownY = this.mouseDownY = a.chartY
        },
        drag: function(a) {
            var b = this.chart, c = b.options.chart, d = a.chartX, e = a.chartY, f = this.zoomHor, g = this.zoomVert, h = b.plotLeft, i = b.plotTop, j = b.plotWidth, k = b.plotHeight, m, n = this.selectionMarker, l = this.mouseDownX, u = this.mouseDownY, r = c.panKey && a[c.panKey + "Key"];
            if (!n || !n.touch)
                if (d < h ? d = h : d > h + j && (d = h + j),
                e < i ? e = i : e > i + k && (e = i + k),
                this.hasDragged = Math.sqrt(Math.pow(l - d, 2) + Math.pow(u - e, 2)),
                this.hasDragged > 10) {
                    m = b.isInsidePlot(l - h, u - i);
                    if (b.hasCartesianSeries && (this.zoomX || this.zoomY) && m && !r && !n)
                        this.selectionMarker = n = b.renderer.rect(h, i, f ? 1 : j, g ? 1 : k, 0).attr({
                            fill: c.selectionMarkerFill || "rgba(69,114,167,0.25)",
                            zIndex: 7
                        }).add();
                    n && f && (d -= l,
                    n.attr({
                        width: O(d),
                        x: (d > 0 ? 0 : d) + l
                    }));
                    n && g && (d = e - u,
                    n.attr({
                        height: O(d),
                        y: (d > 0 ? 0 : d) + u
                    }));
                    m && !n && c.panning && b.pan(a, c.panning)
                }
        },
        drop: function(a) {
            var b = this
              , c = this.chart
              , d = this.hasPinched;
            if (this.selectionMarker) {
                var e = {
                    xAxis: [],
                    yAxis: [],
                    originalEvent: a.originalEvent || a
                }, f = this.selectionMarker, g = f.attr ? f.attr("x") : f.x, h = f.attr ? f.attr("y") : f.y, i = f.attr ? f.attr("width") : f.width, j = f.attr ? f.attr("height") : f.height, k;
                if (this.hasDragged || d)
                    o(c.axes, function(c) {
                        if (c.zoomEnabled && q(c.min) && (d || b[{
                            xAxis: "zoomX",
                            yAxis: "zoomY"
                        }[c.coll]])) {
                            var f = c.horiz
                              , l = a.type === "touchend" ? c.minPixelPadding : 0
                              , u = c.toValue((f ? g : h) + l)
                              , f = c.toValue((f ? g + i : h + j) - l);
                            e[c.coll].push({
                                axis: c,
                                min: z(u, f),
                                max: s(u, f)
                            });
                            k = !0
                        }
                    }),
                    k && J(c, "selection", e, function(a) {
                        c.zoom(t(a, d ? {
                            animation: !1
                        } : null))
                    });
                this.selectionMarker = this.selectionMarker.destroy();
                d && this.scaleGroups()
            }
            if (c)
                M(c.container, {
                    cursor: c._cursor
                }),
                c.cancelClick = this.hasDragged > 10,
                c.mouseIsDown = this.hasDragged = this.hasPinched = !1,
                this.pinchDown = []
        },
        onContainerMouseDown: function(a) {
            a = this.normalize(a);
            a.preventDefault && a.preventDefault();
            this.dragStart(a)
        },
        onDocumentMouseUp: function(a) {
            X[oa] && X[oa].pointer.drop(a)
        },
        onDocumentMouseMove: function(a) {
            var b = this.chart
              , c = this.chartPosition
              , a = this.normalize(a, c);
            c && !this.inClass(a.target, "highcharts-tracker") && !b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop) && this.reset()
        },
        onContainerMouseLeave: function() {
            var a = X[oa];
            if (a)
                a.pointer.reset(),
                a.pointer.chartPosition = null
        },
        onContainerMouseMove: function(a) {
            var b = this.chart;
            oa = b.index;
            a = this.normalize(a);
            a.returnValue = !1;
            b.mouseIsDown === "mousedown" && this.drag(a);
            (this.inClass(a.target, "highcharts-tracker") || b.isInsidePlot(a.chartX - b.plotLeft, a.chartY - b.plotTop)) && !b.openMenu && this.runPointActions(a)
        },
        inClass: function(a, b) {
            for (var c; a; ) {
                if (c = K(a, "class"))
                    if (c.indexOf(b) !== -1)
                        return !0;
                    else if (c.indexOf("highcharts-container") !== -1)
                        return !1;
                a = a.parentNode
            }
        },
        onTrackerMouseOut: function(a) {
            var b = this.chart.hoverSeries
              , a = a.relatedTarget || a.toElement;
            if (b && !b.options.stickyTracking && !this.inClass(a, "highcharts-tooltip") && !this.inClass(a, "highcharts-series-" + b.index))
                b.onMouseOut()
        },
        onContainerClick: function(a) {
            var b = this.chart
              , c = b.hoverPoint
              , d = b.plotLeft
              , e = b.plotTop
              , a = this.normalize(a);
            a.originalEvent = a;
            b.cancelClick || (c && this.inClass(a.target, "highcharts-tracker") ? (J(c.series, "click", t(a, {
                point: c
            })),
            b.hoverPoint && c.firePointEvent("click", a)) : (t(a, this.getCoordinates(a)),
            b.isInsidePlot(a.chartX - d, a.chartY - e) && J(b, "click", a)))
        },
        setDOMEvents: function() {
            var a = this
              , b = a.chart.container;
            b.onmousedown = function(b) {
                a.onContainerMouseDown(b)
            }
            ;
            b.onmousemove = function(b) {
                a.onContainerMouseMove(b)
            }
            ;
            b.onclick = function(b) {
                a.onContainerClick(b)
            }
            ;
            I(b, "mouseleave", a.onContainerMouseLeave);
            bb === 1 && I(C, "mouseup", a.onDocumentMouseUp);
            if (ab)
                b.ontouchstart = function(b) {
                    a.onContainerTouchStart(b)
                }
                ,
                b.ontouchmove = function(b) {
                    a.onContainerTouchMove(b)
                }
                ,
                bb === 1 && I(C, "touchend", a.onDocumentTouchEnd)
        },
        destroy: function() {
            var a;
            Y(this.chart.container, "mouseleave", this.onContainerMouseLeave);
            bb || (Y(C, "mouseup", this.onDocumentMouseUp),
            Y(C, "touchend", this.onDocumentTouchEnd));
            clearInterval(this.tooltipTimeout);
            for (a in this)
                this[a] = null
        }
    };
    t(B.Pointer.prototype, {
        pinchTranslate: function(a, b, c, d, e, f) {
            (this.zoomHor || this.pinchHor) && this.pinchTranslateDirection(!0, a, b, c, d, e, f);
            (this.zoomVert || this.pinchVert) && this.pinchTranslateDirection(!1, a, b, c, d, e, f)
        },
        pinchTranslateDirection: function(a, b, c, d, e, f, g, h) {
            var i = this.chart, j = a ? "x" : "y", k = a ? "X" : "Y", m = "chart" + k, n = a ? "width" : "height", l = i["plot" + (a ? "Left" : "Top")], u, r, p = h || 1, o = i.inverted, v = i.bounds[a ? "h" : "v"], s = b.length === 1, q = b[0][m], t = c[0][m], x = !s && b[1][m], w = !s && c[1][m], z, c = function() {
                !s && O(q - x) > 20 && (p = h || O(t - w) / O(q - x));
                r = (l - t) / p + q;
                u = i["plot" + (a ? "Width" : "Height")] / p
            };
            c();
            b = r;
            b < v.min ? (b = v.min,
            z = !0) : b + u > v.max && (b = v.max - u,
            z = !0);
            z ? (t -= 0.8 * (t - g[j][0]),
            s || (w -= 0.8 * (w - g[j][1])),
            c()) : g[j] = [t, w];
            o || (f[j] = r - l,
            f[n] = u);
            f = o ? 1 / p : p;
            e[n] = u;
            e[j] = b;
            d[o ? a ? "scaleY" : "scaleX" : "scale" + k] = p;
            d["translate" + k] = f * l + (t - f * q)
        },
        pinch: function(a) {
            var b = this
              , c = b.chart
              , d = b.pinchDown
              , e = a.touches
              , f = e.length
              , g = b.lastValidTouch
              , h = b.hasZoom
              , i = b.selectionMarker
              , j = {}
              , k = f === 1 && (b.inClass(a.target, "highcharts-tracker") && c.runTrackerClick || b.runChartClick)
              , m = {};
            if (f > 1)
                b.initiated = !0;
            h && b.initiated && !k && a.preventDefault();
            Ua(e, function(a) {
                return b.normalize(a)
            });
            if (a.type === "touchstart")
                o(e, function(a, b) {
                    d[b] = {
                        chartX: a.chartX,
                        chartY: a.chartY
                    }
                }),
                g.x = [d[0].chartX, d[1] && d[1].chartX],
                g.y = [d[0].chartY, d[1] && d[1].chartY],
                o(c.axes, function(a) {
                    if (a.zoomEnabled) {
                        var b = c.bounds[a.horiz ? "h" : "v"]
                          , d = a.minPixelPadding
                          , e = a.toPixels(p(a.options.min, a.dataMin))
                          , f = a.toPixels(p(a.options.max, a.dataMax))
                          , g = z(e, f)
                          , e = s(e, f);
                        b.min = z(a.pos, g - d);
                        b.max = s(a.pos + a.len, e + d)
                    }
                }),
                b.res = !0;
            else if (d.length) {
                if (!i)
                    b.selectionMarker = i = t({
                        destroy: ua,
                        touch: !0
                    }, c.plotBox);
                b.pinchTranslate(d, e, j, i, m, g);
                b.hasPinched = h;
                b.scaleGroups(j, m);
                if (!h && b.followTouchMove && f === 1)
                    this.runPointActions(b.normalize(a));
                else if (b.res)
                    b.res = !1,
                    this.reset(!1, 0)
            }
        },
        touch: function(a, b) {
            var c = this.chart;
            oa = c.index;
            a.touches.length === 1 ? (a = this.normalize(a),
            c.isInsidePlot(a.chartX - c.plotLeft, a.chartY - c.plotTop) && !c.openMenu ? (b && this.runPointActions(a),
            this.pinch(a)) : b && this.reset()) : a.touches.length === 2 && this.pinch(a)
        },
        onContainerTouchStart: function(a) {
            this.touch(a, !0)
        },
        onContainerTouchMove: function(a) {
            this.touch(a)
        },
        onDocumentTouchEnd: function(a) {
            X[oa] && X[oa].pointer.drop(a)
        }
    });
    if (L.PointerEvent || L.MSPointerEvent) {
        var wa = {}
          , Ab = !!L.PointerEvent
          , Wb = function() {
            var a, b = [];
            b.item = function(a) {
                return this[a]
            }
            ;
            for (a in wa)
                wa.hasOwnProperty(a) && b.push({
                    pageX: wa[a].pageX,
                    pageY: wa[a].pageY,
                    target: wa[a].target
                });
            return b
        }
          , Bb = function(a, b, c, d) {
            a = a.originalEvent || a;
            if ((a.pointerType === "touch" || a.pointerType === a.MSPOINTER_TYPE_TOUCH) && X[oa])
                d(a),
                d = X[oa].pointer,
                d[b]({
                    type: c,
                    target: a.currentTarget,
                    preventDefault: ua,
                    touches: Wb()
                })
        };
        t(Va.prototype, {
            onContainerPointerDown: function(a) {
                Bb(a, "onContainerTouchStart", "touchstart", function(a) {
                    wa[a.pointerId] = {
                        pageX: a.pageX,
                        pageY: a.pageY,
                        target: a.currentTarget
                    }
                })
            },
            onContainerPointerMove: function(a) {
                Bb(a, "onContainerTouchMove", "touchmove", function(a) {
                    wa[a.pointerId] = {
                        pageX: a.pageX,
                        pageY: a.pageY
                    };
                    if (!wa[a.pointerId].target)
                        wa[a.pointerId].target = a.currentTarget
                })
            },
            onDocumentPointerUp: function(a) {
                Bb(a, "onDocumentTouchEnd", "touchend", function(a) {
                    delete wa[a.pointerId]
                })
            },
            batchMSEvents: function(a) {
                a(this.chart.container, Ab ? "pointerdown" : "MSPointerDown", this.onContainerPointerDown);
                a(this.chart.container, Ab ? "pointermove" : "MSPointerMove", this.onContainerPointerMove);
                a(C, Ab ? "pointerup" : "MSPointerUp", this.onDocumentPointerUp)
            }
        });
        Ta(Va.prototype, "init", function(a, b, c) {
            a.call(this, b, c);
            this.hasZoom && M(b.container, {
                "-ms-touch-action": P,
                "touch-action": P
            })
        });
        Ta(Va.prototype, "setDOMEvents", function(a) {
            a.apply(this);
            (this.hasZoom || this.followTouchMove) && this.batchMSEvents(I)
        });
        Ta(Va.prototype, "destroy", function(a) {
            this.batchMSEvents(Y);
            a.call(this)
        })
    }
    var mb = B.Legend = function(a, b) {
        this.init(a, b)
    }
    ;
    mb.prototype = {
        init: function(a, b) {
            var c = this
              , d = b.itemStyle
              , e = b.itemMarginTop || 0;
            this.options = b;
            if (b.enabled)
                c.itemStyle = d,
                c.itemHiddenStyle = D(d, b.itemHiddenStyle),
                c.itemMarginTop = e,
                c.padding = d = p(b.padding, 8),
                c.initialItemX = d,
                c.initialItemY = d - 5,
                c.maxItemWidth = 0,
                c.chart = a,
                c.itemHeight = 0,
                c.symbolWidth = p(b.symbolWidth, 16),
                c.pages = [],
                c.render(),
                I(c.chart, "endResize", function() {
                    c.positionCheckboxes()
                })
        },
        colorizeItem: function(a, b) {
            var c = this.options, d = a.legendItem, e = a.legendLine, f = a.legendSymbol, g = this.itemHiddenStyle.color, c = b ? c.itemStyle.color : g, h = b ? a.legendColor || a.color || "#CCC" : g, g = a.options && a.options.marker, i = {
                fill: h
            }, j;
            d && d.css({
                fill: c,
                color: c
            });
            e && e.attr({
                stroke: h
            });
            if (f) {
                if (g && f.isMarker)
                    for (j in i.stroke = h,
                    g = a.convertAttribs(g),
                    g)
                        d = g[j],
                        d !== x && (i[j] = d);
                f.attr(i)
            }
        },
        positionItem: function(a) {
            var b = this.options
              , c = b.symbolPadding
              , b = !b.rtl
              , d = a._legendItemPos
              , e = d[0]
              , d = d[1]
              , f = a.checkbox;
            (a = a.legendGroup) && a.element && a.translate(b ? e : this.legendWidth - e - 2 * c - 4, d);
            if (f)
                f.x = e,
                f.y = d
        },
        destroyItem: function(a) {
            var b = a.checkbox;
            o(["legendItem", "legendLine", "legendSymbol", "legendGroup"], function(b) {
                a[b] && (a[b] = a[b].destroy())
            });
            b && Qa(a.checkbox)
        },
        destroy: function() {
            var a = this.group
              , b = this.box;
            if (b)
                this.box = b.destroy();
            if (a)
                this.group = a.destroy()
        },
        positionCheckboxes: function(a) {
            var b = this.group.alignAttr, c, d = this.clipHeight || this.legendHeight;
            if (b)
                c = b.translateY,
                o(this.allItems, function(e) {
                    var f = e.checkbox, g;
                    f && (g = c + f.y + (a || 0) + 3,
                    M(f, {
                        left: b.translateX + e.checkboxOffset + f.x - 20 + "px",
                        top: g + "px",
                        display: g > c - 6 && g < c + d - 6 ? "" : P
                    }))
                })
        },
        renderTitle: function() {
            var a = this.padding
              , b = this.options.title
              , c = 0;
            if (b.text) {
                if (!this.title)
                    this.title = this.chart.renderer.label(b.text, a - 3, a - 4, null, null, null, null, null, "legend-title").attr({
                        zIndex: 1
                    }).css(b.style).add(this.group);
                a = this.title.getBBox();
                c = a.height;
                this.offsetWidth = a.width;
                this.contentGroup.attr({
                    translateY: c
                })
            }
            this.titleHeight = c
        },
        setText: function(a) {
            var b = this.options;
            a.legendItem.attr({
                text: b.labelFormat ? Ia(b.labelFormat, a) : b.labelFormatter.call(a)
            })
        },
        renderItem: function(a) {
            var b = this.chart
              , c = b.renderer
              , d = this.options
              , e = d.layout === "horizontal"
              , f = this.symbolWidth
              , g = d.symbolPadding
              , h = this.itemStyle
              , i = this.itemHiddenStyle
              , j = this.padding
              , k = e ? p(d.itemDistance, 20) : 0
              , m = !d.rtl
              , n = d.width
              , l = d.itemMarginBottom || 0
              , u = this.itemMarginTop
              , r = this.initialItemX
              , o = a.legendItem
              , A = a.series && a.series.drawLegendSymbol ? a.series : a
              , v = A.options
              , v = this.createCheckboxForItem && v && v.showCheckbox
              , q = d.useHTML;
            if (!o) {
                a.legendGroup = c.g("legend-item").attr({
                    zIndex: 1
                }).add(this.scrollGroup);
                a.legendItem = o = c.text("", m ? f + g : -g, this.baseline || 0, q).css(D(a.visible ? h : i)).attr({
                    align: m ? "left" : "right",
                    zIndex: 2
                }).add(a.legendGroup);
                if (!this.baseline)
                    this.fontMetrics = c.fontMetrics(h.fontSize, o),
                    this.baseline = this.fontMetrics.f + 3 + u,
                    o.attr("y", this.baseline);
                A.drawLegendSymbol(this, a);
                this.setItemEvents && this.setItemEvents(a, o, q, h, i);
                this.colorizeItem(a, a.visible);
                v && this.createCheckboxForItem(a)
            }
            this.setText(a);
            c = o.getBBox();
            f = a.checkboxOffset = d.itemWidth || a.legendItemWidth || f + g + c.width + k + (v ? 20 : 0);
            this.itemHeight = g = w(a.legendItemHeight || c.height);
            if (e && this.itemX - r + f > (n || b.chartWidth - 2 * j - r - d.x))
                this.itemX = r,
                this.itemY += u + this.lastLineHeight + l,
                this.lastLineHeight = 0;
            this.maxItemWidth = s(this.maxItemWidth, f);
            this.lastItemY = u + this.itemY + l;
            this.lastLineHeight = s(g, this.lastLineHeight);
            a._legendItemPos = [this.itemX, this.itemY];
            e ? this.itemX += f : (this.itemY += u + g + l,
            this.lastLineHeight = g);
            this.offsetWidth = n || s((e ? this.itemX - r - k : f) + j, this.offsetWidth)
        },
        getAllItems: function() {
            var a = [];
            o(this.chart.series, function(b) {
                var c = b.options;
                if (p(c.showInLegend, !q(c.linkedTo) ? x : !1, !0))
                    a = a.concat(b.legendItems || (c.legendType === "point" ? b.data : b))
            });
            return a
        },
        adjustMargins: function(a, b) {
            var c = this.chart
              , d = this.options
              , e = d.align.charAt(0) + d.verticalAlign.charAt(0) + d.layout.charAt(0);
            this.display && !d.floating && o([/(lth|ct|rth)/, /(rtv|rm|rbv)/, /(rbh|cb|lbh)/, /(lbv|lm|ltv)/], function(f, g) {
                f.test(e) && !q(a[g]) && (c[ib[g]] = s(c[ib[g]], c.legend[(g + 1) % 2 ? "legendHeight" : "legendWidth"] + [1, -1, -1, 1][g] * d[g % 2 ? "x" : "y"] + p(d.margin, 12) + b[g]))
            })
        },
        render: function() {
            var a = this, b = a.chart, c = b.renderer, d = a.group, e, f, g, h, i = a.box, j = a.options, k = a.padding, m = j.borderWidth, n = j.backgroundColor;
            a.itemX = a.initialItemX;
            a.itemY = a.initialItemY;
            a.offsetWidth = 0;
            a.lastItemY = 0;
            if (!d)
                a.group = d = c.g("legend").attr({
                    zIndex: 7
                }).add(),
                a.contentGroup = c.g().attr({
                    zIndex: 1
                }).add(d),
                a.scrollGroup = c.g().add(a.contentGroup);
            a.renderTitle();
            e = a.getAllItems();
            qb(e, function(a, b) {
                return (a.options && a.options.legendIndex || 0) - (b.options && b.options.legendIndex || 0)
            });
            j.reversed && e.reverse();
            a.allItems = e;
            a.display = f = !!e.length;
            a.lastLineHeight = 0;
            o(e, function(b) {
                a.renderItem(b)
            });
            g = (j.width || a.offsetWidth) + k;
            h = a.lastItemY + a.lastLineHeight + a.titleHeight;
            h = a.handleOverflow(h);
            h += k;
            if (m || n) {
                if (i) {
                    if (g > 0 && h > 0)
                        i[i.isNew ? "attr" : "animate"](i.crisp({
                            width: g,
                            height: h
                        })),
                        i.isNew = !1
                } else
                    a.box = i = c.rect(0, 0, g, h, j.borderRadius, m || 0).attr({
                        stroke: j.borderColor,
                        "stroke-width": m || 0,
                        fill: n || P
                    }).add(d).shadow(j.shadow),
                    i.isNew = !0;
                i[f ? "show" : "hide"]()
            }
            a.legendWidth = g;
            a.legendHeight = h;
            o(e, function(b) {
                a.positionItem(b)
            });
            f && d.align(t({
                width: g,
                height: h
            }, j), !0, "spacingBox");
            b.isResizing || this.positionCheckboxes()
        },
        handleOverflow: function(a) {
            var b = this, c = this.chart, d = c.renderer, e = this.options, f = e.y, f = c.spacingBox.height + (e.verticalAlign === "top" ? -f : f) - this.padding, g = e.maxHeight, h, i = this.clipRect, j = e.navigation, k = p(j.animation, !0), m = j.arrowSize || 12, n = this.nav, l = this.pages, u = this.padding, r, q = this.allItems, A = function(a) {
                i.attr({
                    height: a
                });
                if (b.contentGroup.div)
                    b.contentGroup.div.style.clip = "rect(" + u + "px,9999px," + (u + a) + "px,0)"
            };
            e.layout === "horizontal" && (f /= 2);
            g && (f = z(f, g));
            l.length = 0;
            if (a > f) {
                this.clipHeight = h = s(f - 20 - this.titleHeight - u, 0);
                this.currentPage = p(this.currentPage, 1);
                this.fullHeight = a;
                o(q, function(a, b) {
                    var c = a._legendItemPos[1]
                      , d = w(a.legendItem.getBBox().height)
                      , e = l.length;
                    if (!e || c - l[e - 1] > h && (r || c) !== l[e - 1])
                        l.push(r || c),
                        e++;
                    b === q.length - 1 && c + d - l[e - 1] > h && l.push(c);
                    c !== r && (r = c)
                });
                if (!i)
                    i = b.clipRect = d.clipRect(0, u, 9999, 0),
                    b.contentGroup.clip(i);
                A(h);
                if (!n)
                    this.nav = n = d.g().attr({
                        zIndex: 1
                    }).add(this.group),
                    this.up = d.symbol("triangle", 0, 0, m, m).on("click", function() {
                        b.scroll(-1, k)
                    }).add(n),
                    this.pager = d.text("", 15, 10).css(j.style).add(n),
                    this.down = d.symbol("triangle-down", 0, 0, m, m).on("click", function() {
                        b.scroll(1, k)
                    }).add(n);
                b.scroll(0);
                a = f
            } else if (n)
                A(c.chartHeight),
                n.hide(),
                this.scrollGroup.attr({
                    translateY: 1
                }),
                this.clipHeight = 0;
            return a
        },
        scroll: function(a, b) {
            var c = this.pages
              , d = c.length
              , e = this.currentPage + a
              , f = this.clipHeight
              , g = this.options.navigation
              , h = g.activeColor
              , g = g.inactiveColor
              , i = this.pager
              , j = this.padding;
            e > d && (e = d);
            if (e > 0)
                b !== x && Ra(b, this.chart),
                this.nav.attr({
                    translateX: j,
                    translateY: f + this.padding + 7 + this.titleHeight,
                    visibility: "visible"
                }),
                this.up.attr({
                    fill: e === 1 ? g : h
                }).css({
                    cursor: e === 1 ? "default" : "pointer"
                }),
                i.attr({
                    text: e + "/" + d
                }),
                this.down.attr({
                    x: 18 + this.pager.getBBox().width,
                    fill: e === d ? g : h
                }).css({
                    cursor: e === d ? "default" : "pointer"
                }),
                c = -c[e - 1] + this.initialItemY,
                this.scrollGroup.animate({
                    translateY: c
                }),
                this.currentPage = e,
                this.positionCheckboxes(c)
        }
    };
    Ma = B.LegendSymbolMixin = {
        drawRectangle: function(a, b) {
            var c = a.options.symbolHeight || a.fontMetrics.f;
            b.legendSymbol = this.chart.renderer.rect(0, a.baseline - c + 1, a.symbolWidth, c, a.options.symbolRadius || 0).attr({
                zIndex: 3
            }).add(b.legendGroup)
        },
        drawLineMarker: function(a) {
            var b = this.options, c = b.marker, d;
            d = a.symbolWidth;
            var e = this.chart.renderer, f = this.legendGroup, a = a.baseline - w(a.fontMetrics.b * 0.3), g;
            if (b.lineWidth) {
                g = {
                    "stroke-width": b.lineWidth
                };
                if (b.dashStyle)
                    g.dashstyle = b.dashStyle;
                this.legendLine = e.path(["M", 0, a, "L", d, a]).attr(g).add(f)
            }
            if (c && c.enabled !== !1)
                b = c.radius,
                this.legendSymbol = d = e.symbol(this.symbol, d / 2 - b, a - b, 2 * b, 2 * b).add(f),
                d.isMarker = !0
        }
    };
    (/Trident\/7\.0/.test(za) || Ka) && Ta(mb.prototype, "positionItem", function(a, b) {
        var c = this
          , d = function() {
            b._legendItemPos && a.call(c, b)
        };
        d();
        setTimeout(d)
    });
    E = B.Chart = function() {
        this.init.apply(this, arguments)
    }
    ;
    E.prototype = {
        callbacks: [],
        init: function(a, b) {
            var c, d = a.series;
            a.series = null;
            c = D(S, a);
            c.series = a.series = d;
            this.userOptions = a;
            d = c.chart;
            this.margin = this.splashArray("margin", d);
            this.spacing = this.splashArray("spacing", d);
            var e = d.events;
            this.bounds = {
                h: {},
                v: {}
            };
            this.callback = b;
            this.isResizing = 0;
            this.options = c;
            this.axes = [];
            this.series = [];
            this.hasCartesianSeries = d.showAxes;
            var f = this, g;
            f.index = X.length;
            X.push(f);
            bb++;
            d.reflow !== !1 && I(f, "load", function() {
                f.initReflow()
            });
            if (e)
                for (g in e)
                    I(f, g, e[g]);
            f.xAxis = [];
            f.yAxis = [];
            f.animation = fa ? !1 : p(d.animation, !0);
            f.pointCount = f.colorCounter = f.symbolCounter = 0;
            f.firstRender()
        },
        initSeries: function(a) {
            var b = this.options.chart;
            (b = N[a.type || b.type || b.defaultSeriesType]) || la(17, !0);
            b = new b;
            b.init(this, a);
            return b
        },
        isInsidePlot: function(a, b, c) {
            var d = c ? b : a
              , a = c ? a : b;
            return d >= 0 && d <= this.plotWidth && a >= 0 && a <= this.plotHeight
        },
        redraw: function(a) {
            var b = this.axes, c = this.series, d = this.pointer, e = this.legend, f = this.isDirtyLegend, g, h, i = this.hasCartesianSeries, j = this.isDirtyBox, k = c.length, m = k, n = this.renderer, l = n.isHidden(), p = [];
            Ra(a, this);
            l && this.cloneRenderTo();
            for (this.layOutTitles(); m--; )
                if (a = c[m],
                a.options.stacking && (g = !0,
                a.isDirty)) {
                    h = !0;
                    break
                }
            if (h)
                for (m = k; m--; )
                    if (a = c[m],
                    a.options.stacking)
                        a.isDirty = !0;
            o(c, function(a) {
                a.isDirty && a.options.legendType === "point" && (a.updateTotals && a.updateTotals(),
                f = !0)
            });
            if (f && e.options.enabled)
                e.render(),
                this.isDirtyLegend = !1;
            g && this.getStacks();
            if (i && !this.isResizing)
                this.maxTicks = null,
                o(b, function(a) {
                    a.setScale()
                });
            this.getMargins();
            i && (o(b, function(a) {
                a.isDirty && (j = !0)
            }),
            o(b, function(a) {
                var b = a.min + "," + a.max;
                if (a.extKey !== b)
                    a.extKey = b,
                    p.push(function() {
                        J(a, "afterSetExtremes", t(a.eventArgs, a.getExtremes()));
                        delete a.eventArgs
                    });
                (j || g) && a.redraw()
            }));
            j && this.drawChartBox();
            o(c, function(a) {
                a.isDirty && a.visible && (!a.isCartesian || a.xAxis) && a.redraw()
            });
            d && d.reset(!0);
            n.draw();
            J(this, "redraw");
            l && this.cloneRenderTo(!0);
            o(p, function(a) {
                a.call()
            })
        },
        get: function(a) {
            var b = this.axes, c = this.series, d, e;
            for (d = 0; d < b.length; d++)
                if (b[d].options.id === a)
                    return b[d];
            for (d = 0; d < c.length; d++)
                if (c[d].options.id === a)
                    return c[d];
            for (d = 0; d < c.length; d++) {
                e = c[d].points || [];
                for (b = 0; b < e.length; b++)
                    if (e[b].id === a)
                        return e[b]
            }
            return null
        },
        getAxes: function() {
            var a = this
              , b = this.options
              , c = b.xAxis = ra(b.xAxis || {})
              , b = b.yAxis = ra(b.yAxis || {});
            o(c, function(a, b) {
                a.index = b;
                a.isX = !0
            });
            o(b, function(a, b) {
                a.index = b
            });
            c = c.concat(b);
            o(c, function(b) {
                new ha(a,b)
            })
        },
        getSelectedPoints: function() {
            var a = [];
            o(this.series, function(b) {
                a = a.concat(kb(b.points || [], function(a) {
                    return a.selected
                }))
            });
            return a
        },
        getSelectedSeries: function() {
            return kb(this.series, function(a) {
                return a.selected
            })
        },
        setTitle: function(a, b, c) {
            var g;
            var d = this, e = d.options, f;
            f = e.title = D(e.title, a);
            g = e.subtitle = D(e.subtitle, b),
            e = g;
            o([["title", a, f], ["subtitle", b, e]], function(a) {
                var b = a[0]
                  , c = d[b]
                  , e = a[1]
                  , a = a[2];
                c && e && (d[b] = c = c.destroy());
                a && a.text && !c && (d[b] = d.renderer.text(a.text, 0, 0, a.useHTML).attr({
                    align: a.align,
                    "class": "highcharts-" + b,
                    zIndex: a.zIndex || 4
                }).css(a.style).add())
            });
            d.layOutTitles(c)
        },
        layOutTitles: function(a) {
            var b = 0
              , c = this.title
              , d = this.subtitle
              , e = this.options
              , f = e.title
              , e = e.subtitle
              , g = this.renderer
              , h = this.spacingBox.width - 44;
            if (c && (c.css({
                width: (f.width || h) + "px"
            }).align(t({
                y: g.fontMetrics(f.style.fontSize, c).b - 3
            }, f), !1, "spacingBox"),
            !f.floating && !f.verticalAlign))
                b = c.getBBox().height;
            d && (d.css({
                width: (e.width || h) + "px"
            }).align(t({
                y: b + (f.margin - 13) + g.fontMetrics(e.style.fontSize, c).b
            }, e), !1, "spacingBox"),
            !e.floating && !e.verticalAlign && (b = ta(b + d.getBBox().height)));
            c = this.titleOffset !== b;
            this.titleOffset = b;
            if (!this.isDirtyBox && c)
                this.isDirtyBox = c,
                this.hasRendered && p(a, !0) && this.isDirtyBox && this.redraw()
        },
        getChartSize: function() {
            var a = this.options.chart
              , b = a.width
              , a = a.height
              , c = this.renderToClone || this.renderTo;
            if (!q(b))
                this.containerWidth = jb(c, "width");
            if (!q(a))
                this.containerHeight = jb(c, "height");
            this.chartWidth = s(0, b || this.containerWidth || 600);
            this.chartHeight = s(0, p(a, this.containerHeight > 19 ? this.containerHeight : 400))
        },
        cloneRenderTo: function(a) {
            var b = this.renderToClone
              , c = this.container;
            a ? b && (this.renderTo.appendChild(c),
            Qa(b),
            delete this.renderToClone) : (c && c.parentNode === this.renderTo && this.renderTo.removeChild(c),
            this.renderToClone = b = this.renderTo.cloneNode(0),
            M(b, {
                position: "absolute",
                top: "-9999px",
                display: "block"
            }),
            b.style.setProperty && b.style.setProperty("display", "block", "important"),
            C.body.appendChild(b),
            c && b.appendChild(c))
        },
        getContainer: function() {
            var a, b = this.options, c = b.chart, d, e, f;
            this.renderTo = a = c.renderTo;
            f = "highcharts-" + xb++;
            if (Ba(a))
                this.renderTo = a = C.getElementById(a);
            a || la(13, !0);
            d = G(K(a, "data-highcharts-chart"));
            !isNaN(d) && X[d] && X[d].hasRendered && X[d].destroy();
            K(a, "data-highcharts-chart", this.index);
            a.innerHTML = "";
            !c.skipClone && !a.offsetWidth && this.cloneRenderTo();
            this.getChartSize();
            d = this.chartWidth;
            e = this.chartHeight;
            this.container = a = $(Ja, {
                className: "highcharts-container" + (c.className ? " " + c.className : ""),
                id: f
            }, t({
                position: "relative",
                overflow: "hidden",
                width: d + "px",
                height: e + "px",
                textAlign: "left",
                lineHeight: "normal",
                zIndex: 0,
                "-webkit-tap-highlight-color": "rgba(0,0,0,0)"
            }, c.style), this.renderToClone || a);
            this._cursor = a.style.cursor;
            this.renderer = new (B[c.renderer] || $a)(a,d,e,c.style,c.forExport,b.exporting && b.exporting.allowHTML);
            fa && this.renderer.create(this, a, d, e);
            this.renderer.chartIndex = this.index
        },
        getMargins: function(a) {
            var b = this.spacing
              , c = this.margin
              , d = this.titleOffset;
            this.resetMargins();
            if (d && !q(c[0]))
                this.plotTop = s(this.plotTop, d + this.options.title.margin + b[0]);
            this.legend.adjustMargins(c, b);
            this.extraBottomMargin && (this.marginBottom += this.extraBottomMargin);
            this.extraTopMargin && (this.plotTop += this.extraTopMargin);
            a || this.getAxisMargins()
        },
        getAxisMargins: function() {
            var a = this
              , b = a.axisOffset = [0, 0, 0, 0]
              , c = a.margin;
            a.hasCartesianSeries && o(a.axes, function(a) {
                a.visible && a.getOffset()
            });
            o(ib, function(d, e) {
                q(c[e]) || (a[d] += b[e])
            });
            a.setChartSize()
        },
        reflow: function(a) {
            var b = this
              , c = b.options.chart
              , d = b.renderTo
              , e = c.width || jb(d, "width")
              , f = c.height || jb(d, "height")
              , c = a ? a.target : L
              , d = function() {
                if (b.container)
                    b.setSize(e, f, !1),
                    b.hasUserSize = null
            };
            if (!b.hasUserSize && !b.isPrinting && e && f && (c === L || c === C)) {
                if (e !== b.containerWidth || f !== b.containerHeight)
                    clearTimeout(b.reflowTimeout),
                    a ? b.reflowTimeout = setTimeout(d, 100) : d();
                b.containerWidth = e;
                b.containerHeight = f
            }
        },
        initReflow: function() {
            var a = this
              , b = function(b) {
                a.reflow(b)
            };
            I(L, "resize", b);
            I(a, "destroy", function() {
                Y(L, "resize", b)
            })
        },
        setSize: function(a, b, c) {
            var d = this, e, f, g, h = d.renderer;
            d.isResizing += 1;
            g = function() {
                d && J(d, "endResize", null, function() {
                    d.isResizing -= 1
                })
            }
            ;
            Ra(c, d);
            d.oldChartHeight = d.chartHeight;
            d.oldChartWidth = d.chartWidth;
            if (q(a))
                d.chartWidth = e = s(0, w(a)),
                d.hasUserSize = !!e;
            if (q(b))
                d.chartHeight = f = s(0, w(b));
            a = h.globalAnimation;
            (a ? lb : M)(d.container, {
                width: e + "px",
                height: f + "px"
            }, a);
            d.setChartSize(!0);
            h.setSize(e, f, c);
            d.maxTicks = null;
            o(d.axes, function(a) {
                a.isDirty = !0;
                a.setScale()
            });
            o(d.series, function(a) {
                a.isDirty = !0
            });
            d.isDirtyLegend = !0;
            d.isDirtyBox = !0;
            d.layOutTitles();
            d.getMargins();
            d.redraw(c);
            d.oldChartHeight = null;
            J(d, "resize");
            a = h.globalAnimation;
            a === !1 ? g() : setTimeout(g, a && a.duration || 500)
        },
        setChartSize: function(a) {
            var b = this.inverted, c = this.renderer, d = this.chartWidth, e = this.chartHeight, f = this.options.chart, g = this.spacing, h = this.clipOffset, i, j, k, m;
            this.plotLeft = i = w(this.plotLeft);
            this.plotTop = j = w(this.plotTop);
            this.plotWidth = k = s(0, w(d - i - this.marginRight));
            this.plotHeight = m = s(0, w(e - j - this.marginBottom));
            this.plotSizeX = b ? m : k;
            this.plotSizeY = b ? k : m;
            this.plotBorderWidth = f.plotBorderWidth || 0;
            this.spacingBox = c.spacingBox = {
                x: g[3],
                y: g[0],
                width: d - g[3] - g[1],
                height: e - g[0] - g[2]
            };
            this.plotBox = c.plotBox = {
                x: i,
                y: j,
                width: k,
                height: m
            };
            d = 2 * T(this.plotBorderWidth / 2);
            b = ta(s(d, h[3]) / 2);
            c = ta(s(d, h[0]) / 2);
            this.clipBox = {
                x: b,
                y: c,
                width: T(this.plotSizeX - s(d, h[1]) / 2 - b),
                height: s(0, T(this.plotSizeY - s(d, h[2]) / 2 - c))
            };
            a || o(this.axes, function(a) {
                a.setAxisSize();
                a.setAxisTranslation()
            })
        },
        resetMargins: function() {
            var a = this;
            o(ib, function(b, c) {
                a[b] = p(a.margin[c], a.spacing[c])
            });
            a.axisOffset = [0, 0, 0, 0];
            a.clipOffset = [0, 0, 0, 0]
        },
        drawChartBox: function() {
            var a = this.options.chart, b = this.renderer, c = this.chartWidth, d = this.chartHeight, e = this.chartBackground, f = this.plotBackground, g = this.plotBorder, h = this.plotBGImage, i = a.borderWidth || 0, j = a.backgroundColor, k = a.plotBackgroundColor, m = a.plotBackgroundImage, n = a.plotBorderWidth || 0, l, p = this.plotLeft, o = this.plotTop, q = this.plotWidth, s = this.plotHeight, v = this.plotBox, t = this.clipRect, x = this.clipBox;
            l = i + (a.shadow ? 8 : 0);
            if (i || j)
                if (e)
                    e.animate(e.crisp({
                        width: c - l,
                        height: d - l
                    }));
                else {
                    e = {
                        fill: j || P
                    };
                    if (i)
                        e.stroke = a.borderColor,
                        e["stroke-width"] = i;
                    this.chartBackground = b.rect(l / 2, l / 2, c - l, d - l, a.borderRadius, i).attr(e).addClass("highcharts-background").add().shadow(a.shadow)
                }
            if (k)
                f ? f.animate(v) : this.plotBackground = b.rect(p, o, q, s, 0).attr({
                    fill: k
                }).add().shadow(a.plotShadow);
            if (m)
                h ? h.animate(v) : this.plotBGImage = b.image(m, p, o, q, s).add();
            t ? t.animate({
                width: x.width,
                height: x.height
            }) : this.clipRect = b.clipRect(x);
            if (n)
                g ? g.animate(g.crisp({
                    x: p,
                    y: o,
                    width: q,
                    height: s,
                    strokeWidth: -n
                })) : this.plotBorder = b.rect(p, o, q, s, 0, -n).attr({
                    stroke: a.plotBorderColor,
                    "stroke-width": n,
                    fill: P,
                    zIndex: 1
                }).add();
            this.isDirtyBox = !1
        },
        propFromSeries: function() {
            var a = this, b = a.options.chart, c, d = a.options.series, e, f;
            o(["inverted", "angular", "polar"], function(g) {
                c = N[b.type || b.defaultSeriesType];
                f = a[g] || b[g] || c && c.prototype[g];
                for (e = d && d.length; !f && e--; )
                    (c = N[d[e].type]) && c.prototype[g] && (f = !0);
                a[g] = f
            })
        },
        linkSeries: function() {
            var a = this
              , b = a.series;
            o(b, function(a) {
                a.linkedSeries.length = 0
            });
            o(b, function(b) {
                var d = b.options.linkedTo;
                if (Ba(d) && (d = d === ":previous" ? a.series[b.index - 1] : a.get(d)))
                    d.linkedSeries.push(b),
                    b.linkedParent = d,
                    b.visible = p(b.options.visible, d.options.visible, b.visible)
            })
        },
        renderSeries: function() {
            o(this.series, function(a) {
                a.translate();
                a.render()
            })
        },
        renderLabels: function() {
            var a = this
              , b = a.options.labels;
            b.items && o(b.items, function(c) {
                var d = t(b.style, c.style)
                  , e = G(d.left) + a.plotLeft
                  , f = G(d.top) + a.plotTop + 12;
                delete d.left;
                delete d.top;
                a.renderer.text(c.html, e, f).attr({
                    zIndex: 2
                }).css(d).add()
            })
        },
        render: function() {
            var a = this.axes, b = this.renderer, c = this.options, d, e, f, g;
            this.setTitle();
            this.legend = new mb(this,c.legend);
            this.getStacks && this.getStacks();
            this.getMargins(!0);
            this.setChartSize();
            d = this.plotWidth;
            e = this.plotHeight -= 13;
            o(a, function(a) {
                a.setScale()
            });
            this.getAxisMargins();
            f = d / this.plotWidth > 1.1;
            g = e / this.plotHeight > 1.1;
            if (f || g)
                this.maxTicks = null,
                o(a, function(a) {
                    (a.horiz && f || !a.horiz && g) && a.setTickInterval(!0)
                }),
                this.getMargins();
            this.drawChartBox();
            this.hasCartesianSeries && o(a, function(a) {
                a.visible && a.render()
            });
            if (!this.seriesGroup)
                this.seriesGroup = b.g("series-group").attr({
                    zIndex: 3
                }).add();
            this.renderSeries();
            this.renderLabels();
            this.showCredits(c.credits);
            this.hasRendered = !0
        },
        showCredits: function(a) {
            if (a.enabled && !this.credits)
                this.credits = this.renderer.text(a.text, 0, 0).on("click", function() {
                    if (a.href)
                        location.href = a.href
                }).attr({
                    align: a.position.align,
                    zIndex: 8
                }).css(a.style).add().align(a.position)
        },
        destroy: function() {
            var a = this, b = a.axes, c = a.series, d = a.container, e, f = d && d.parentNode;
            J(a, "destroy");
            X[a.index] = x;
            bb--;
            a.renderTo.removeAttribute("data-highcharts-chart");
            Y(a);
            for (e = b.length; e--; )
                b[e] = b[e].destroy();
            for (e = c.length; e--; )
                c[e] = c[e].destroy();
            o("title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,pointer,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer".split(","), function(b) {
                var c = a[b];
                c && c.destroy && (a[b] = c.destroy())
            });
            if (d)
                d.innerHTML = "",
                Y(d),
                f && Qa(d);
            for (e in a)
                delete a[e]
        },
        isReadyToRender: function() {
            var a = this;
            return !ca && L == L.top && C.readyState !== "complete" || fa && !L.canvg ? (fa ? Lb.push(function() {
                a.firstRender()
            }, a.options.global.canvasToolsURL) : C.attachEvent("onreadystatechange", function() {
                C.detachEvent("onreadystatechange", a.firstRender);
                C.readyState === "complete" && a.firstRender()
            }),
            !1) : !0
        },
        firstRender: function() {
            var a = this
              , b = a.options
              , c = a.callback;
            if (a.isReadyToRender()) {
                a.getContainer();
                J(a, "init");
                a.resetMargins();
                a.setChartSize();
                a.propFromSeries();
                a.getAxes();
                o(b.series || [], function(b) {
                    a.initSeries(b)
                });
                a.linkSeries();
                J(a, "beforeRender");
                if (B.Pointer)
                    a.pointer = new Va(a,b);
                a.render();
                a.renderer.draw();
                c && c.apply(a, [a]);
                o(a.callbacks, function(b) {
                    a.index !== x && b.apply(a, [a])
                });
                J(a, "load");
                a.cloneRenderTo(!0)
            }
        },
        splashArray: function(a, b) {
            var c = b[a]
              , c = da(c) ? c : [c, c, c, c];
            return [p(b[a + "Top"], c[0]), p(b[a + "Right"], c[1]), p(b[a + "Bottom"], c[2]), p(b[a + "Left"], c[3])]
        }
    };
    var Xb = B.CenteredSeriesMixin = {
        getCenter: function() {
            var a = this.options, b = this.chart, c = 2 * (a.slicedOffset || 0), d = b.plotWidth - 2 * c, b = b.plotHeight - 2 * c, e = a.center, e = [p(e[0], "50%"), p(e[1], "50%"), a.size || "100%", a.innerSize || 0], f = z(d, b), g, h;
            for (g = 0; g < 4; ++g)
                h = e[g],
                a = g < 2 || g === 2 && /%$/.test(h),
                e[g] = (/%$/.test(h) ? [d, b, f, e[2]][g] * parseFloat(h) / 100 : parseFloat(h)) + (a ? c : 0);
            e[3] > e[2] && (e[3] = e[2]);
            return e
        }
    }
      , Fa = function() {};
    Fa.prototype = {
        init: function(a, b, c) {
            this.series = a;
            this.color = a.color;
            this.applyOptions(b, c);
            this.pointAttr = {};
            if (a.options.colorByPoint && (b = a.options.colors || a.chart.options.colors,
            this.color = this.color || b[a.colorCounter++],
            a.colorCounter === b.length))
                a.colorCounter = 0;
            a.chart.pointCount++;
            return this
        },
        applyOptions: function(a, b) {
            var c = this.series
              , d = c.options.pointValKey || c.pointValKey
              , a = Fa.prototype.optionsToObject.call(this, a);
            t(this, a);
            this.options = this.options ? t(this.options, a) : a;
            if (d)
                this.y = this[d];
            if (this.x === x && c)
                this.x = b === x ? c.autoIncrement() : b;
            return this
        },
        optionsToObject: function(a) {
            var b = {}
              , c = this.series
              , d = c.options.keys
              , e = d || c.pointArrayMap || ["y"]
              , f = e.length
              , g = 0
              , h = 0;
            if (typeof a === "number" || a === null)
                b[e[0]] = a;
            else if (Ga(a)) {
                if (!d && a.length > f) {
                    c = typeof a[0];
                    if (c === "string")
                        b.name = a[0];
                    else if (c === "number")
                        b.x = a[0];
                    g++
                }
                for (; h < f; ) {
                    if (!d || a[g] !== void 0)
                        b[e[h]] = a[g];
                    g++;
                    h++
                }
            } else if (typeof a === "object") {
                b = a;
                if (a.dataLabels)
                    c._hasPointLabels = !0;
                if (a.marker)
                    c._hasPointMarkers = !0
            }
            return b
        },
        destroy: function() {
            var a = this.series.chart, b = a.hoverPoints, c;
            a.pointCount--;
            if (b && (this.setState(),
            ja(b, this),
            !b.length))
                a.hoverPoints = null;
            if (this === a.hoverPoint)
                this.onMouseOut();
            if (this.graphic || this.dataLabel)
                Y(this),
                this.destroyElements();
            this.legendItem && a.legend.destroyItem(this);
            for (c in this)
                this[c] = null
        },
        destroyElements: function() {
            for (var a = ["graphic", "dataLabel", "dataLabelUpper", "connector", "shadowGroup"], b, c = 6; c--; )
                b = a[c],
                this[b] && (this[b] = this[b].destroy())
        },
        getLabelConfig: function() {
            return {
                x: this.category,
                y: this.y,
                color: this.color,
                key: this.name || this.category,
                series: this.series,
                point: this,
                percentage: this.percentage,
                total: this.total || this.stackTotal
            }
        },
        tooltipFormatter: function(a) {
            var b = this.series
              , c = b.tooltipOptions
              , d = p(c.valueDecimals, "")
              , e = c.valuePrefix || ""
              , f = c.valueSuffix || "";
            o(b.pointArrayMap || ["y"], function(b) {
                b = "{point." + b;
                if (e || f)
                    a = a.replace(b + "}", e + b + "}" + f);
                a = a.replace(b + "}", b + ":,." + d + "f}")
            });
            return Ia(a, {
                point: this,
                series: this.series
            })
        },
        firePointEvent: function(a, b, c) {
            var d = this
              , e = this.series.options;
            (e.point.events[a] || d.options && d.options.events && d.options.events[a]) && this.importEvents();
            a === "click" && e.allowPointSelect && (c = function(a) {
                d.select && d.select(null, a.ctrlKey || a.metaKey || a.shiftKey)
            }
            );
            J(this, a, b, c)
        },
        visible: !0
    };
    var R = B.Series = function() {}
    ;
    R.prototype = {
        isCartesian: !0,
        type: "line",
        pointClass: Fa,
        sorted: !0,
        requireSorting: !0,
        pointAttrToOptions: {
            stroke: "lineColor",
            "stroke-width": "lineWidth",
            fill: "fillColor",
            r: "radius"
        },
        directTouch: !1,
        axisTypes: ["xAxis", "yAxis"],
        colorCounter: 0,
        parallelArrays: ["x", "y"],
        init: function(a, b) {
            var c = this, d, e, f = a.series, g = function(a, b) {
                return p(a.options.index, a._i) - p(b.options.index, b._i)
            };
            c.chart = a;
            c.options = b = c.setOptions(b);
            c.linkedSeries = [];
            c.bindAxes();
            t(c, {
                name: b.name,
                state: "",
                pointAttr: {},
                visible: b.visible !== !1,
                selected: b.selected === !0
            });
            if (fa)
                b.animation = !1;
            e = b.events;
            for (d in e)
                I(c, d, e[d]);
            if (e && e.click || b.point && b.point.events && b.point.events.click || b.allowPointSelect)
                a.runTrackerClick = !0;
            c.getColor();
            c.getSymbol();
            o(c.parallelArrays, function(a) {
                c[a + "Data"] = []
            });
            c.setData(b.data, !1);
            if (c.isCartesian)
                a.hasCartesianSeries = !0;
            f.push(c);
            c._i = f.length - 1;
            qb(f, g);
            this.yAxis && qb(this.yAxis.series, g);
            o(f, function(a, b) {
                a.index = b;
                a.name = a.name || "Series " + (b + 1)
            })
        },
        bindAxes: function() {
            var a = this, b = a.options, c = a.chart, d;
            o(a.axisTypes || [], function(e) {
                o(c[e], function(c) {
                    d = c.options;
                    if (b[e] === d.index || b[e] !== x && b[e] === d.id || b[e] === x && d.index === 0)
                        c.series.push(a),
                        a[e] = c,
                        c.isDirty = !0
                });
                !a[e] && a.optionalAxis !== e && la(18, !0)
            })
        },
        updateParallelArrays: function(a, b) {
            var c = a.series
              , d = arguments;
            o(c.parallelArrays, typeof b === "number" ? function(d) {
                var f = d === "y" && c.toYData ? c.toYData(a) : a[d];
                c[d + "Data"][b] = f
            }
            : function(a) {
                Array.prototype[b].apply(c[a + "Data"], Array.prototype.slice.call(d, 2))
            }
            )
        },
        autoIncrement: function() {
            var a = this.options, b = this.xIncrement, c, d = a.pointIntervalUnit, b = p(b, a.pointStart, 0);
            this.pointInterval = c = p(this.pointInterval, a.pointInterval, 1);
            if (d === "month" || d === "year")
                a = new ya(b),
                a = d === "month" ? +a[vb](a[Ya]() + c) : +a[wb](a[Za]() + c),
                c = a - b;
            this.xIncrement = b + c;
            return b
        },
        getSegments: function() {
            var a = -1, b = [], c, d = this.points, e = d.length;
            if (e)
                if (this.options.connectNulls) {
                    for (c = e; c--; )
                        d[c].y === null && d.splice(c, 1);
                    d.length && (b = [d])
                } else
                    o(d, function(c, g) {
                        c.y === null ? (g > a + 1 && b.push(d.slice(a + 1, g)),
                        a = g) : g === e - 1 && b.push(d.slice(a + 1, g + 1))
                    });
            this.segments = b
        },
        setOptions: function(a) {
            var b = this.chart
              , c = b.options.plotOptions
              , b = b.userOptions || {}
              , d = b.plotOptions || {}
              , e = c[this.type];
            this.userOptions = a;
            c = D(e, c.series, a);
            this.tooltipOptions = D(S.tooltip, S.plotOptions[this.type].tooltip, b.tooltip, d.series && d.series.tooltip, d[this.type] && d[this.type].tooltip, a.tooltip);
            e.marker === null && delete c.marker;
            this.zoneAxis = c.zoneAxis;
            a = this.zones = (c.zones || []).slice();
            if ((c.negativeColor || c.negativeFillColor) && !c.zones)
                a.push({
                    value: c[this.zoneAxis + "Threshold"] || c.threshold || 0,
                    color: c.negativeColor,
                    fillColor: c.negativeFillColor
                });
            a.length && q(a[a.length - 1].value) && a.push({
                color: this.color,
                fillColor: this.fillColor
            });
            return c
        },
        getCyclic: function(a, b, c) {
            var d = this.userOptions
              , e = "_" + a + "Index"
              , f = a + "Counter";
            b || (q(d[e]) ? b = d[e] : (d[e] = b = this.chart[f] % c.length,
            this.chart[f] += 1),
            b = c[b]);
            this[a] = b
        },
        getColor: function() {
            this.options.colorByPoint ? this.options.color = null : this.getCyclic("color", this.options.color || ba[this.type].color, this.chart.options.colors)
        },
        getSymbol: function() {
            var a = this.options.marker;
            this.getCyclic("symbol", a.symbol, this.chart.options.symbols);
            if (/^url/.test(this.symbol))
                a.radius = 0
        },
        drawLegendSymbol: Ma.drawLineMarker,
        setData: function(a, b, c, d) {
            var e = this, f = e.points, g = f && f.length || 0, h, i = e.options, j = e.chart, k = null, m = e.xAxis, n = m && !!m.categories, l = i.turboThreshold, u = this.xData, r = this.yData, s = (h = e.pointArrayMap) && h.length, a = a || [];
            h = a.length;
            b = p(b, !0);
            if (d !== !1 && h && g === h && !e.cropped && !e.hasGroupedData && e.visible)
                o(a, function(a, b) {
                    f[b].update && f[b].update(a, !1, null, !1)
                });
            else {
                e.xIncrement = null;
                e.pointRange = n ? 1 : i.pointRange;
                e.colorCounter = 0;
                o(this.parallelArrays, function(a) {
                    e[a + "Data"].length = 0
                });
                if (l && h > l) {
                    for (c = 0; k === null && c < h; )
                        k = a[c],
                        c++;
                    if (qa(k)) {
                        n = p(i.pointStart, 0);
                        k = p(i.pointInterval, 1);
                        for (c = 0; c < h; c++)
                            u[c] = n,
                            r[c] = a[c],
                            n += k;
                        e.xIncrement = n
                    } else if (Ga(k))
                        if (s)
                            for (c = 0; c < h; c++)
                                k = a[c],
                                u[c] = k[0],
                                r[c] = k.slice(1, s + 1);
                        else
                            for (c = 0; c < h; c++)
                                k = a[c],
                                u[c] = k[0],
                                r[c] = k[1];
                    else
                        la(12)
                } else
                    for (c = 0; c < h; c++)
                        if (a[c] !== x && (k = {
                            series: e
                        },
                        e.pointClass.prototype.applyOptions.apply(k, [a[c]]),
                        e.updateParallelArrays(k, c),
                        n && q(k.name)))
                            m.names[k.x] = k.name;
                Ba(r[0]) && la(14, !0);
                e.data = [];
                e.options.data = a;
                for (c = g; c--; )
                    f[c] && f[c].destroy && f[c].destroy();
                if (m)
                    m.minRange = m.userMinRange;
                e.isDirty = e.isDirtyData = j.isDirtyBox = !0;
                c = !1
            }
            i.legendType === "point" && (this.processData(),
            this.generatePoints());
            b && j.redraw(c)
        },
        processData: function(a) {
            var b = this.xData, c = this.yData, d = b.length, e;
            e = 0;
            var f, g, h = this.xAxis, i, j = this.options;
            i = j.cropThreshold;
            var k = this.getExtremesFromAll || j.getExtremesFromAll, m = this.isCartesian, n, l;
            if (m && !this.isDirty && !h.isDirty && !this.yAxis.isDirty && !a)
                return !1;
            if (h)
                a = h.getExtremes(),
                n = a.min,
                l = a.max;
            if (m && this.sorted && !k && (!i || d > i || this.forceCrop))
                if (b[d - 1] < n || b[0] > l)
                    b = [],
                    c = [];
                else if (b[0] < n || b[d - 1] > l)
                    e = this.cropData(this.xData, this.yData, n, l),
                    b = e.xData,
                    c = e.yData,
                    e = e.start,
                    f = !0;
            for (i = b.length - 1; i >= 0; i--)
                d = b[i] - b[i - 1],
                d > 0 && (g === x || d < g) ? g = d : d < 0 && this.requireSorting && la(15);
            this.cropped = f;
            this.cropStart = e;
            this.processedXData = b;
            this.processedYData = c;
            if (j.pointRange === null)
                this.pointRange = g || 1;
            this.closestPointRange = g
        },
        cropData: function(a, b, c, d) {
            var e = a.length, f = 0, g = e, h = p(this.cropShoulder, 1), i;
            for (i = 0; i < e; i++)
                if (a[i] >= c) {
                    f = s(0, i - h);
                    break
                }
            for (; i < e; i++)
                if (a[i] > d) {
                    g = i + h;
                    break
                }
            return {
                xData: a.slice(f, g),
                yData: b.slice(f, g),
                start: f,
                end: g
            }
        },
        generatePoints: function() {
            var a = this.options.data, b = this.data, c, d = this.processedXData, e = this.processedYData, f = this.pointClass, g = d.length, h = this.cropStart || 0, i, j = this.hasGroupedData, k, m = [], n;
            if (!b && !j)
                b = [],
                b.length = a.length,
                b = this.data = b;
            for (n = 0; n < g; n++)
                i = h + n,
                j ? m[n] = (new f).init(this, [d[n]].concat(ra(e[n]))) : (b[i] ? k = b[i] : a[i] !== x && (b[i] = k = (new f).init(this, a[i], d[n])),
                m[n] = k),
                m[n].index = i;
            if (b && (g !== (c = b.length) || j))
                for (n = 0; n < c; n++)
                    if (n === h && !j && (n += g),
                    b[n])
                        b[n].destroyElements(),
                        b[n].plotX = x;
            this.data = b;
            this.points = m
        },
        getExtremes: function(a) {
            var b = this.yAxis, c = this.processedXData, d, e = [], f = 0;
            d = this.xAxis.getExtremes();
            var g = d.min, h = d.max, i, j, k, m, a = a || this.stackedYData || this.processedYData;
            d = a.length;
            for (m = 0; m < d; m++)
                if (j = c[m],
                k = a[m],
                i = k !== null && k !== x && (!b.isLog || k.length || k > 0),
                j = this.getExtremesFromAll || this.options.getExtremesFromAll || this.cropped || (c[m + 1] || j) >= g && (c[m - 1] || j) <= h,
                i && j)
                    if (i = k.length)
                        for (; i--; )
                            k[i] !== null && (e[f++] = k[i]);
                    else
                        e[f++] = k;
            this.dataMin = Oa(e);
            this.dataMax = Da(e)
        },
        translate: function() {
            this.processedXData || this.processData();
            this.generatePoints();
            for (var a = this.options, b = a.stacking, c = this.xAxis, d = c.categories, e = this.yAxis, f = this.points, g = f.length, h = !!this.modifyValue, i = a.pointPlacement, j = i === "between" || qa(i), k = a.threshold, m = a.startFromThreshold ? k : 0, n, l, u, o, t = Number.MAX_VALUE, a = 0; a < g; a++) {
                var A = f[a]
                  , v = A.x
                  , y = A.y;
                l = A.low;
                var w = b && e.stacks[(this.negStacks && y < (m ? 0 : k) ? "-" : "") + this.stackKey];
                if (e.isLog && y !== null && y <= 0)
                    A.y = y = null,
                    la(10);
                A.plotX = n = z(s(-1E5, c.translate(v, 0, 0, 0, 1, i, this.type === "flags")), 1E5);
                if (b && this.visible && w && w[v])
                    o = this.getStackIndicator(o, v, this.index),
                    w = w[v],
                    y = w.points[o.key],
                    l = y[0],
                    y = y[1],
                    l === m && (l = p(k, e.min)),
                    e.isLog && l <= 0 && (l = null),
                    A.total = A.stackTotal = w.total,
                    A.percentage = w.total && A.y / w.total * 100,
                    A.stackY = y,
                    w.setOffset(this.pointXOffset || 0, this.barW || 0);
                A.yBottom = q(l) ? e.translate(l, 0, 1, 0, 1) : null;
                h && (y = this.modifyValue(y, A));
                A.plotY = l = typeof y === "number" && y !== Infinity ? z(s(-1E5, e.translate(y, 0, 1, 0, 1)), 1E5) : x;
                A.isInside = l !== x && l >= 0 && l <= e.len && n >= 0 && n <= c.len;
                A.clientX = j ? c.translate(v, 0, 0, 0, 1) : n;
                A.negative = A.y < (k || 0);
                A.category = d && d[A.x] !== x ? d[A.x] : A.x;
                a && (t = z(t, O(n - u)));
                u = n
            }
            this.closestPointRangePx = t;
            this.getSegments()
        },
        setClip: function(a) {
            var b = this.chart
              , c = this.options
              , d = b.renderer
              , e = b.inverted
              , f = this.clipBox
              , g = f || b.clipBox
              , h = this.sharedClipKey || ["_sharedClip", a && a.duration, a && a.easing, g.height, c.xAxis, c.yAxis].join(",")
              , i = b[h]
              , j = b[h + "m"];
            if (!i) {
                if (a)
                    g.width = 0,
                    b[h + "m"] = j = d.clipRect(-99, e ? -b.plotLeft : -b.plotTop, 99, e ? b.chartWidth : b.chartHeight);
                b[h] = i = d.clipRect(g)
            }
            a && (i.count += 1);
            if (c.clip !== !1)
                this.group.clip(a || f ? i : b.clipRect),
                this.markerGroup.clip(j),
                this.sharedClipKey = h;
            a || (i.count -= 1,
            i.count <= 0 && h && b[h] && (f || (b[h] = b[h].destroy()),
            b[h + "m"] && (b[h + "m"] = b[h + "m"].destroy())))
        },
        animate: function(a) {
            var b = this.chart, c = this.options.animation, d;
            if (c && !da(c))
                c = ba[this.type].animation;
            a ? this.setClip(c) : (d = this.sharedClipKey,
            (a = b[d]) && a.animate({
                width: b.plotSizeX
            }, c),
            b[d + "m"] && b[d + "m"].animate({
                width: b.plotSizeX + 99
            }, c),
            this.animate = null)
        },
        afterAnimate: function() {
            this.setClip();
            J(this, "afterAnimate")
        },
        drawPoints: function() {
            var a, b = this.points, c = this.chart, d, e, f, g, h, i, j, k, m = this.options.marker, n = this.pointAttr[""], l, o, r, s = this.markerGroup, q = p(m.enabled, this.xAxis.isRadial, this.closestPointRangePx > 2 * m.radius);
            if (m.enabled !== !1 || this._hasPointMarkers)
                for (f = b.length; f--; )
                    if (g = b[f],
                    d = T(g.plotX),
                    e = g.plotY,
                    k = g.graphic,
                    l = g.marker || {},
                    o = !!g.marker,
                    a = q && l.enabled === x || l.enabled,
                    r = g.isInside,
                    a && e !== x && !isNaN(e) && g.y !== null)
                        if (a = g.pointAttr[g.selected ? "select" : ""] || n,
                        h = a.r,
                        i = p(l.symbol, this.symbol),
                        j = i.indexOf("url") === 0,
                        k)
                            k[r ? "show" : "hide"](!0).animate(t({
                                x: d - h,
                                y: e - h
                            }, k.symbolName ? {
                                width: 2 * h,
                                height: 2 * h
                            } : {}));
                        else {
                            if (r && (h > 0 || j))
                                g.graphic = c.renderer.symbol(i, d - h, e - h, 2 * h, 2 * h, o ? l : m).attr(a).add(s)
                        }
                    else if (k)
                        g.graphic = k.destroy()
        },
        convertAttribs: function(a, b, c, d) {
            var e = this.pointAttrToOptions, f, g, h = {}, a = a || {}, b = b || {}, c = c || {}, d = d || {};
            for (f in e)
                g = e[f],
                h[f] = p(a[g], b[f], c[f], d[f]);
            return h
        },
        getAttribs: function() {
            var a = this, b = a.options, c = ba[a.type].marker ? b.marker : b, d = c.states, e = d.hover, f, g = a.color, h = a.options.negativeColor;
            f = {
                stroke: g,
                fill: g
            };
            var i = a.points || [], j, k, m = [], n = a.pointAttrToOptions;
            j = a.hasPointSpecificOptions;
            var l = c.lineColor
              , u = c.fillColor;
            k = b.turboThreshold;
            var r = a.zones, s = a.zoneAxis || "y", A;
            b.marker ? (e.radius = e.radius || c.radius + e.radiusPlus,
            e.lineWidth = e.lineWidth || c.lineWidth + e.lineWidthPlus) : (e.color = e.color || na(e.color || g).brighten(e.brightness).get(),
            e.negativeColor = e.negativeColor || na(e.negativeColor || h).brighten(e.brightness).get());
            m[""] = a.convertAttribs(c, f);
            o(["hover", "select"], function(b) {
                m[b] = a.convertAttribs(d[b], m[""])
            });
            a.pointAttr = m;
            g = i.length;
            if (!k || g < k || j)
                for (; g--; ) {
                    k = i[g];
                    if ((c = k.options && k.options.marker || k.options) && c.enabled === !1)
                        c.radius = 0;
                    if (r.length) {
                        j = 0;
                        for (f = r[j]; k[s] >= f.value; )
                            f = r[++j];
                        k.color = k.fillColor = p(f.color, a.color)
                    }
                    j = b.colorByPoint || k.color;
                    if (k.options)
                        for (A in n)
                            q(c[n[A]]) && (j = !0);
                    if (j) {
                        c = c || {};
                        j = [];
                        d = c.states || {};
                        f = d.hover = d.hover || {};
                        if (!b.marker || k.negative && !f.fillColor && !e.fillColor)
                            f[a.pointAttrToOptions.fill] = f.color || !k.options.color && e[k.negative && h ? "negativeColor" : "color"] || na(k.color).brighten(f.brightness || e.brightness).get();
                        f = {
                            color: k.color
                        };
                        if (!u)
                            f.fillColor = k.color;
                        if (!l)
                            f.lineColor = k.color;
                        c.hasOwnProperty("color") && !c.color && delete c.color;
                        j[""] = a.convertAttribs(t(f, c), m[""]);
                        j.hover = a.convertAttribs(d.hover, m.hover, j[""]);
                        j.select = a.convertAttribs(d.select, m.select, j[""])
                    } else
                        j = m;
                    k.pointAttr = j
                }
        },
        destroy: function() {
            var a = this, b = a.chart, c = /AppleWebKit\/533/.test(za), d, e = a.data || [], f, g, h;
            J(a, "destroy");
            Y(a);
            o(a.axisTypes || [], function(b) {
                if (h = a[b])
                    ja(h.series, a),
                    h.isDirty = h.forceRedraw = !0
            });
            a.legendItem && a.chart.legend.destroyItem(a);
            for (d = e.length; d--; )
                (f = e[d]) && f.destroy && f.destroy();
            a.points = null;
            clearTimeout(a.animationTimeout);
            for (g in a)
                a[g]instanceof Q && !a[g].survive && (d = c && g === "group" ? "hide" : "destroy",
                a[g][d]());
            if (b.hoverSeries === a)
                b.hoverSeries = null;
            ja(b.series, a);
            for (g in a)
                delete a[g]
        },
        getSegmentPath: function(a) {
            var b = this
              , c = []
              , d = b.options.step;
            o(a, function(e, f) {
                var g = e.plotX, h = e.plotY, i;
                b.getPointSpline ? c.push.apply(c, b.getPointSpline(a, e, f)) : (c.push(f ? "L" : "M"),
                d && f && (i = a[f - 1],
                d === "right" ? c.push(i.plotX, h, "L") : d === "center" ? c.push((i.plotX + g) / 2, i.plotY, "L", (i.plotX + g) / 2, h, "L") : c.push(g, i.plotY, "L")),
                c.push(e.plotX, e.plotY))
            });
            return c
        },
        getGraphPath: function() {
            var a = this, b = [], c, d = [];
            o(a.segments, function(e) {
                c = a.getSegmentPath(e);
                e.length > 1 ? b = b.concat(c) : d.push(e[0])
            });
            a.singlePoints = d;
            return a.graphPath = b
        },
        drawGraph: function() {
            var a = this
              , b = this.options
              , c = [["graph", b.lineColor || this.color, b.dashStyle]]
              , d = b.lineWidth
              , e = b.linecap !== "square"
              , f = this.getGraphPath()
              , g = this.fillGraph && this.color || P;
            o(this.zones, function(d, e) {
                c.push(["zoneGraph" + e, d.color || a.color, d.dashStyle || b.dashStyle])
            });
            o(c, function(c, i) {
                var j = c[0]
                  , k = a[j];
                if (k)
                    k.animate({
                        d: f
                    });
                else if ((d || g) && f.length)
                    k = {
                        stroke: c[1],
                        "stroke-width": d,
                        fill: g,
                        zIndex: 1
                    },
                    c[2] ? k.dashstyle = c[2] : e && (k["stroke-linecap"] = k["stroke-linejoin"] = "round"),
                    a[j] = a.chart.renderer.path(f).attr(k).add(a.group).shadow(i < 2 && b.shadow)
            })
        },
        applyZones: function() {
            var a = this, b = this.chart, c = b.renderer, d = this.zones, e, f, g = this.clips || [], h, i = this.graph, j = this.area, k = s(b.chartWidth, b.chartHeight), m = this[(this.zoneAxis || "y") + "Axis"], n, l = m.reversed, u = b.inverted, r = m.horiz, q, t, v, y = !1;
            if (d.length && (i || j) && m.min !== x)
                i && i.hide(),
                j && j.hide(),
                n = m.getExtremes(),
                o(d, function(d, o) {
                    e = l ? r ? b.plotWidth : 0 : r ? 0 : m.toPixels(n.min);
                    e = z(s(p(f, e), 0), k);
                    f = z(s(w(m.toPixels(p(d.value, n.max), !0)), 0), k);
                    y && (e = f = m.toPixels(n.max));
                    q = Math.abs(e - f);
                    t = z(e, f);
                    v = s(e, f);
                    if (m.isXAxis) {
                        if (h = {
                            x: u ? v : t,
                            y: 0,
                            width: q,
                            height: k
                        },
                        !r)
                            h.x = b.plotHeight - h.x
                    } else if (h = {
                        x: 0,
                        y: u ? v : t,
                        width: k,
                        height: q
                    },
                    r)
                        h.y = b.plotWidth - h.y;
                    b.inverted && c.isVML && (h = m.isXAxis ? {
                        x: 0,
                        y: l ? t : v,
                        height: h.width,
                        width: b.chartWidth
                    } : {
                        x: h.y - b.plotLeft - b.spacingBox.x,
                        y: 0,
                        width: h.height,
                        height: b.chartHeight
                    });
                    g[o] ? g[o].animate(h) : (g[o] = c.clipRect(h),
                    i && a["zoneGraph" + o].clip(g[o]),
                    j && a["zoneArea" + o].clip(g[o]));
                    y = d.value > n.max
                }),
                this.clips = g
        },
        invertGroups: function() {
            function a() {
                var a = {
                    width: b.yAxis.len,
                    height: b.xAxis.len
                };
                o(["group", "markerGroup"], function(c) {
                    b[c] && b[c].attr(a).invert()
                })
            }
            var b = this
              , c = b.chart;
            if (b.xAxis)
                I(c, "resize", a),
                I(b, "destroy", function() {
                    Y(c, "resize", a)
                }),
                a(),
                b.invertGroups = a
        },
        plotGroup: function(a, b, c, d, e) {
            var f = this[a]
              , g = !f;
            g && (this[a] = f = this.chart.renderer.g(b).attr({
                visibility: c,
                zIndex: d || 0.1
            }).add(e),
            f.addClass("highcharts-series-" + this.index));
            f[g ? "attr" : "animate"](this.getPlotBox());
            return f
        },
        getPlotBox: function() {
            var a = this.chart
              , b = this.xAxis
              , c = this.yAxis;
            if (a.inverted)
                b = c,
                c = this.xAxis;
            return {
                translateX: b ? b.left : a.plotLeft,
                translateY: c ? c.top : a.plotTop,
                scaleX: 1,
                scaleY: 1
            }
        },
        render: function() {
            var a = this, b = a.chart, c, d = a.options, e = (c = d.animation) && !!a.animate && b.renderer.isSVG && p(c.duration, 500) || 0, f = a.visible ? "visible" : "hidden", g = d.zIndex, h = a.hasRendered, i = b.seriesGroup;
            c = a.plotGroup("group", "series", f, g, i);
            a.markerGroup = a.plotGroup("markerGroup", "markers", f, g, i);
            e && a.animate(!0);
            a.getAttribs();
            c.inverted = a.isCartesian ? b.inverted : !1;
            a.drawGraph && (a.drawGraph(),
            a.applyZones());
            o(a.points, function(a) {
                a.redraw && a.redraw()
            });
            a.drawDataLabels && a.drawDataLabels();
            a.visible && a.drawPoints();
            a.drawTracker && a.options.enableMouseTracking !== !1 && a.drawTracker();
            b.inverted && a.invertGroups();
            d.clip !== !1 && !a.sharedClipKey && !h && c.clip(b.clipRect);
            e && a.animate();
            if (!h)
                e ? a.animationTimeout = setTimeout(function() {
                    a.afterAnimate()
                }, e) : a.afterAnimate();
            a.isDirty = a.isDirtyData = !1;
            a.hasRendered = !0
        },
        redraw: function() {
            var a = this.chart
              , b = this.isDirtyData
              , c = this.isDirty
              , d = this.group
              , e = this.xAxis
              , f = this.yAxis;
            d && (a.inverted && d.attr({
                width: a.plotWidth,
                height: a.plotHeight
            }),
            d.animate({
                translateX: p(e && e.left, a.plotLeft),
                translateY: p(f && f.top, a.plotTop)
            }));
            this.translate();
            this.render();
            b && J(this, "updatedData");
            (c || b) && delete this.kdTree
        },
        kdDimensions: 1,
        kdAxisArray: ["clientX", "plotY"],
        searchPoint: function(a, b) {
            var c = this.xAxis
              , d = this.yAxis
              , e = this.chart.inverted;
            return this.searchKDTree({
                clientX: e ? c.len - a.chartY + c.pos : a.chartX - c.pos,
                plotY: e ? d.len - a.chartX + d.pos : a.chartY - d.pos
            }, b)
        },
        buildKDTree: function() {
            function a(b, d, g) {
                var h, i;
                if (i = b && b.length)
                    return h = c.kdAxisArray[d % g],
                    b.sort(function(a, b) {
                        return a[h] - b[h]
                    }),
                    i = Math.floor(i / 2),
                    {
                        point: b[i],
                        left: a(b.slice(0, i), d + 1, g),
                        right: a(b.slice(i + 1), d + 1, g)
                    }
            }
            function b() {
                var b = kb(c.points || [], function(a) {
                    return a.y !== null
                });
                c.kdTree = a(b, d, d)
            }
            var c = this
              , d = c.kdDimensions;
            delete c.kdTree;
            c.options.kdSync ? b() : setTimeout(b)
        },
        searchKDTree: function(a, b) {
            function c(a, b, j, k) {
                var m = b.point, n = d.kdAxisArray[j % k], l, p, o = m;
                p = q(a[e]) && q(m[e]) ? Math.pow(a[e] - m[e], 2) : null;
                l = q(a[f]) && q(m[f]) ? Math.pow(a[f] - m[f], 2) : null;
                l = (p || 0) + (l || 0);
                m.dist = q(l) ? Math.sqrt(l) : Number.MAX_VALUE;
                m.distX = q(p) ? Math.sqrt(p) : Number.MAX_VALUE;
                n = a[n] - m[n];
                l = n < 0 ? "left" : "right";
                p = n < 0 ? "right" : "left";
                b[l] && (l = c(a, b[l], j + 1, k),
                o = l[g] < o[g] ? l : m);
                b[p] && Math.sqrt(n * n) < o[g] && (a = c(a, b[p], j + 1, k),
                o = a[g] < o[g] ? a : o);
                return o
            }
            var d = this
              , e = this.kdAxisArray[0]
              , f = this.kdAxisArray[1]
              , g = b ? "distX" : "dist";
            this.kdTree || this.buildKDTree();
            if (this.kdTree)
                return c(a, this.kdTree, this.kdDimensions, this.kdDimensions)
        }
    };
    Hb.prototype = {
        destroy: function() {
            Pa(this, this.axis)
        },
        render: function(a) {
            var b = this.options
              , c = b.format
              , c = c ? Ia(c, this) : b.formatter.call(this);
            this.label ? this.label.attr({
                text: c,
                visibility: "hidden"
            }) : this.label = this.axis.chart.renderer.text(c, null, null, b.useHTML).css(b.style).attr({
                align: this.textAlign,
                rotation: b.rotation,
                visibility: "hidden"
            }).add(a)
        },
        setOffset: function(a, b) {
            var c = this.axis
              , d = c.chart
              , e = d.inverted
              , f = c.reversed
              , f = this.isNegative && !f || !this.isNegative && f
              , g = c.translate(c.usePercentage ? 100 : this.total, 0, 0, 0, 1)
              , c = c.translate(0)
              , c = O(g - c)
              , h = d.xAxis[0].translate(this.x) + a
              , i = d.plotHeight
              , f = {
                x: e ? f ? g : g - c : h,
                y: e ? i - h - b : f ? i - g - c : i - g,
                width: e ? c : b,
                height: e ? b : c
            };
            if (e = this.label)
                e.align(this.alignOptions, null, f),
                f = e.alignAttr,
                e[this.options.crop === !1 || d.isInsidePlot(f.x, f.y) ? "show" : "hide"](!0)
        }
    };
    E.prototype.getStacks = function() {
        var a = this;
        o(a.yAxis, function(a) {
            if (a.stacks && a.hasVisibleSeries)
                a.oldStacks = a.stacks
        });
        o(a.series, function(b) {
            if (b.options.stacking && (b.visible === !0 || a.options.chart.ignoreHiddenSeries === !1))
                b.stackKey = b.type + p(b.options.stack, "")
        })
    }
    ;
    ha.prototype.buildStacks = function() {
        var a = this.series
          , b = p(this.options.reversedStacks, !0)
          , c = a.length;
        if (!this.isXAxis) {
            for (this.usePercentage = !1; c--; )
                a[b ? c : a.length - c - 1].setStackedPoints();
            if (this.usePercentage)
                for (c = 0; c < a.length; c++)
                    a[c].setPercentStacks()
        }
    }
    ;
    ha.prototype.renderStackTotals = function() {
        var a = this.chart, b = a.renderer, c = this.stacks, d, e, f = this.stackTotalGroup;
        if (!f)
            this.stackTotalGroup = f = b.g("stack-labels").attr({
                visibility: "visible",
                zIndex: 6
            }).add();
        f.translate(a.plotLeft, a.plotTop);
        for (d in c)
            for (e in a = c[d],
            a)
                a[e].render(f)
    }
    ;
    ha.prototype.resetStacks = function() {
        var a = this.stacks, b, c;
        if (!this.isXAxis)
            for (b in a)
                for (c in a[b])
                    a[b][c].touched < this.stacksTouched ? (a[b][c].destroy(),
                    delete a[b][c]) : (a[b][c].total = null,
                    a[b][c].cum = 0)
    }
    ;
    ha.prototype.cleanStacks = function() {
        var a, b, c;
        if (!this.isXAxis) {
            if (this.oldStacks)
                a = this.stacks = this.oldStacks;
            for (b in a)
                for (c in a[b])
                    a[b][c].cum = a[b][c].total
        }
    }
    ;
    R.prototype.setStackedPoints = function() {
        if (this.options.stacking && !(this.visible !== !0 && this.chart.options.chart.ignoreHiddenSeries !== !1)) {
            var a = this.processedXData, b = this.processedYData, c = [], d = b.length, e = this.options, f = e.threshold, g = e.startFromThreshold ? f : 0, h = e.stack, e = e.stacking, i = this.stackKey, j = "-" + i, k = this.negStacks, m = this.yAxis, n = m.stacks, l = m.oldStacks, o, r, q, t, v, w, x;
            m.stacksTouched += 1;
            for (v = 0; v < d; v++) {
                w = a[v];
                x = b[v];
                o = this.getStackIndicator(o, w, this.index);
                t = o.key;
                q = (r = k && x < (g ? 0 : f)) ? j : i;
                n[q] || (n[q] = {});
                if (!n[q][w])
                    l[q] && l[q][w] ? (n[q][w] = l[q][w],
                    n[q][w].total = null) : n[q][w] = new Hb(m,m.options.stackLabels,r,w,h);
                q = n[q][w];
                q.points[t] = [p(q.cum, g)];
                q.touched = m.stacksTouched;
                e === "percent" ? (r = r ? i : j,
                k && n[r] && n[r][w] ? (r = n[r][w],
                q.total = r.total = s(r.total, q.total) + O(x) || 0) : q.total = ea(q.total + (O(x) || 0))) : q.total = ea(q.total + (x || 0));
                q.cum = p(q.cum, g) + (x || 0);
                q.points[t].push(q.cum);
                c[v] = q.cum
            }
            if (e === "percent")
                m.usePercentage = !0;
            this.stackedYData = c;
            m.oldStacks = {}
        }
    }
    ;
    R.prototype.setPercentStacks = function() {
        var a = this, b = a.stackKey, c = a.yAxis.stacks, d = a.processedXData, e;
        o([b, "-" + b], function(b) {
            var f;
            for (var g = d.length, h, i; g--; )
                if (h = d[g],
                e = a.getStackIndicator(e, h, a.index),
                f = (i = c[b] && c[b][h]) && i.points[e.key],
                h = f)
                    i = i.total ? 100 / i.total : 0,
                    h[0] = ea(h[0] * i),
                    h[1] = ea(h[1] * i),
                    a.stackedYData[g] = h[1]
        })
    }
    ;
    R.prototype.getStackIndicator = function(a, b, c) {
        !q(a) || a.x !== b ? a = {
            x: b,
            index: 0
        } : a.index++;
        a.key = [c, b, a.index].join(",");
        return a
    }
    ;
    t(E.prototype, {
        addSeries: function(a, b, c) {
            var d, e = this;
            a && (b = p(b, !0),
            J(e, "addSeries", {
                options: a
            }, function() {
                d = e.initSeries(a);
                e.isDirtyLegend = !0;
                e.linkSeries();
                b && e.redraw(c)
            }));
            return d
        },
        addAxis: function(a, b, c, d) {
            var e = b ? "xAxis" : "yAxis"
              , f = this.options;
            new ha(this,D(a, {
                index: this[e].length,
                isX: b
            }));
            f[e] = ra(f[e] || {});
            f[e].push(a);
            p(c, !0) && this.redraw(d)
        },
        showLoading: function(a) {
            var b = this
              , c = b.options
              , d = b.loadingDiv
              , e = c.loading
              , f = function() {
                d && M(d, {
                    left: b.plotLeft + "px",
                    top: b.plotTop + "px",
                    width: b.plotWidth + "px",
                    height: b.plotHeight + "px"
                })
            };
            if (!d)
                b.loadingDiv = d = $(Ja, {
                    className: "highcharts-loading"
                }, t(e.style, {
                    zIndex: 10,
                    display: P
                }), b.container),
                b.loadingSpan = $("span", null, e.labelStyle, d),
                I(b, "redraw", f);
            b.loadingSpan.innerHTML = a || c.lang.loading;
            if (!b.loadingShown)
                M(d, {
                    opacity: 0,
                    display: ""
                }),
                lb(d, {
                    opacity: e.style.opacity
                }, {
                    duration: e.showDuration || 0
                }),
                b.loadingShown = !0;
            f()
        },
        hideLoading: function() {
            var a = this.options
              , b = this.loadingDiv;
            b && lb(b, {
                opacity: 0
            }, {
                duration: a.loading.hideDuration || 100,
                complete: function() {
                    M(b, {
                        display: P
                    })
                }
            });
            this.loadingShown = !1
        }
    });
    t(Fa.prototype, {
        update: function(a, b, c, d) {
            function e() {
                f.applyOptions(a);
                if (f.y === null && h)
                    f.graphic = h.destroy();
                if (da(a) && !Ga(a))
                    f.redraw = function() {
                        if (h && h.element && a && a.marker && a.marker.symbol)
                            f.graphic = h.destroy();
                        if (a && a.dataLabels && f.dataLabel)
                            f.dataLabel = f.dataLabel.destroy();
                        f.redraw = null
                    }
                    ;
                i = f.index;
                g.updateParallelArrays(f, i);
                if (m && f.name)
                    m[f.x] = f.name;
                k.data[i] = f.options;
                g.isDirty = g.isDirtyData = !0;
                if (!g.fixedBox && g.hasCartesianSeries)
                    j.isDirtyBox = !0;
                if (k.legendType === "point")
                    j.isDirtyLegend = !0;
                b && j.redraw(c)
            }
            var f = this, g = f.series, h = f.graphic, i, j = g.chart, k = g.options, m = g.xAxis && g.xAxis.names, b = p(b, !0);
            d === !1 ? e() : f.firePointEvent("update", {
                options: a
            }, e)
        },
        remove: function(a, b) {
            this.series.removePoint(La(this, this.series.data), a, b)
        }
    });
    t(R.prototype, {
        addPoint: function(a, b, c, d) {
            var e = this, f = e.options, g = e.data, h = e.graph, i = e.area, j = e.chart, k = e.xAxis && e.xAxis.names, m = h && h.shift || 0, n = ["graph", "area"], h = f.data, l, u = e.xData;
            Ra(d, j);
            if (c) {
                for (d = e.zones.length; d--; )
                    n.push("zoneGraph" + d, "zoneArea" + d);
                o(n, function(a) {
                    if (e[a])
                        e[a].shift = m + (f.step ? 2 : 1)
                })
            }
            if (i)
                i.isArea = !0;
            b = p(b, !0);
            i = {
                series: e
            };
            e.pointClass.prototype.applyOptions.apply(i, [a]);
            n = i.x;
            d = u.length;
            if (e.requireSorting && n < u[d - 1])
                for (l = !0; d && u[d - 1] > n; )
                    d--;
            e.updateParallelArrays(i, "splice", d, 0, 0);
            e.updateParallelArrays(i, d);
            if (k && i.name)
                k[n] = i.name;
            h.splice(d, 0, a);
            l && (e.data.splice(d, 0, null),
            e.processData());
            f.legendType === "point" && e.generatePoints();
            c && (g[0] && g[0].remove ? g[0].remove(!1) : (g.shift(),
            e.updateParallelArrays(i, "shift"),
            h.shift()));
            e.isDirty = !0;
            e.isDirtyData = !0;
            b && (e.getAttribs(),
            j.redraw())
        },
        removePoint: function(a, b, c) {
            var d = this
              , e = d.data
              , f = e[a]
              , g = d.points
              , h = d.chart
              , i = function() {
                e.length === g.length && g.splice(a, 1);
                e.splice(a, 1);
                d.options.data.splice(a, 1);
                d.updateParallelArrays(f || {
                    series: d
                }, "splice", a, 1);
                f && f.destroy();
                d.isDirty = !0;
                d.isDirtyData = !0;
                b && h.redraw()
            };
            Ra(c, h);
            b = p(b, !0);
            f ? f.firePointEvent("remove", null, i) : i()
        },
        remove: function(a, b) {
            var c = this
              , d = c.chart
              , a = p(a, !0);
            if (!c.isRemoving)
                c.isRemoving = !0,
                J(c, "remove", null, function() {
                    c.destroy();
                    d.isDirtyLegend = d.isDirtyBox = !0;
                    d.linkSeries();
                    a && d.redraw(b)
                });
            c.isRemoving = !1
        },
        update: function(a, b) {
            var c = this, d = this.chart, e = this.userOptions, f = this.type, g = N[f].prototype, h = ["group", "markerGroup", "dataLabelsGroup"], i;
            if (a.type && a.type !== f || a.zIndex !== void 0)
                h.length = 0;
            o(h, function(a) {
                h[a] = c[a];
                delete c[a]
            });
            a = D(e, {
                animation: !1,
                index: this.index,
                pointStart: this.xData[0]
            }, {
                data: this.options.data
            }, a);
            this.remove(!1);
            for (i in g)
                this[i] = x;
            t(this, N[a.type || f].prototype);
            o(h, function(a) {
                c[a] = h[a]
            });
            this.init(d, a);
            d.linkSeries();
            p(b, !0) && d.redraw(!1)
        }
    });
    t(ha.prototype, {
        update: function(a, b) {
            var c = this.chart
              , a = c.options[this.coll][this.options.index] = D(this.userOptions, a);
            this.destroy(!0);
            this._addedPlotLB = this.chart._labelPanes = x;
            this.init(c, t(a, {
                events: x
            }));
            c.isDirtyBox = !0;
            p(b, !0) && c.redraw()
        },
        remove: function(a) {
            for (var b = this.chart, c = this.coll, d = this.series, e = d.length; e--; )
                d[e] && d[e].remove(!1);
            ja(b.axes, this);
            ja(b[c], this);
            b.options[c].splice(this.options.index, 1);
            o(b[c], function(a, b) {
                a.options.index = b
            });
            this.destroy();
            b.isDirtyBox = !0;
            p(a, !0) && b.redraw()
        },
        setTitle: function(a, b) {
            this.update({
                title: a
            }, b)
        },
        setCategories: function(a, b) {
            this.update({
                categories: a
            }, b)
        }
    });
    var xa = ka(R);
    N.line = xa;
    ba.area = D(U, {
        softThreshold: !1,
        threshold: 0
    });
    var pa = ka(R, {
        type: "area",
        getSegments: function() {
            var a = this, b = [], c = [], d = [], e = this.xAxis, f = this.yAxis, g = f.stacks[this.stackKey], h = {}, i, j, k = this.points, m = this.options.connectNulls, n, l, p;
            if (this.options.stacking && !this.cropped) {
                for (l = 0; l < k.length; l++)
                    h[k[l].x] = k[l];
                for (p in g)
                    g[p].total !== null && d.push(+p);
                d.sort(function(a, b) {
                    return a - b
                });
                o(d, function(b) {
                    var d = null, k;
                    if (!m || h[b] && h[b].y !== null)
                        if (h[b])
                            c.push(h[b]);
                        else {
                            for (l = a.index; l <= f.series.length; l++)
                                if (n = a.getStackIndicator(null, b, l),
                                k = g[b].points[n.key]) {
                                    d = k[1];
                                    break
                                }
                            i = e.translate(b);
                            j = f.getThreshold(d);
                            c.push({
                                y: null,
                                plotX: i,
                                clientX: i,
                                plotY: j,
                                yBottom: j,
                                onMouseOver: ua
                            })
                        }
                });
                c.length && b.push(c)
            } else
                R.prototype.getSegments.call(this),
                b = this.segments;
            this.segments = b
        },
        getSegmentPath: function(a) {
            var b = R.prototype.getSegmentPath.call(this, a), c = [].concat(b), d, e = this.options;
            d = b.length;
            var f = this.yAxis.getThreshold(e.threshold), g;
            d === 3 && c.push("L", b[1], b[2]);
            if (e.stacking && !this.closedStacks)
                for (d = a.length - 1; d >= 0; d--)
                    g = p(a[d].yBottom, f),
                    d < a.length - 1 && e.step && c.push(a[d + 1].plotX, g),
                    c.push(a[d].plotX, g);
            else
                this.closeSegment(c, a, f);
            this.areaPath = this.areaPath.concat(c);
            return b
        },
        closeSegment: function(a, b, c) {
            a.push("L", b[b.length - 1].plotX, c, "L", b[0].plotX, c)
        },
        drawGraph: function() {
            this.areaPath = [];
            R.prototype.drawGraph.apply(this);
            var a = this
              , b = this.areaPath
              , c = this.options
              , d = [["area", this.color, c.fillColor]];
            o(this.zones, function(b, f) {
                d.push(["zoneArea" + f, b.color || a.color, b.fillColor || c.fillColor])
            });
            o(d, function(d) {
                var f = d[0]
                  , g = a[f];
                g ? g.animate({
                    d: b
                }) : a[f] = a.chart.renderer.path(b).attr({
                    fill: p(d[2], na(d[1]).setOpacity(p(c.fillOpacity, 0.75)).get()),
                    zIndex: 0
                }).add(a.group)
            })
        },
        drawLegendSymbol: Ma.drawRectangle
    });
    N.area = pa;
    ba.spline = D(U);
    xa = ka(R, {
        type: "spline",
        getPointSpline: function(a, b, c) {
            var d = b.plotX, e = b.plotY, f = a[c - 1], g = a[c + 1], h, i, j, k;
            if (f && g) {
                a = f.plotY;
                j = g.plotX;
                var g = g.plotY, m;
                h = (1.5 * d + f.plotX) / 2.5;
                i = (1.5 * e + a) / 2.5;
                j = (1.5 * d + j) / 2.5;
                k = (1.5 * e + g) / 2.5;
                m = (k - i) * (j - d) / (j - h) + e - k;
                i += m;
                k += m;
                i > a && i > e ? (i = s(a, e),
                k = 2 * e - i) : i < a && i < e && (i = z(a, e),
                k = 2 * e - i);
                k > g && k > e ? (k = s(g, e),
                i = 2 * e - k) : k < g && k < e && (k = z(g, e),
                i = 2 * e - k);
                b.rightContX = j;
                b.rightContY = k
            }
            c ? (b = ["C", f.rightContX || f.plotX, f.rightContY || f.plotY, h || d, i || e, d, e],
            f.rightContX = f.rightContY = null) : b = ["M", d, e];
            return b
        }
    });
    N.spline = xa;
    ba.areaspline = D(ba.area);
    pa = pa.prototype;
    xa = ka(xa, {
        type: "areaspline",
        closedStacks: !0,
        getSegmentPath: pa.getSegmentPath,
        closeSegment: pa.closeSegment,
        drawGraph: pa.drawGraph,
        drawLegendSymbol: Ma.drawRectangle
    });
    N.areaspline = xa;
    ba.column = D(U, {
        borderColor: "#FFFFFF",
        borderRadius: 0,
        groupPadding: 0.2,
        marker: null,
        pointPadding: 0.1,
        minPointLength: 0,
        cropThreshold: 50,
        pointRange: null,
        states: {
            hover: {
                brightness: 0.1,
                shadow: !1,
                halo: !1
            },
            select: {
                color: "#C0C0C0",
                borderColor: "#000000",
                shadow: !1
            }
        },
        dataLabels: {
            align: null,
            verticalAlign: null,
            y: null
        },
        softThreshold: !1,
        startFromThreshold: !0,
        stickyTracking: !1,
        tooltip: {
            distance: 6
        },
        threshold: 0
    });
    xa = ka(R, {
        type: "column",
        pointAttrToOptions: {
            stroke: "borderColor",
            fill: "color",
            r: "borderRadius"
        },
        cropShoulder: 0,
        directTouch: !0,
        trackerGroups: ["group", "dataLabelsGroup"],
        negStacks: !0,
        init: function() {
            R.prototype.init.apply(this, arguments);
            var a = this
              , b = a.chart;
            b.hasRendered && o(b.series, function(b) {
                if (b.type === a.type)
                    b.isDirty = !0
            })
        },
        getColumnMetrics: function() {
            var a = this, b = a.options, c = a.xAxis, d = a.yAxis, e = c.reversed, f, g = {}, h, i = 0;
            b.grouping === !1 ? i = 1 : o(a.chart.series, function(b) {
                var c = b.options
                  , e = b.yAxis;
                if (b.type === a.type && b.visible && d.len === e.len && d.pos === e.pos)
                    c.stacking ? (f = b.stackKey,
                    g[f] === x && (g[f] = i++),
                    h = g[f]) : c.grouping !== !1 && (h = i++),
                    b.columnIndex = h
            });
            var j = z(O(c.transA) * (c.ordinalSlope || b.pointRange || c.closestPointRange || c.tickInterval || 1), c.len)
              , k = j * b.groupPadding
              , m = (j - 2 * k) / i
              , b = z(b.maxPointWidth || c.len, p(b.pointWidth, m * (1 - 2 * b.pointPadding)));
            return a.columnMetrics = {
                width: b,
                offset: (m - b) / 2 + (k + ((e ? i - (a.columnIndex || 0) : a.columnIndex) || 0) * m - j / 2) * (e ? -1 : 1)
            }
        },
        crispCol: function(a, b, c, d) {
            var e = this.chart
              , f = this.borderWidth
              , g = -(f % 2 ? 0.5 : 0)
              , f = f % 2 ? 0.5 : 1;
            e.inverted && e.renderer.isVML && (f += 1);
            c = Math.round(a + c) + g;
            a = Math.round(a) + g;
            c -= a;
            g = O(b) <= 0.5;
            d = Math.round(b + d) + f;
            b = Math.round(b) + f;
            d -= b;
            g && (b -= 1,
            d += 1);
            return {
                x: a,
                y: b,
                width: c,
                height: d
            }
        },
        translate: function() {
            var a = this
              , b = a.chart
              , c = a.options
              , d = a.borderWidth = p(c.borderWidth, a.closestPointRange * a.xAxis.transA < 2 ? 0 : 1)
              , e = a.yAxis
              , f = a.translatedThreshold = e.getThreshold(c.threshold)
              , g = p(c.minPointLength, 5)
              , h = a.getColumnMetrics()
              , i = h.width
              , j = a.barW = s(i, 1 + 2 * d)
              , k = a.pointXOffset = h.offset;
            b.inverted && (f -= 0.5);
            c.pointPadding && (j = ta(j));
            R.prototype.translate.apply(a);
            o(a.points, function(c) {
                var d = z(p(c.yBottom, f), 9E4), h = 999 + O(d), h = z(s(-h, c.plotY), e.len + h), o = c.plotX + k, q = j, t = z(h, d), w, v = s(h, d) - t;
                O(v) < g && g && (v = g,
                w = !e.reversed && !c.negative || e.reversed && c.negative,
                t = O(t - f) > g ? d - g : f - (w ? g : 0));
                c.barX = o;
                c.pointWidth = i;
                c.tooltipPos = b.inverted ? [e.len + e.pos - b.plotLeft - h, a.xAxis.len - o - q / 2, v] : [o + q / 2, h + e.pos - b.plotTop, v];
                c.shapeType = "rect";
                c.shapeArgs = a.crispCol(o, t, q, v)
            })
        },
        getSymbol: ua,
        drawLegendSymbol: Ma.drawRectangle,
        drawGraph: ua,
        drawPoints: function() {
            var a = this, b = this.chart, c = a.options, d = b.renderer, e = c.animationLimit || 250, f, g;
            o(a.points, function(h) {
                var i = h.plotY
                  , j = h.graphic;
                if (i !== x && !isNaN(i) && h.y !== null)
                    f = h.shapeArgs,
                    i = q(a.borderWidth) ? {
                        "stroke-width": a.borderWidth
                    } : {},
                    g = h.pointAttr[h.selected ? "select" : ""] || a.pointAttr[""],
                    j ? (cb(j),
                    j.attr(i)[b.pointCount < e ? "animate" : "attr"](D(f))) : h.graphic = d[h.shapeType](f).attr(i).attr(g).add(h.group || a.group).shadow(c.shadow, null, c.stacking && !c.borderRadius);
                else if (j)
                    h.graphic = j.destroy()
            })
        },
        animate: function(a) {
            var b = this.yAxis
              , c = this.options
              , d = this.chart.inverted
              , e = {};
            if (ca)
                a ? (e.scaleY = 0.001,
                a = z(b.pos + b.len, s(b.pos, b.toPixels(c.threshold))),
                d ? e.translateX = a - b.len : e.translateY = a,
                this.group.attr(e)) : (e.scaleY = 1,
                e[d ? "translateX" : "translateY"] = b.pos,
                this.group.animate(e, this.options.animation),
                this.animate = null)
        },
        remove: function() {
            var a = this
              , b = a.chart;
            b.hasRendered && o(b.series, function(b) {
                if (b.type === a.type)
                    b.isDirty = !0
            });
            R.prototype.remove.apply(a, arguments)
        }
    });
    N.column = xa;
    ba.bar = D(ba.column);
    pa = ka(xa, {
        type: "bar",
        inverted: !0
    });
    N.bar = pa;
    ba.scatter = D(U, {
        lineWidth: 0,
        marker: {
            enabled: !0
        },
        tooltip: {
            headerFormat: '<span style="color:{point.color}">\u25cf</span> <span style="font-size: 10px;"> {series.name}</span><br/>',
            pointFormat: "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>"
        }
    });
    pa = ka(R, {
        type: "scatter",
        sorted: !1,
        requireSorting: !1,
        noSharedTooltip: !0,
        trackerGroups: ["group", "markerGroup", "dataLabelsGroup"],
        takeOrdinalPosition: !1,
        kdDimensions: 2,
        drawGraph: function() {
            this.options.lineWidth && R.prototype.drawGraph.call(this)
        }
    });
    N.scatter = pa;
    ba.pie = D(U, {
        borderColor: "#FFFFFF",
        borderWidth: 1,
        center: [null, null],
        clip: !1,
        colorByPoint: !0,
        dataLabels: {
            distance: 30,
            enabled: !0,
            formatter: function() {
                return this.y === null ? void 0 : this.point.name
            },
            x: 0
        },
        ignoreHiddenPoint: !0,
        legendType: "point",
        marker: null,
        size: null,
        showInLegend: !1,
        slicedOffset: 10,
        states: {
            hover: {
                brightness: 0.1,
                shadow: !1
            }
        },
        stickyTracking: !1,
        tooltip: {
            followPointer: !0
        }
    });
    U = {
        type: "pie",
        isCartesian: !1,
        pointClass: ka(Fa, {
            init: function() {
                Fa.prototype.init.apply(this, arguments);
                var a = this, b;
                a.name = p(a.name, "Slice");
                b = function(b) {
                    a.slice(b.type === "select")
                }
                ;
                I(a, "select", b);
                I(a, "unselect", b);
                return a
            },
            setVisible: function(a, b) {
                var c = this
                  , d = c.series
                  , e = d.chart
                  , f = d.options.ignoreHiddenPoint
                  , b = p(b, f);
                if (a !== c.visible) {
                    c.visible = c.options.visible = a = a === x ? !c.visible : a;
                    d.options.data[La(c, d.data)] = c.options;
                    o(["graphic", "dataLabel", "connector", "shadowGroup"], function(b) {
                        if (c[b])
                            c[b][a ? "show" : "hide"](!0)
                    });
                    c.legendItem && e.legend.colorizeItem(c, a);
                    !a && c.state === "hover" && c.setState("");
                    if (f)
                        d.isDirty = !0;
                    b && e.redraw()
                }
            },
            slice: function(a, b, c) {
                var d = this.series;
                Ra(c, d.chart);
                p(b, !0);
                this.sliced = this.options.sliced = a = q(a) ? a : !this.sliced;
                d.options.data[La(this, d.data)] = this.options;
                a = a ? this.slicedTranslation : {
                    translateX: 0,
                    translateY: 0
                };
                this.graphic.animate(a);
                this.shadowGroup && this.shadowGroup.animate(a)
            },
            haloPath: function(a) {
                var b = this.shapeArgs
                  , c = this.series.chart;
                return this.sliced || !this.visible ? [] : this.series.chart.renderer.symbols.arc(c.plotLeft + b.x, c.plotTop + b.y, b.r + a, b.r + a, {
                    innerR: this.shapeArgs.r,
                    start: b.start,
                    end: b.end
                })
            }
        }),
        requireSorting: !1,
        directTouch: !0,
        noSharedTooltip: !0,
        trackerGroups: ["group", "dataLabelsGroup"],
        axisTypes: [],
        pointAttrToOptions: {
            stroke: "borderColor",
            "stroke-width": "borderWidth",
            fill: "color"
        },
        animate: function(a) {
            var b = this
              , c = b.points
              , d = b.startAngleRad;
            if (!a)
                o(c, function(a) {
                    var c = a.graphic
                      , g = a.shapeArgs;
                    c && (c.attr({
                        r: a.startR || b.center[3] / 2,
                        start: d,
                        end: d
                    }),
                    c.animate({
                        r: g.r,
                        start: g.start,
                        end: g.end
                    }, b.options.animation))
                }),
                b.animate = null
        },
        updateTotals: function() {
            var a, b = 0, c = this.points, d = c.length, e, f = this.options.ignoreHiddenPoint;
            for (a = 0; a < d; a++)
                e = c[a],
                b += f && !e.visible ? 0 : e.y;
            this.total = b;
            for (a = 0; a < d; a++)
                e = c[a],
                e.percentage = b > 0 && (e.visible || !f) ? e.y / b * 100 : 0,
                e.total = b
        },
        generatePoints: function() {
            R.prototype.generatePoints.call(this);
            this.updateTotals()
        },
        translate: function(a) {
            this.generatePoints();
            var b = 0, c = this.options, d = c.slicedOffset, e = d + c.borderWidth, f, g, h, i = c.startAngle || 0, j = this.startAngleRad = ma / 180 * (i - 90), i = (this.endAngleRad = ma / 180 * (p(c.endAngle, i + 360) - 90)) - j, k = this.points, m = c.dataLabels.distance, c = c.ignoreHiddenPoint, n, l = k.length, o;
            if (!a)
                this.center = a = this.getCenter();
            this.getX = function(b, c) {
                h = V.asin(z((b - a[1]) / (a[2] / 2 + m), 1));
                return a[0] + (c ? -1 : 1) * W(h) * (a[2] / 2 + m)
            }
            ;
            for (n = 0; n < l; n++) {
                o = k[n];
                f = j + b * i;
                if (!c || o.visible)
                    b += o.percentage / 100;
                g = j + b * i;
                o.shapeType = "arc";
                o.shapeArgs = {
                    x: a[0],
                    y: a[1],
                    r: a[2] / 2,
                    innerR: a[3] / 2,
                    start: w(f * 1E3) / 1E3,
                    end: w(g * 1E3) / 1E3
                };
                h = (g + f) / 2;
                h > 1.5 * ma ? h -= 2 * ma : h < -ma / 2 && (h += 2 * ma);
                o.slicedTranslation = {
                    translateX: w(W(h) * d),
                    translateY: w(aa(h) * d)
                };
                f = W(h) * a[2] / 2;
                g = aa(h) * a[2] / 2;
                o.tooltipPos = [a[0] + f * 0.7, a[1] + g * 0.7];
                o.half = h < -ma / 2 || h > ma / 2 ? 1 : 0;
                o.angle = h;
                e = z(e, m / 2);
                o.labelPos = [a[0] + f + W(h) * m, a[1] + g + aa(h) * m, a[0] + f + W(h) * e, a[1] + g + aa(h) * e, a[0] + f, a[1] + g, m < 0 ? "center" : o.half ? "right" : "left", h]
            }
        },
        drawGraph: null,
        drawPoints: function() {
            var a = this, b = a.chart.renderer, c, d, e = a.options.shadow, f, g, h;
            if (e && !a.shadowGroup)
                a.shadowGroup = b.g("shadow").add(a.group);
            o(a.points, function(i) {
                if (i.y !== null) {
                    d = i.graphic;
                    g = i.shapeArgs;
                    f = i.shadowGroup;
                    if (e && !f)
                        f = i.shadowGroup = b.g("shadow").add(a.shadowGroup);
                    c = i.sliced ? i.slicedTranslation : {
                        translateX: 0,
                        translateY: 0
                    };
                    f && f.attr(c);
                    if (d)
                        d.setRadialReference(a.center).animate(t(g, c));
                    else {
                        h = {
                            "stroke-linejoin": "round"
                        };
                        if (!i.visible)
                            h.visibility = "hidden";
                        i.graphic = d = b[i.shapeType](g).setRadialReference(a.center).attr(i.pointAttr[i.selected ? "select" : ""]).attr(h).attr(c).add(a.group).shadow(e, f)
                    }
                }
            })
        },
        searchPoint: ua,
        sortByAngle: function(a, b) {
            a.sort(function(a, d) {
                return a.angle !== void 0 && (d.angle - a.angle) * b
            })
        },
        drawLegendSymbol: Ma.drawRectangle,
        getCenter: Xb.getCenter,
        getSymbol: ua
    };
    U = ka(R, U);
    N.pie = U;
    R.prototype.drawDataLabels = function() {
        var a = this, b = a.options, c = b.cursor, d = b.dataLabels, e = a.points, f, g, h = a.hasRendered || 0, i, j, k = a.chart.renderer;
        if (d.enabled || a._hasPointLabels)
            a.dlProcessOptions && a.dlProcessOptions(d),
            j = a.plotGroup("dataLabelsGroup", "data-labels", d.defer ? "hidden" : "visible", d.zIndex || 6),
            p(d.defer, !0) && (j.attr({
                opacity: +h
            }),
            h || I(a, "afterAnimate", function() {
                a.visible && j.show();
                j[b.animation ? "animate" : "attr"]({
                    opacity: 1
                }, {
                    duration: 200
                })
            })),
            g = d,
            o(e, function(e) {
                var h, l = e.dataLabel, o, r, s = e.connector, w = !0, v, y = {};
                f = e.dlOptions || e.options && e.options.dataLabels;
                h = p(f && f.enabled, g.enabled);
                if (l && !h)
                    e.dataLabel = l.destroy();
                else if (h) {
                    d = D(g, f);
                    v = d.style;
                    h = d.rotation;
                    o = e.getLabelConfig();
                    i = d.format ? Ia(d.format, o) : d.formatter.call(o, d);
                    v.color = p(d.color, v.color, a.color, "black");
                    if (l)
                        if (q(i))
                            l.attr({
                                text: i
                            }),
                            w = !1;
                        else {
                            if (e.dataLabel = l = l.destroy(),
                            s)
                                e.connector = s.destroy()
                        }
                    else if (q(i)) {
                        l = {
                            fill: d.backgroundColor,
                            stroke: d.borderColor,
                            "stroke-width": d.borderWidth,
                            r: d.borderRadius || 0,
                            rotation: h,
                            padding: d.padding,
                            zIndex: 1
                        };
                        if (v.color === "contrast")
                            y.color = d.inside || d.distance < 0 || b.stacking ? k.getContrast(e.color || a.color) : "#000000";
                        if (c)
                            y.cursor = c;
                        for (r in l)
                            l[r] === x && delete l[r];
                        l = e.dataLabel = k[h ? "text" : "label"](i, 0, -999, d.shape, null, null, d.useHTML).attr(l).css(t(v, y)).add(j).shadow(d.shadow)
                    }
                    l && a.alignDataLabel(e, l, d, null, w)
                }
            })
    }
    ;
    R.prototype.alignDataLabel = function(a, b, c, d, e) {
        var f = this.chart
          , g = f.inverted
          , h = p(a.plotX, -999)
          , i = p(a.plotY, -999)
          , j = b.getBBox()
          , k = f.renderer.fontMetrics(c.style.fontSize).b
          , m = this.visible && (a.series.forceDL || f.isInsidePlot(h, w(i), g) || d && f.isInsidePlot(h, g ? d.x + 1 : d.y + d.height - 1, g));
        if (m)
            d = t({
                x: g ? f.plotWidth - i : h,
                y: w(g ? f.plotHeight - h : i),
                width: 0,
                height: 0
            }, d),
            t(c, {
                width: j.width,
                height: j.height
            }),
            c.rotation ? (a = f.renderer.rotCorr(k, c.rotation),
            b[e ? "attr" : "animate"]({
                x: d.x + c.x + d.width / 2 + a.x,
                y: d.y + c.y + d.height / 2
            }).attr({
                align: c.align
            })) : (b.align(c, null, d),
            g = b.alignAttr,
            p(c.overflow, "justify") === "justify" ? this.justifyDataLabel(b, c, g, j, d, e) : p(c.crop, !0) && (m = f.isInsidePlot(g.x, g.y) && f.isInsidePlot(g.x + j.width, g.y + j.height)),
            c.shape && b.attr({
                anchorX: a.plotX,
                anchorY: a.plotY
            }));
        if (!m)
            cb(b),
            b.attr({
                y: -999
            }),
            b.placed = !1
    }
    ;
    R.prototype.justifyDataLabel = function(a, b, c, d, e, f) {
        var g = this.chart, h = b.align, i = b.verticalAlign, j, k, m = a.box ? 0 : a.padding || 0;
        j = c.x + m;
        if (j < 0)
            h === "right" ? b.align = "left" : b.x = -j,
            k = !0;
        j = c.x + d.width - m;
        if (j > g.plotWidth)
            h === "left" ? b.align = "right" : b.x = g.plotWidth - j,
            k = !0;
        j = c.y + m;
        if (j < 0)
            i === "bottom" ? b.verticalAlign = "top" : b.y = -j,
            k = !0;
        j = c.y + d.height - m;
        if (j > g.plotHeight)
            i === "top" ? b.verticalAlign = "bottom" : b.y = g.plotHeight - j,
            k = !0;
        if (k)
            a.placed = !f,
            a.align(b, null, e)
    }
    ;
    if (N.pie)
        N.pie.prototype.drawDataLabels = function() {
            var a = this, b = a.data, c, d = a.chart, e = a.options.dataLabels, f = p(e.connectorPadding, 10), g = p(e.connectorWidth, 1), h = d.plotWidth, i = d.plotHeight, j, k, m = p(e.softConnector, !0), n = e.distance, l = a.center, q = l[2] / 2, r = l[1], t = n > 0, x, v, y, D = [[], []], C, B, E, G, H, F = [0, 0, 0, 0], M = function(a, b) {
                return b.y - a.y
            };
            if (a.visible && (e.enabled || a._hasPointLabels)) {
                R.prototype.drawDataLabels.apply(a);
                o(b, function(a) {
                    a.dataLabel && a.visible && D[a.half].push(a)
                });
                for (G = 2; G--; ) {
                    var J = [], N = [], I = D[G], L = I.length, K;
                    if (L) {
                        a.sortByAngle(I, G - 0.5);
                        for (H = b = 0; !b && I[H]; )
                            b = I[H] && I[H].dataLabel && (I[H].dataLabel.getBBox().height || 21),
                            H++;
                        if (n > 0) {
                            v = z(r + q + n, d.plotHeight);
                            for (H = s(0, r - q - n); H <= v; H += b)
                                J.push(H);
                            v = J.length;
                            if (L > v) {
                                c = [].concat(I);
                                c.sort(M);
                                for (H = L; H--; )
                                    c[H].rank = H;
                                for (H = L; H--; )
                                    I[H].rank >= v && I.splice(H, 1);
                                L = I.length
                            }
                            for (H = 0; H < L; H++) {
                                c = I[H];
                                y = c.labelPos;
                                c = 9999;
                                var Q, P;
                                for (P = 0; P < v; P++)
                                    Q = O(J[P] - y[1]),
                                    Q < c && (c = Q,
                                    K = P);
                                if (K < H && J[H] !== null)
                                    K = H;
                                else
                                    for (v < L - H + K && J[H] !== null && (K = v - L + H); J[K] === null; )
                                        K++;
                                N.push({
                                    i: K,
                                    y: J[K]
                                });
                                J[K] = null
                            }
                            N.sort(M)
                        }
                        for (H = 0; H < L; H++) {
                            c = I[H];
                            y = c.labelPos;
                            x = c.dataLabel;
                            E = c.visible === !1 ? "hidden" : "inherit";
                            c = y[1];
                            if (n > 0) {
                                if (v = N.pop(),
                                K = v.i,
                                B = v.y,
                                c > B && J[K + 1] !== null || c < B && J[K - 1] !== null)
                                    B = z(s(0, c), d.plotHeight)
                            } else
                                B = c;
                            C = e.justify ? l[0] + (G ? -1 : 1) * (q + n) : a.getX(B === r - q - n || B === r + q + n ? c : B, G);
                            x._attr = {
                                visibility: E,
                                align: y[6]
                            };
                            x._pos = {
                                x: C + e.x + ({
                                    left: f,
                                    right: -f
                                }[y[6]] || 0),
                                y: B + e.y - 10
                            };
                            x.connX = C;
                            x.connY = B;
                            if (this.options.size === null)
                                v = x.width,
                                C - v < f ? F[3] = s(w(v - C + f), F[3]) : C + v > h - f && (F[1] = s(w(C + v - h + f), F[1])),
                                B - b / 2 < 0 ? F[0] = s(w(-B + b / 2), F[0]) : B + b / 2 > i && (F[2] = s(w(B + b / 2 - i), F[2]))
                        }
                    }
                }
                if (Da(F) === 0 || this.verifyDataLabelOverflow(F))
                    this.placeDataLabels(),
                    t && g && o(this.points, function(b) {
                        j = b.connector;
                        y = b.labelPos;
                        if ((x = b.dataLabel) && x._pos && b.visible)
                            E = x._attr.visibility,
                            C = x.connX,
                            B = x.connY,
                            k = m ? ["M", C + (y[6] === "left" ? 5 : -5), B, "C", C, B, 2 * y[2] - y[4], 2 * y[3] - y[5], y[2], y[3], "L", y[4], y[5]] : ["M", C + (y[6] === "left" ? 5 : -5), B, "L", y[2], y[3], "L", y[4], y[5]],
                            j ? (j.animate({
                                d: k
                            }),
                            j.attr("visibility", E)) : b.connector = j = a.chart.renderer.path(k).attr({
                                "stroke-width": g,
                                stroke: e.connectorColor || b.color || "#606060",
                                visibility: E
                            }).add(a.dataLabelsGroup);
                        else if (j)
                            b.connector = j.destroy()
                    })
            }
        }
        ,
        N.pie.prototype.placeDataLabels = function() {
            o(this.points, function(a) {
                var b = a.dataLabel;
                if (b && a.visible)
                    (a = b._pos) ? (b.attr(b._attr),
                    b[b.moved ? "animate" : "attr"](a),
                    b.moved = !0) : b && b.attr({
                        y: -999
                    })
            })
        }
        ,
        N.pie.prototype.alignDataLabel = ua,
        N.pie.prototype.verifyDataLabelOverflow = function(a) {
            var b = this.center, c = this.options, d = c.center, e = c.minSize || 80, f = e, g;
            d[0] !== null ? f = s(b[2] - s(a[1], a[3]), e) : (f = s(b[2] - a[1] - a[3], e),
            b[0] += (a[3] - a[1]) / 2);
            d[1] !== null ? f = s(z(f, b[2] - s(a[0], a[2])), e) : (f = s(z(f, b[2] - a[0] - a[2]), e),
            b[1] += (a[0] - a[2]) / 2);
            f < b[2] ? (b[2] = f,
            b[3] = Math.min(/%$/.test(c.innerSize || 0) ? f * parseFloat(c.innerSize || 0) / 100 : parseFloat(c.innerSize || 0), f),
            this.translate(b),
            o(this.points, function(a) {
                if (a.dataLabel)
                    a.dataLabel._pos = null
            }),
            this.drawDataLabels && this.drawDataLabels()) : g = !0;
            return g
        }
        ;
    if (N.column)
        N.column.prototype.alignDataLabel = function(a, b, c, d, e) {
            var f = this.chart.inverted
              , g = a.series
              , h = a.dlBox || a.shapeArgs
              , i = p(a.below, a.plotY > p(this.translatedThreshold, g.yAxis.len))
              , j = p(c.inside, !!this.options.stacking);
            if (h && (d = D(h),
            f && (d = {
                x: g.yAxis.len - d.y - d.height,
                y: g.xAxis.len - d.x - d.width,
                width: d.height,
                height: d.width
            }),
            !j))
                f ? (d.x += i ? 0 : d.width,
                d.width = 0) : (d.y += i ? d.height : 0,
                d.height = 0);
            c.align = p(c.align, !f || j ? "center" : i ? "right" : "left");
            c.verticalAlign = p(c.verticalAlign, f || j ? "middle" : i ? "top" : "bottom");
            R.prototype.alignDataLabel.call(this, a, b, c, d, e)
        }
        ;
    (function(a) {
        var b = a.Chart
          , c = a.each
          , d = a.pick
          , e = HighchartsAdapter.addEvent;
        b.prototype.callbacks.push(function(a) {
            function b() {
                var e = [];
                c(a.series, function(a) {
                    var b = a.options.dataLabels
                      , f = a.dataLabelCollections || ["dataLabel"];
                    (b.enabled || a._hasPointLabels) && !b.allowOverlap && a.visible && c(f, function(b) {
                        c(a.points, function(a) {
                            if (a[b])
                                a[b].labelrank = d(a.labelrank, a.shapeArgs && a.shapeArgs.height),
                                e.push(a[b])
                        })
                    })
                });
                a.hideOverlappingLabels(e)
            }
            b();
            e(a, "redraw", b)
        });
        b.prototype.hideOverlappingLabels = function(a) {
            var b = a.length, d, e, j, k, m, n, l;
            for (e = 0; e < b; e++)
                if (d = a[e])
                    d.oldOpacity = d.opacity,
                    d.newOpacity = 1;
            a.sort(function(a, b) {
                return (b.labelrank || 0) - (a.labelrank || 0)
            });
            for (e = 0; e < b; e++) {
                j = a[e];
                for (d = e + 1; d < b; ++d)
                    if (k = a[d],
                    j && k && j.placed && k.placed && j.newOpacity !== 0 && k.newOpacity !== 0 && (m = j.alignAttr,
                    n = k.alignAttr,
                    l = 2 * (j.box ? 0 : j.padding),
                    m = !(n.x > m.x + (j.width - l) || n.x + (k.width - l) < m.x || n.y > m.y + (j.height - l) || n.y + (k.height - l) < m.y)))
                        (j.labelrank < k.labelrank ? j : k).newOpacity = 0
            }
            c(a, function(a) {
                var b, c;
                if (a) {
                    c = a.newOpacity;
                    if (a.oldOpacity !== c && a.placed)
                        c ? a.show(!0) : b = function() {
                            a.hide()
                        }
                        ,
                        a.alignAttr.opacity = c,
                        a[a.isOld ? "animate" : "attr"](a.alignAttr, null, b);
                    a.isOld = !0
                }
            })
        }
    })(B);
    U = B.TrackerMixin = {
        drawTrackerPoint: function() {
            var a = this
              , b = a.chart
              , c = b.pointer
              , d = a.options.cursor
              , e = d && {
                cursor: d
            }
              , f = function(a) {
                for (var c = a.target, d; c && !d; )
                    d = c.point,
                    c = c.parentNode;
                if (d !== x && d !== b.hoverPoint)
                    d.onMouseOver(a)
            };
            o(a.points, function(a) {
                if (a.graphic)
                    a.graphic.element.point = a;
                if (a.dataLabel)
                    a.dataLabel.element.point = a
            });
            if (!a._hasTracking)
                o(a.trackerGroups, function(b) {
                    if (a[b] && (a[b].addClass("highcharts-tracker").on("mouseover", f).on("mouseout", function(a) {
                        c.onTrackerMouseOut(a)
                    }).css(e),
                    ab))
                        a[b].on("touchstart", f)
                }),
                a._hasTracking = !0
        },
        drawTrackerGraph: function() {
            var a = this, b = a.options, c = b.trackByArea, d = [].concat(c ? a.areaPath : a.graphPath), e = d.length, f = a.chart, g = f.pointer, h = f.renderer, i = f.options.tooltip.snap, j = a.tracker, k = b.cursor, m = k && {
                cursor: k
            }, k = a.singlePoints, n, l = function() {
                if (f.hoverSeries !== a)
                    a.onMouseOver()
            }, p = "rgba(192,192,192," + (ca ? 1.0E-4 : 0.002) + ")";
            if (e && !c)
                for (n = e + 1; n--; )
                    d[n] === "M" && d.splice(n + 1, 0, d[n + 1] - i, d[n + 2], "L"),
                    (n && d[n] === "M" || n === e) && d.splice(n, 0, "L", d[n - 2] + i, d[n - 1]);
            for (n = 0; n < k.length; n++)
                e = k[n],
                d.push("M", e.plotX - i, e.plotY, "L", e.plotX + i, e.plotY);
            j ? j.attr({
                d: d
            }) : (a.tracker = h.path(d).attr({
                "stroke-linejoin": "round",
                visibility: a.visible ? "visible" : "hidden",
                stroke: p,
                fill: c ? p : P,
                "stroke-width": b.lineWidth + (c ? 0 : 2 * i),
                zIndex: 2
            }).add(a.group),
            o([a.tracker, a.markerGroup], function(a) {
                a.addClass("highcharts-tracker").on("mouseover", l).on("mouseout", function(a) {
                    g.onTrackerMouseOut(a)
                }).css(m);
                if (ab)
                    a.on("touchstart", l)
            }))
        }
    };
    if (N.column)
        xa.prototype.drawTracker = U.drawTrackerPoint;
    if (N.pie)
        N.pie.prototype.drawTracker = U.drawTrackerPoint;
    if (N.scatter)
        pa.prototype.drawTracker = U.drawTrackerPoint;
    t(mb.prototype, {
        setItemEvents: function(a, b, c, d, e) {
            var f = this;
            (c ? b : a.legendGroup).on("mouseover", function() {
                a.setState("hover");
                b.css(f.options.itemHoverStyle)
            }).on("mouseout", function() {
                b.css(a.visible ? d : e);
                a.setState()
            }).on("click", function(b) {
                var c = function() {
                    a.setVisible && a.setVisible()
                }
                  , b = {
                    browserEvent: b
                };
                a.firePointEvent ? a.firePointEvent("legendItemClick", b, c) : J(a, "legendItemClick", b, c)
            })
        },
        createCheckboxForItem: function(a) {
            a.checkbox = $("input", {
                type: "checkbox",
                checked: a.selected,
                defaultChecked: a.selected
            }, this.options.itemCheckboxStyle, this.chart.container);
            I(a.checkbox, "click", function(b) {
                J(a.series || a, "checkboxClick", {
                    checked: b.target.checked,
                    item: a
                }, function() {
                    a.select()
                })
            })
        }
    });
    S.legend.itemStyle.cursor = "pointer";
    t(E.prototype, {
        showResetZoom: function() {
            var a = this
              , b = S.lang
              , c = a.options.chart.resetZoomButton
              , d = c.theme
              , e = d.states
              , f = c.relativeTo === "chart" ? null : "plotBox";
            this.resetZoomButton = a.renderer.button(b.resetZoom, null, null, function() {
                a.zoomOut()
            }, d, e && e.hover).attr({
                align: c.position.align,
                title: b.resetZoomTitle
            }).add().align(c.position, !1, f)
        },
        zoomOut: function() {
            var a = this;
            J(a, "selection", {
                resetSelection: !0
            }, function() {
                a.zoom()
            })
        },
        zoom: function(a) {
            var b, c = this.pointer, d = !1, e;
            !a || a.resetSelection ? o(this.axes, function(a) {
                b = a.zoom()
            }) : o(a.xAxis.concat(a.yAxis), function(a) {
                var e = a.axis
                  , h = e.isXAxis;
                if (c[h ? "zoomX" : "zoomY"] || c[h ? "pinchX" : "pinchY"])
                    b = e.zoom(a.min, a.max),
                    e.displayBtn && (d = !0)
            });
            e = this.resetZoomButton;
            if (d && !e)
                this.showResetZoom();
            else if (!d && da(e))
                this.resetZoomButton = e.destroy();
            b && this.redraw(p(this.options.chart.animation, a && a.animation, this.pointCount < 100))
        },
        pan: function(a, b) {
            var c = this, d = c.hoverPoints, e;
            d && o(d, function(a) {
                a.setState()
            });
            o(b === "xy" ? [1, 0] : [1], function(b) {
                var d = a[b ? "chartX" : "chartY"]
                  , h = c[b ? "xAxis" : "yAxis"][0]
                  , i = c[b ? "mouseDownX" : "mouseDownY"]
                  , j = (h.pointRange || 0) / 2
                  , k = h.getExtremes()
                  , m = h.toValue(i - d, !0) + j
                  , j = h.toValue(i + c[b ? "plotWidth" : "plotHeight"] - d, !0) - j
                  , i = i > d;
                if (h.series.length && (i || m > z(k.dataMin, k.min)) && (!i || j < s(k.dataMax, k.max)))
                    h.setExtremes(m, j, !1, !1, {
                        trigger: "pan"
                    }),
                    e = !0;
                c[b ? "mouseDownX" : "mouseDownY"] = d
            });
            e && c.redraw(!1);
            M(c.container, {
                cursor: "move"
            })
        }
    });
    t(Fa.prototype, {
        select: function(a, b) {
            var c = this
              , d = c.series
              , e = d.chart
              , a = p(a, !c.selected);
            c.firePointEvent(a ? "select" : "unselect", {
                accumulate: b
            }, function() {
                c.selected = c.options.selected = a;
                d.options.data[La(c, d.data)] = c.options;
                c.setState(a && "select");
                b || o(e.getSelectedPoints(), function(a) {
                    if (a.selected && a !== c)
                        a.selected = a.options.selected = !1,
                        d.options.data[La(a, d.data)] = a.options,
                        a.setState(""),
                        a.firePointEvent("unselect")
                })
            })
        },
        onMouseOver: function(a, b) {
            var c = this.series
              , d = c.chart
              , e = d.tooltip
              , f = d.hoverPoint;
            if (d.hoverSeries !== c)
                c.onMouseOver();
            if (f && f !== this)
                f.onMouseOut();
            if (this.series && (this.firePointEvent("mouseOver"),
            e && (!e.shared || c.noSharedTooltip) && e.refresh(this, a),
            this.setState("hover"),
            !b))
                d.hoverPoint = this
        },
        onMouseOut: function() {
            var a = this.series.chart
              , b = a.hoverPoints;
            this.firePointEvent("mouseOut");
            if (!b || La(this, b) === -1)
                this.setState(),
                a.hoverPoint = null
        },
        importEvents: function() {
            if (!this.hasImportedEvents) {
                var a = D(this.series.options.point, this.options).events, b;
                this.events = a;
                for (b in a)
                    I(this, b, a[b]);
                this.hasImportedEvents = !0
            }
        },
        setState: function(a, b) {
            var c = T(this.plotX), d = this.plotY, e = this.series, f = e.options.states, g = ba[e.type].marker && e.options.marker, h = g && !g.enabled, i = g && g.states[a], j = i && i.enabled === !1, k = e.stateMarkerGraphic, m = this.marker || {}, n = e.chart, l = e.halo, o, a = a || "";
            o = this.pointAttr[a] || e.pointAttr[a];
            if (!(a === this.state && !b || this.selected && a !== "select" || f[a] && f[a].enabled === !1 || a && (j || h && i.enabled === !1) || a && m.states && m.states[a] && m.states[a].enabled === !1)) {
                if (this.graphic)
                    g = g && this.graphic.symbolName && o.r,
                    this.graphic.attr(D(o, g ? {
                        x: c - g,
                        y: d - g,
                        width: 2 * g,
                        height: 2 * g
                    } : {})),
                    k && k.hide();
                else {
                    if (a && i)
                        if (g = i.radius,
                        m = m.symbol || e.symbol,
                        k && k.currentSymbol !== m && (k = k.destroy()),
                        k)
                            k[b ? "animate" : "attr"]({
                                x: c - g,
                                y: d - g
                            });
                        else if (m)
                            e.stateMarkerGraphic = k = n.renderer.symbol(m, c - g, d - g, 2 * g, 2 * g).attr(o).add(e.markerGroup),
                            k.currentSymbol = m;
                    if (k)
                        k[a && n.isInsidePlot(c, d, n.inverted) ? "show" : "hide"](),
                        k.element.point = this
                }
                if ((c = f[a] && f[a].halo) && c.size) {
                    if (!l)
                        e.halo = l = n.renderer.path().add(n.seriesGroup);
                    l.attr(t({
                        fill: na(this.color || e.color).setOpacity(c.opacity).get()
                    }, c.attributes))[b ? "animate" : "attr"]({
                        d: this.haloPath(c.size)
                    })
                } else
                    l && l.attr({
                        d: []
                    });
                this.state = a
            }
        },
        haloPath: function(a) {
            var b = this.series
              , c = b.chart
              , d = b.getPlotBox()
              , e = c.inverted;
            return c.renderer.symbols.circle(d.translateX + (e ? b.yAxis.len - this.plotY : this.plotX) - a, d.translateY + (e ? b.xAxis.len - this.plotX : this.plotY) - a, a * 2, a * 2)
        }
    });
    t(R.prototype, {
        onMouseOver: function() {
            var a = this.chart
              , b = a.hoverSeries;
            if (b && b !== this)
                b.onMouseOut();
            this.options.events.mouseOver && J(this, "mouseOver");
            this.setState("hover");
            a.hoverSeries = this
        },
        onMouseOut: function() {
            var a = this.options
              , b = this.chart
              , c = b.tooltip
              , d = b.hoverPoint;
            b.hoverSeries = null;
            if (d)
                d.onMouseOut();
            this && a.events.mouseOut && J(this, "mouseOut");
            c && !a.stickyTracking && (!c.shared || this.noSharedTooltip) && c.hide();
            this.setState()
        },
        setState: function(a) {
            var b = this.options
              , c = this.graph
              , d = b.states
              , e = b.lineWidth
              , b = 0
              , a = a || "";
            if (this.state !== a && (this.state = a,
            !(d[a] && d[a].enabled === !1) && (a && (e = d[a].lineWidth || e + (d[a].lineWidthPlus || 0)),
            c && !c.dashstyle))) {
                a = {
                    "stroke-width": e
                };
                for (c.attr(a); this["zoneGraph" + b]; )
                    this["zoneGraph" + b].attr(a),
                    b += 1
            }
        },
        setVisible: function(a, b) {
            var c = this, d = c.chart, e = c.legendItem, f, g = d.options.chart.ignoreHiddenSeries, h = c.visible;
            f = (c.visible = a = c.userOptions.visible = a === x ? !h : a) ? "show" : "hide";
            o(["group", "dataLabelsGroup", "markerGroup", "tracker"], function(a) {
                if (c[a])
                    c[a][f]()
            });
            if (d.hoverSeries === c || (d.hoverPoint && d.hoverPoint.series) === c)
                c.onMouseOut();
            e && d.legend.colorizeItem(c, a);
            c.isDirty = !0;
            c.options.stacking && o(d.series, function(a) {
                if (a.options.stacking && a.visible)
                    a.isDirty = !0
            });
            o(c.linkedSeries, function(b) {
                b.setVisible(a, !1)
            });
            if (g)
                d.isDirtyBox = !0;
            b !== !1 && d.redraw();
            J(c, f)
        },
        show: function() {
            this.setVisible(!0)
        },
        hide: function() {
            this.setVisible(!1)
        },
        select: function(a) {
            this.selected = a = a === x ? !this.selected : a;
            if (this.checkbox)
                this.checkbox.checked = a;
            J(this, a ? "select" : "unselect")
        },
        drawTracker: U.drawTrackerGraph
    });
    t(B, {
        Color: na,
        Point: Fa,
        Tick: Sa,
        Renderer: $a,
        SVGElement: Q,
        SVGRenderer: Aa,
        arrayMin: Oa,
        arrayMax: Da,
        charts: X,
        dateFormat: Na,
        error: la,
        format: Ia,
        pathAnim: yb,
        getOptions: function() {
            return S
        },
        hasBidiBug: Nb,
        isTouchDevice: Jb,
        setOptions: function(a) {
            S = D(!0, S, a);
            Cb();
            return S
        },
        addEvent: I,
        removeEvent: Y,
        createElement: $,
        discardElement: Qa,
        css: M,
        each: o,
        map: Ua,
        merge: D,
        splat: ra,
        extendClass: ka,
        pInt: G,
        svg: ca,
        canvas: fa,
        vml: !ca && !fa,
        product: "Highcharts",
        version: "4.1.9"
    })
})();
(function(n, G) {
    function L(a, b, c) {
        this.init.call(this, a, b, c)
    }
    var Q = n.arrayMin
      , R = n.arrayMax
      , s = n.each
      , I = n.extend
      , t = n.merge
      , S = n.map
      , o = n.pick
      , B = n.pInt
      , p = n.getOptions().plotOptions
      , i = n.seriesTypes
      , u = n.extendClass
      , M = n.splat
      , r = n.wrap
      , N = n.Axis
      , z = n.Tick
      , J = n.Point
      , T = n.Pointer
      , U = n.CenteredSeriesMixin
      , A = n.TrackerMixin
      , w = n.Series
      , y = Math
      , E = y.round
      , C = y.floor
      , O = y.max
      , V = n.Color
      , v = function() {};
    I(L.prototype, {
        init: function(a, b, c) {
            var d = this
              , e = d.defaultOptions;
            d.chart = b;
            d.options = a = t(e, b.angular ? {
                background: {}
            } : void 0, a);
            (a = a.background) && s([].concat(M(a)).reverse(), function(a) {
                var b = a.backgroundColor
                  , k = c.userOptions
                  , a = t(d.defaultBackgroundOptions, a);
                if (b)
                    a.backgroundColor = b;
                a.color = a.backgroundColor;
                c.options.plotBands.unshift(a);
                k.plotBands = k.plotBands || [];
                k.plotBands !== c.options.plotBands && k.plotBands.unshift(a)
            })
        },
        defaultOptions: {
            center: ["50%", "50%"],
            size: "85%",
            startAngle: 0
        },
        defaultBackgroundOptions: {
            shape: "circle",
            borderWidth: 1,
            borderColor: "silver",
            backgroundColor: {
                linearGradient: {
                    x1: 0,
                    y1: 0,
                    x2: 0,
                    y2: 1
                },
                stops: [[0, "#FFF"], [1, "#DDD"]]
            },
            from: -Number.MAX_VALUE,
            innerRadius: 0,
            to: Number.MAX_VALUE,
            outerRadius: "105%"
        }
    });
    var H = N.prototype
      , z = z.prototype
      , W = {
        getOffset: v,
        redraw: function() {
            this.isDirty = !1
        },
        render: function() {
            this.isDirty = !1
        },
        setScale: v,
        setCategories: v,
        setTitle: v
    }
      , P = {
        isRadial: !0,
        defaultRadialGaugeOptions: {
            labels: {
                align: "center",
                x: 0,
                y: null
            },
            minorGridLineWidth: 0,
            minorTickInterval: "auto",
            minorTickLength: 10,
            minorTickPosition: "inside",
            minorTickWidth: 1,
            tickLength: 10,
            tickPosition: "inside",
            tickWidth: 2,
            title: {
                rotation: 0
            },
            zIndex: 2
        },
        defaultRadialXOptions: {
            gridLineWidth: 1,
            labels: {
                align: null,
                distance: 15,
                x: 0,
                y: null
            },
            maxPadding: 0,
            minPadding: 0,
            showLastLabel: !1,
            tickLength: 0
        },
        defaultRadialYOptions: {
            gridLineInterpolation: "circle",
            labels: {
                align: "right",
                x: -3,
                y: -2
            },
            showLastLabel: !1,
            title: {
                x: 4,
                text: null,
                rotation: 90
            }
        },
        setOptions: function(a) {
            a = this.options = t(this.defaultOptions, this.defaultRadialOptions, a);
            if (!a.plotBands)
                a.plotBands = []
        },
        getOffset: function() {
            H.getOffset.call(this);
            this.chart.axisOffset[this.side] = 0;
            this.center = this.pane.center = U.getCenter.call(this.pane)
        },
        getLinePath: function(a, b) {
            var c = this.center
              , b = o(b, c[2] / 2 - this.offset);
            return this.chart.renderer.symbols.arc(this.left + c[0], this.top + c[1], b, b, {
                start: this.startAngleRad,
                end: this.endAngleRad,
                open: !0,
                innerR: 0
            })
        },
        setAxisTranslation: function() {
            H.setAxisTranslation.call(this);
            if (this.center)
                this.transA = this.isCircular ? (this.endAngleRad - this.startAngleRad) / (this.max - this.min || 1) : this.center[2] / 2 / (this.max - this.min || 1),
                this.minPixelPadding = this.isXAxis ? this.transA * this.minPointOffset : 0
        },
        beforeSetTickPositions: function() {
            this.autoConnect && (this.max += this.categories && 1 || this.pointRange || this.closestPointRange || 0)
        },
        setAxisSize: function() {
            H.setAxisSize.call(this);
            if (this.isRadial) {
                this.center = this.pane.center = n.CenteredSeriesMixin.getCenter.call(this.pane);
                if (this.isCircular)
                    this.sector = this.endAngleRad - this.startAngleRad;
                this.len = this.width = this.height = this.center[2] * o(this.sector, 1) / 2
            }
        },
        getPosition: function(a, b) {
            return this.postTranslate(this.isCircular ? this.translate(a) : 0, o(this.isCircular ? b : this.translate(a), this.center[2] / 2) - this.offset)
        },
        postTranslate: function(a, b) {
            var c = this.chart
              , d = this.center
              , a = this.startAngleRad + a;
            return {
                x: c.plotLeft + d[0] + Math.cos(a) * b,
                y: c.plotTop + d[1] + Math.sin(a) * b
            }
        },
        getPlotBandPath: function(a, b, c) {
            var d = this.center, e = this.startAngleRad, f = d[2] / 2, h = [o(c.outerRadius, "100%"), c.innerRadius, o(c.thickness, 10)], k = /%$/, g, j = this.isCircular;
            this.options.gridLineInterpolation === "polygon" ? d = this.getPlotLinePath(a).concat(this.getPlotLinePath(b, !0)) : (a = Math.max(a, this.min),
            b = Math.min(b, this.max),
            j || (h[0] = this.translate(a),
            h[1] = this.translate(b)),
            h = S(h, function(a) {
                k.test(a) && (a = B(a, 10) * f / 100);
                return a
            }),
            c.shape === "circle" || !j ? (a = -Math.PI / 2,
            b = Math.PI * 1.5,
            g = !0) : (a = e + this.translate(a),
            b = e + this.translate(b)),
            d = this.chart.renderer.symbols.arc(this.left + d[0], this.top + d[1], h[0], h[0], {
                start: Math.min(a, b),
                end: Math.max(a, b),
                innerR: o(h[1], h[0] - h[2]),
                open: g
            }));
            return d
        },
        getPlotLinePath: function(a, b) {
            var c = this, d = c.center, e = c.chart, f = c.getPosition(a), h, k, g;
            c.isCircular ? g = ["M", d[0] + e.plotLeft, d[1] + e.plotTop, "L", f.x, f.y] : c.options.gridLineInterpolation === "circle" ? (a = c.translate(a)) && (g = c.getLinePath(0, a)) : (s(e.xAxis, function(a) {
                a.pane === c.pane && (h = a)
            }),
            g = [],
            a = c.translate(a),
            d = h.tickPositions,
            h.autoConnect && (d = d.concat([d[0]])),
            b && (d = [].concat(d).reverse()),
            s(d, function(f, b) {
                k = h.getPosition(f, a);
                g.push(b ? "L" : "M", k.x, k.y)
            }));
            return g
        },
        getTitlePosition: function() {
            var a = this.center
              , b = this.chart
              , c = this.options.title;
            return {
                x: b.plotLeft + a[0] + (c.x || 0),
                y: b.plotTop + a[1] - {
                    high: 0.5,
                    middle: 0.25,
                    low: 0
                }[c.align] * a[2] + (c.y || 0)
            }
        }
    };
    r(H, "init", function(a, b, c) {
        var l;
        var d = b.angular, e = b.polar, f = c.isX, h = d && f, k, g;
        g = b.options;
        var j = c.pane || 0;
        if (d) {
            if (I(this, h ? W : P),
            k = !f)
                this.defaultRadialOptions = this.defaultRadialGaugeOptions
        } else if (e)
            I(this, P),
            this.defaultRadialOptions = (k = f) ? this.defaultRadialXOptions : t(this.defaultYAxisOptions, this.defaultRadialYOptions);
        a.call(this, b, c);
        if (!h && (d || e)) {
            a = this.options;
            if (!b.panes)
                b.panes = [];
            this.pane = (l = b.panes[j] = b.panes[j] || new L(M(g.pane)[j],b,this),
            j = l);
            j = j.options;
            b.inverted = !1;
            g.chart.zoomType = null;
            this.startAngleRad = b = (j.startAngle - 90) * Math.PI / 180;
            this.endAngleRad = g = (o(j.endAngle, j.startAngle + 360) - 90) * Math.PI / 180;
            this.offset = a.offset || 0;
            if ((this.isCircular = k) && c.max === G && g - b === 2 * Math.PI)
                this.autoConnect = !0
        }
    });
    r(z, "getPosition", function(a, b, c, d, e) {
        var f = this.axis;
        return f.getPosition ? f.getPosition(c) : a.call(this, b, c, d, e)
    });
    r(z, "getLabelPosition", function(a, b, c, d, e, f, h, k, g) {
        var j = this.axis
          , m = f.y
          , l = 20
          , i = f.align
          , x = (j.translate(this.pos) + j.startAngleRad + Math.PI / 2) / Math.PI * 180 % 360;
        j.isRadial ? (a = j.getPosition(this.pos, j.center[2] / 2 + o(f.distance, -25)),
        f.rotation === "auto" ? d.attr({
            rotation: x
        }) : m === null && (m = j.chart.renderer.fontMetrics(d.styles.fontSize).b - d.getBBox().height / 2),
        i === null && (j.isCircular ? (this.label.getBBox().width > j.len * j.tickInterval / (j.max - j.min) && (l = 0),
        i = x > l && x < 180 - l ? "left" : x > 180 + l && x < 360 - l ? "right" : "center") : i = "center",
        d.attr({
            align: i
        })),
        a.x += f.x,
        a.y += m) : a = a.call(this, b, c, d, e, f, h, k, g);
        return a
    });
    r(z, "getMarkPath", function(a, b, c, d, e, f, h) {
        var k = this.axis;
        k.isRadial ? (a = k.getPosition(this.pos, k.center[2] / 2 + d),
        b = ["M", b, c, "L", a.x, a.y]) : b = a.call(this, b, c, d, e, f, h);
        return b
    });
    p.arearange = t(p.area, {
        lineWidth: 1,
        marker: null,
        threshold: null,
        tooltip: {
            pointFormat: '<span style="color:{series.color}">\u25cf</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'
        },
        trackByArea: !0,
        dataLabels: {
            align: null,
            verticalAlign: null,
            xLow: 0,
            xHigh: 0,
            yLow: 0,
            yHigh: 0
        },
        states: {
            hover: {
                halo: !1
            }
        }
    });
    i.arearange = u(i.area, {
        type: "arearange",
        pointArrayMap: ["low", "high"],
        dataLabelCollections: ["dataLabel", "dataLabelUpper"],
        toYData: function(a) {
            return [a.low, a.high]
        },
        pointValKey: "low",
        deferTranslatePolar: !0,
        highToXY: function(a) {
            var b = this.chart
              , c = this.xAxis.postTranslate(a.rectPlotX, this.yAxis.len - a.plotHigh);
            a.plotHighX = c.x - b.plotLeft;
            a.plotHigh = c.y - b.plotTop
        },
        getSegments: function() {
            var a = this;
            s(a.points, function(b) {
                if (!a.options.connectNulls && (b.low === null || b.high === null))
                    b.y = null;
                else if (b.low === null && b.high !== null)
                    b.y = b.high
            });
            w.prototype.getSegments.call(this)
        },
        translate: function() {
            var a = this
              , b = a.yAxis;
            i.area.prototype.translate.apply(a);
            s(a.points, function(a) {
                var d = a.low
                  , e = a.high
                  , f = a.plotY;
                e === null && d === null ? a.y = null : d === null ? (a.plotLow = a.plotY = null,
                a.plotHigh = b.translate(e, 0, 1, 0, 1)) : e === null ? (a.plotLow = f,
                a.plotHigh = null) : (a.plotLow = f,
                a.plotHigh = b.translate(e, 0, 1, 0, 1))
            });
            this.chart.polar && s(this.points, function(b) {
                a.highToXY(b)
            })
        },
        getSegmentPath: function(a) {
            var b, c = [], d = a.length, e = w.prototype.getSegmentPath, f, h;
            h = this.options;
            var k = h.step;
            for (b = HighchartsAdapter.grep(a, function(a) {
                return a.plotLow !== null
            }); d--; )
                f = a[d],
                f.plotHigh !== null && c.push({
                    plotX: f.plotHighX || f.plotX,
                    plotY: f.plotHigh
                });
            a = e.call(this, b);
            if (k)
                k === !0 && (k = "left"),
                h.step = {
                    left: "right",
                    center: "center",
                    right: "left"
                }[k];
            c = e.call(this, c);
            h.step = k;
            h = [].concat(a, c);
            this.chart.polar || (c[0] = "L");
            this.areaPath = this.areaPath.concat(a, c);
            return h
        },
        drawDataLabels: function() {
            var a = this.data, b = a.length, c, d = [], e = w.prototype, f = this.options.dataLabels, h = f.align, k = f.inside, g, j, m = this.chart.inverted;
            if (f.enabled || this._hasPointLabels) {
                for (c = b; c--; )
                    if (g = a[c])
                        if (j = k ? g.plotHigh < g.plotLow : g.plotHigh > g.plotLow,
                        g.y = g.high,
                        g._plotY = g.plotY,
                        g.plotY = g.plotHigh,
                        d[c] = g.dataLabel,
                        g.dataLabel = g.dataLabelUpper,
                        g.below = j,
                        m) {
                            if (!h)
                                f.align = j ? "right" : "left";
                            f.x = f.xHigh
                        } else
                            f.y = f.yHigh;
                e.drawDataLabels && e.drawDataLabels.apply(this, arguments);
                for (c = b; c--; )
                    if (g = a[c])
                        if (j = k ? g.plotHigh < g.plotLow : g.plotHigh > g.plotLow,
                        g.dataLabelUpper = g.dataLabel,
                        g.dataLabel = d[c],
                        g.y = g.low,
                        g.plotY = g._plotY,
                        g.below = !j,
                        m) {
                            if (!h)
                                f.align = j ? "left" : "right";
                            f.x = f.xLow
                        } else
                            f.y = f.yLow;
                e.drawDataLabels && e.drawDataLabels.apply(this, arguments)
            }
            f.align = h
        },
        alignDataLabel: function() {
            i.column.prototype.alignDataLabel.apply(this, arguments)
        },
        setStackedPoints: v,
        getSymbol: v,
        drawPoints: v
    });
    p.areasplinerange = t(p.arearange);
    i.areasplinerange = u(i.arearange, {
        type: "areasplinerange",
        getPointSpline: i.spline.prototype.getPointSpline
    });
    (function() {
        var a = i.column.prototype;
        p.columnrange = t(p.column, p.arearange, {
            lineWidth: 1,
            pointRange: null
        });
        i.columnrange = u(i.arearange, {
            type: "columnrange",
            translate: function() {
                var b = this, c = b.yAxis, d;
                a.translate.apply(b);
                s(b.points, function(a) {
                    var f = a.shapeArgs, h = b.options.minPointLength, k;
                    a.tooltipPos = null;
                    a.plotHigh = d = c.translate(a.high, 0, 1, 0, 1);
                    a.plotLow = a.plotY;
                    k = d;
                    a = a.plotY - d;
                    Math.abs(a) < h ? (h -= a,
                    a += h,
                    k -= h / 2) : a < 0 && (a *= -1,
                    k -= a);
                    f.height = a;
                    f.y = k
                })
            },
            directTouch: !0,
            trackerGroups: ["group", "dataLabelsGroup"],
            drawGraph: v,
            crispCol: a.crispCol,
            pointAttrToOptions: a.pointAttrToOptions,
            drawPoints: a.drawPoints,
            drawTracker: a.drawTracker,
            animate: a.animate,
            getColumnMetrics: a.getColumnMetrics
        })
    })();
    p.gauge = t(p.line, {
        dataLabels: {
            enabled: !0,
            defer: !1,
            y: 15,
            borderWidth: 1,
            borderColor: "silver",
            borderRadius: 3,
            crop: !1,
            verticalAlign: "top",
            zIndex: 2
        },
        dial: {},
        pivot: {},
        tooltip: {
            headerFormat: ""
        },
        showInLegend: !1
    });
    A = {
        type: "gauge",
        pointClass: u(J, {
            setState: function(a) {
                this.state = a
            }
        }),
        angular: !0,
        drawGraph: v,
        fixedBox: !0,
        forceDL: !0,
        trackerGroups: ["group", "dataLabelsGroup"],
        translate: function() {
            var a = this.yAxis
              , b = this.options
              , c = a.center;
            this.generatePoints();
            s(this.points, function(d) {
                var e = t(b.dial, d.dial)
                  , f = B(o(e.radius, 80)) * c[2] / 200
                  , h = B(o(e.baseLength, 70)) * f / 100
                  , k = B(o(e.rearLength, 10)) * f / 100
                  , g = e.baseWidth || 3
                  , j = e.topWidth || 1
                  , m = b.overshoot
                  , l = a.startAngleRad + a.translate(d.y, null, null, null, !0);
                m && typeof m === "number" ? (m = m / 180 * Math.PI,
                l = Math.max(a.startAngleRad - m, Math.min(a.endAngleRad + m, l))) : b.wrap === !1 && (l = Math.max(a.startAngleRad, Math.min(a.endAngleRad, l)));
                l = l * 180 / Math.PI;
                d.shapeType = "path";
                d.shapeArgs = {
                    d: e.path || ["M", -k, -g / 2, "L", h, -g / 2, f, -j / 2, f, j / 2, h, g / 2, -k, g / 2, "z"],
                    translateX: c[0],
                    translateY: c[1],
                    rotation: l
                };
                d.plotX = c[0];
                d.plotY = c[1]
            })
        },
        drawPoints: function() {
            var a = this
              , b = a.yAxis.center
              , c = a.pivot
              , d = a.options
              , e = d.pivot
              , f = a.chart.renderer;
            s(a.points, function(b) {
                var c = b.graphic
                  , g = b.shapeArgs
                  , e = g.d
                  , m = t(d.dial, b.dial);
                c ? (c.animate(g),
                g.d = e) : b.graphic = f[b.shapeType](g).attr({
                    stroke: m.borderColor || "none",
                    "stroke-width": m.borderWidth || 0,
                    fill: m.backgroundColor || "black",
                    rotation: g.rotation
                }).add(a.group)
            });
            c ? c.animate({
                translateX: b[0],
                translateY: b[1]
            }) : a.pivot = f.circle(0, 0, o(e.radius, 5)).attr({
                "stroke-width": e.borderWidth || 0,
                stroke: e.borderColor || "silver",
                fill: e.backgroundColor || "black"
            }).translate(b[0], b[1]).add(a.group)
        },
        animate: function(a) {
            var b = this;
            if (!a)
                s(b.points, function(a) {
                    var d = a.graphic;
                    d && (d.attr({
                        rotation: b.yAxis.startAngleRad * 180 / Math.PI
                    }),
                    d.animate({
                        rotation: a.shapeArgs.rotation
                    }, b.options.animation))
                }),
                b.animate = null
        },
        render: function() {
            this.group = this.plotGroup("group", "series", this.visible ? "visible" : "hidden", this.options.zIndex, this.chart.seriesGroup);
            w.prototype.render.call(this);
            this.group.clip(this.chart.clipRect)
        },
        setData: function(a, b) {
            w.prototype.setData.call(this, a, !1);
            this.processData();
            this.generatePoints();
            o(b, !0) && this.chart.redraw()
        },
        drawTracker: A && A.drawTrackerPoint
    };
    i.gauge = u(i.line, A);
    p.boxplot = t(p.column, {
        fillColor: "#FFFFFF",
        lineWidth: 1,
        medianWidth: 2,
        states: {
            hover: {
                brightness: -0.3
            }
        },
        threshold: null,
        tooltip: {
            pointFormat: '<span style="color:{point.color}">\u25cf</span> <b> {series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'
        },
        whiskerLength: "50%",
        whiskerWidth: 2
    });
    i.boxplot = u(i.column, {
        type: "boxplot",
        pointArrayMap: ["low", "q1", "median", "q3", "high"],
        toYData: function(a) {
            return [a.low, a.q1, a.median, a.q3, a.high]
        },
        pointValKey: "high",
        pointAttrToOptions: {
            fill: "fillColor",
            stroke: "color",
            "stroke-width": "lineWidth"
        },
        drawDataLabels: v,
        translate: function() {
            var a = this.yAxis
              , b = this.pointArrayMap;
            i.column.prototype.translate.apply(this);
            s(this.points, function(c) {
                s(b, function(b) {
                    c[b] !== null && (c[b + "Plot"] = a.translate(c[b], 0, 1, 0, 1))
                })
            })
        },
        drawPoints: function() {
            var a = this, b = a.options, c = a.chart.renderer, d, e, f, h, k, g, j, m, l, i, x, n, K, p, t, r, v, u, w, y, B, A, z = a.doQuartiles !== !1, F, D = a.options.whiskerLength;
            s(a.points, function(q) {
                l = q.graphic;
                B = q.shapeArgs;
                x = {};
                p = {};
                r = {};
                A = q.color || a.color;
                if (q.plotY !== G)
                    if (d = q.pointAttr[q.selected ? "selected" : ""],
                    v = B.width,
                    u = C(B.x),
                    w = u + v,
                    y = E(v / 2),
                    e = C(z ? q.q1Plot : q.lowPlot),
                    f = C(z ? q.q3Plot : q.lowPlot),
                    h = C(q.highPlot),
                    k = C(q.lowPlot),
                    x.stroke = q.stemColor || b.stemColor || A,
                    x["stroke-width"] = o(q.stemWidth, b.stemWidth, b.lineWidth),
                    x.dashstyle = q.stemDashStyle || b.stemDashStyle,
                    p.stroke = q.whiskerColor || b.whiskerColor || A,
                    p["stroke-width"] = o(q.whiskerWidth, b.whiskerWidth, b.lineWidth),
                    r.stroke = q.medianColor || b.medianColor || A,
                    r["stroke-width"] = o(q.medianWidth, b.medianWidth, b.lineWidth),
                    j = x["stroke-width"] % 2 / 2,
                    m = u + y + j,
                    i = ["M", m, f, "L", m, h, "M", m, e, "L", m, k],
                    z && (j = d["stroke-width"] % 2 / 2,
                    m = C(m) + j,
                    e = C(e) + j,
                    f = C(f) + j,
                    u += j,
                    w += j,
                    n = ["M", u, f, "L", u, e, "L", w, e, "L", w, f, "L", u, f, "z"]),
                    D && (j = p["stroke-width"] % 2 / 2,
                    h += j,
                    k += j,
                    F = /%$/.test(D) ? y * parseFloat(D) / 100 : D / 2,
                    K = ["M", m - F, h, "L", m + F, h, "M", m - F, k, "L", m + F, k]),
                    j = r["stroke-width"] % 2 / 2,
                    g = E(q.medianPlot) + j,
                    t = ["M", u, g, "L", w, g],
                    l)
                        q.stem.animate({
                            d: i
                        }),
                        D && q.whiskers.animate({
                            d: K
                        }),
                        z && q.box.animate({
                            d: n
                        }),
                        q.medianShape.animate({
                            d: t
                        });
                    else {
                        q.graphic = l = c.g().add(a.group);
                        q.stem = c.path(i).attr(x).add(l);
                        if (D)
                            q.whiskers = c.path(K).attr(p).add(l);
                        if (z)
                            q.box = c.path(n).attr(d).add(l);
                        q.medianShape = c.path(t).attr(r).add(l)
                    }
            })
        },
        setStackedPoints: v
    });
    p.errorbar = t(p.boxplot, {
        color: "#000000",
        grouping: !1,
        linkedTo: ":previous",
        tooltip: {
            pointFormat: '<span style="color:{point.color}">\u25cf</span> {series.name}: <b>{point.low}</b> - <b>{point.high}</b><br/>'
        },
        whiskerWidth: null
    });
    i.errorbar = u(i.boxplot, {
        type: "errorbar",
        pointArrayMap: ["low", "high"],
        toYData: function(a) {
            return [a.low, a.high]
        },
        pointValKey: "high",
        doQuartiles: !1,
        drawDataLabels: i.arearange ? i.arearange.prototype.drawDataLabels : v,
        getColumnMetrics: function() {
            return this.linkedParent && this.linkedParent.columnMetrics || i.column.prototype.getColumnMetrics.call(this)
        }
    });
    p.waterfall = t(p.column, {
        lineWidth: 1,
        lineColor: "#333",
        dashStyle: "dot",
        borderColor: "#333",
        dataLabels: {
            inside: !0
        },
        states: {
            hover: {
                lineWidthPlus: 0
            }
        }
    });
    i.waterfall = u(i.column, {
        type: "waterfall",
        upColorProp: "fill",
        pointValKey: "y",
        translate: function() {
            var a = this.options, b = this.yAxis, c, d, e, f, h, k, g, j, m, l = a.threshold, X = a.stacking;
            i.column.prototype.translate.apply(this);
            g = j = l;
            d = this.points;
            for (c = 0,
            a = d.length; c < a; c++) {
                e = d[c];
                k = this.processedYData[c];
                f = e.shapeArgs;
                m = (h = X && b.stacks[(this.negStacks && k < l ? "-" : "") + this.stackKey]) ? h[e.x].points[this.index + "," + c] : [0, k];
                if (e.isSum)
                    e.y = k;
                else if (e.isIntermediateSum)
                    e.y = k - j;
                h = O(g, g + e.y) + m[0];
                f.y = b.translate(h, 0, 1);
                if (e.isSum)
                    f.y = b.translate(m[1], 0, 1),
                    f.height = Math.min(b.translate(m[0], 0, 1), b.len) - f.y;
                else if (e.isIntermediateSum)
                    f.y = b.translate(m[1], 0, 1),
                    f.height = Math.min(b.translate(j, 0, 1), b.len) - f.y,
                    j = m[1];
                else {
                    if (g !== 0)
                        f.height = k > 0 ? b.translate(g, 0, 1) - f.y : b.translate(g, 0, 1) - b.translate(g - k, 0, 1);
                    g += k
                }
                f.height < 0 && (f.y += f.height,
                f.height *= -1);
                e.plotY = f.y = E(f.y) - this.borderWidth % 2 / 2;
                f.height = O(E(f.height), 0.001);
                e.yBottom = f.y + f.height;
                f = e.plotY + (e.negative ? f.height : 0);
                this.chart.inverted ? e.tooltipPos[0] = b.len - f : e.tooltipPos[1] = f
            }
        },
        processData: function(a) {
            var b = this.yData, c = this.options.data, d, e = b.length, f, h, k, g, j, m;
            h = f = k = g = this.options.threshold || 0;
            for (m = 0; m < e; m++)
                j = b[m],
                d = c && c[m] ? c[m] : {},
                j === "sum" || d.isSum ? b[m] = h : j === "intermediateSum" || d.isIntermediateSum ? b[m] = f : (h += j,
                f += j),
                k = Math.min(h, k),
                g = Math.max(h, g);
            w.prototype.processData.call(this, a);
            this.dataMin = k;
            this.dataMax = g
        },
        toYData: function(a) {
            if (a.isSum)
                return a.x === 0 ? null : "sum";
            else if (a.isIntermediateSum)
                return a.x === 0 ? null : "intermediateSum";
            return a.y
        },
        getAttribs: function() {
            i.column.prototype.getAttribs.apply(this, arguments);
            var a = this
              , b = a.options
              , c = b.states
              , d = b.upColor || a.color
              , b = n.Color(d).brighten(0.1).get()
              , e = t(a.pointAttr)
              , f = a.upColorProp;
            e[""][f] = d;
            e.hover[f] = c.hover.upColor || b;
            e.select[f] = c.select.upColor || d;
            s(a.points, function(f) {
                if (!f.options.color)
                    f.y > 0 ? (f.pointAttr = e,
                    f.color = d) : f.pointAttr = a.pointAttr
            })
        },
        getGraphPath: function() {
            var a = this.data, b = a.length, c = E(this.options.lineWidth + this.borderWidth) % 2 / 2, d = [], e, f, h;
            for (h = 1; h < b; h++)
                f = a[h].shapeArgs,
                e = a[h - 1].shapeArgs,
                f = ["M", e.x + e.width, e.y + c, "L", f.x, e.y + c],
                a[h - 1].y < 0 && (f[2] += e.height,
                f[5] += e.height),
                d = d.concat(f);
            return d
        },
        getExtremes: v,
        drawGraph: w.prototype.drawGraph
    });
    p.polygon = t(p.scatter, {
        marker: {
            enabled: !1
        }
    });
    i.polygon = u(i.scatter, {
        type: "polygon",
        fillGraph: !0,
        getSegmentPath: function(a) {
            return w.prototype.getSegmentPath.call(this, a).concat("z")
        },
        drawGraph: w.prototype.drawGraph,
        drawLegendSymbol: n.LegendSymbolMixin.drawRectangle
    });
    p.bubble = t(p.scatter, {
        dataLabels: {
            formatter: function() {
                return this.point.z
            },
            inside: !0,
            verticalAlign: "middle"
        },
        marker: {
            lineColor: null,
            lineWidth: 1
        },
        minSize: 8,
        maxSize: "20%",
        softThreshold: !1,
        states: {
            hover: {
                halo: {
                    size: 5
                }
            }
        },
        tooltip: {
            pointFormat: "({point.x}, {point.y}), Size: {point.z}"
        },
        turboThreshold: 0,
        zThreshold: 0,
        zoneAxis: "z"
    });
    A = u(J, {
        haloPath: function() {
            return J.prototype.haloPath.call(this, this.shapeArgs.r + this.series.options.states.hover.halo.size)
        },
        ttBelow: !1
    });
    i.bubble = u(i.scatter, {
        type: "bubble",
        pointClass: A,
        pointArrayMap: ["y", "z"],
        parallelArrays: ["x", "y", "z"],
        trackerGroups: ["group", "dataLabelsGroup"],
        bubblePadding: !0,
        zoneAxis: "z",
        pointAttrToOptions: {
            stroke: "lineColor",
            "stroke-width": "lineWidth",
            fill: "fillColor"
        },
        applyOpacity: function(a) {
            var b = this.options.marker
              , c = o(b.fillOpacity, 0.5)
              , a = a || b.fillColor || this.color;
            c !== 1 && (a = V(a).setOpacity(c).get("rgba"));
            return a
        },
        convertAttribs: function() {
            var a = w.prototype.convertAttribs.apply(this, arguments);
            a.fill = this.applyOpacity(a.fill);
            return a
        },
        getRadii: function(a, b, c, d) {
            var e, f, h, k = this.zData, g = [], j = this.options, m = j.sizeBy !== "width", l = j.zThreshold, i = b - a;
            for (f = 0,
            e = k.length; f < e; f++)
                h = k[f],
                j.sizeByAbsoluteValue && (h = Math.abs(h - l),
                b = Math.max(b - l, Math.abs(a - l)),
                a = 0),
                h === null ? h = null : h < a ? h = c / 2 - 1 : (h = i > 0 ? (h - a) / i : 0.5,
                m && h >= 0 && (h = Math.sqrt(h)),
                h = y.ceil(c + h * (d - c)) / 2),
                g.push(h);
            this.radii = g
        },
        animate: function(a) {
            var b = this.options.animation;
            if (!a)
                s(this.points, function(a) {
                    var d = a.graphic
                      , a = a.shapeArgs;
                    d && a && (d.attr("r", 1),
                    d.animate({
                        r: a.r
                    }, b))
                }),
                this.animate = null
        },
        translate: function() {
            var a, b = this.data, c, d, e = this.radii;
            i.scatter.prototype.translate.call(this);
            for (a = b.length; a--; )
                c = b[a],
                d = e ? e[a] : 0,
                typeof d === "number" && d >= this.minPxSize / 2 ? (c.shapeType = "circle",
                c.shapeArgs = {
                    x: c.plotX,
                    y: c.plotY,
                    r: d
                },
                c.dlBox = {
                    x: c.plotX - d,
                    y: c.plotY - d,
                    width: 2 * d,
                    height: 2 * d
                }) : c.shapeArgs = c.plotY = c.dlBox = G
        },
        drawLegendSymbol: function(a, b) {
            var c = B(a.itemStyle.fontSize) / 2;
            b.legendSymbol = this.chart.renderer.circle(c, a.baseline - c, c).attr({
                zIndex: 3
            }).add(b.legendGroup);
            b.legendSymbol.isMarker = !0
        },
        drawPoints: i.column.prototype.drawPoints,
        alignDataLabel: i.column.prototype.alignDataLabel,
        buildKDTree: v,
        applyZones: v
    });
    N.prototype.beforePadding = function() {
        var a = this
          , b = this.len
          , c = this.chart
          , d = 0
          , e = b
          , f = this.isXAxis
          , h = f ? "xData" : "yData"
          , k = this.min
          , g = {}
          , j = y.min(c.plotWidth, c.plotHeight)
          , m = Number.MAX_VALUE
          , l = -Number.MAX_VALUE
          , i = this.max - k
          , x = b / i
          , n = [];
        s(this.series, function(b) {
            var h = b.options;
            if (b.bubblePadding && (b.visible || !c.options.chart.ignoreHiddenSeries))
                if (a.allowZoomOutside = !0,
                n.push(b),
                f)
                    s(["minSize", "maxSize"], function(a) {
                        var b = h[a]
                          , f = /%$/.test(b)
                          , b = B(b);
                        g[a] = f ? j * b / 100 : b
                    }),
                    b.minPxSize = g.minSize,
                    b.maxPxSize = g.maxSize,
                    b = b.zData,
                    b.length && (m = o(h.zMin, y.min(m, y.max(Q(b), h.displayNegative === !1 ? h.zThreshold : -Number.MAX_VALUE))),
                    l = o(h.zMax, y.max(l, R(b))))
        });
        s(n, function(a) {
            var b = a[h], c = b.length, g;
            f && a.getRadii(m, l, a.minPxSize, a.maxPxSize);
            if (i > 0)
                for (; c--; )
                    typeof b[c] === "number" && (g = a.radii[c],
                    d = Math.min((b[c] - k) * x - g, d),
                    e = Math.max((b[c] - k) * x + g, e))
        });
        n.length && i > 0 && !this.isLog && (e -= b,
        x *= (b + d - e) / b,
        s([["min", "userMin", d], ["max", "userMax", e]], function(b) {
            o(a.options[b[0]], a[b[1]]) === G && (a[b[0]] += b[2] / x)
        }))
    }
    ;
    (function() {
        function a(a, b, c) {
            a.call(this, b, c);
            if (this.chart.polar)
                this.closeSegment = function(a) {
                    var b = this.xAxis.center;
                    a.push("L", b[0], b[1])
                }
                ,
                this.closedStacks = !0
        }
        function b(a, b) {
            var c = this.chart
              , g = this.options.animation
              , d = this.group
              , e = this.markerGroup
              , l = this.xAxis.center
              , i = c.plotLeft
              , n = c.plotTop;
            if (c.polar) {
                if (c.renderer.isSVG)
                    g === !0 && (g = {}),
                    b ? (c = {
                        translateX: l[0] + i,
                        translateY: l[1] + n,
                        scaleX: 0.001,
                        scaleY: 0.001
                    },
                    d.attr(c),
                    e && e.attr(c)) : (c = {
                        translateX: i,
                        translateY: n,
                        scaleX: 1,
                        scaleY: 1
                    },
                    d.animate(c, g),
                    e && e.animate(c, g),
                    this.animate = null)
            } else
                a.call(this, b)
        }
        var c = w.prototype, d = T.prototype, e;
        c.searchPointByAngle = function(a) {
            var b = this.chart
              , c = this.xAxis.pane.center;
            return this.searchKDTree({
                clientX: 180 + Math.atan2(a.chartX - c[0] - b.plotLeft, a.chartY - c[1] - b.plotTop) * (-180 / Math.PI)
            })
        }
        ;
        r(c, "buildKDTree", function(a) {
            if (this.chart.polar)
                this.kdByAngle ? this.searchPoint = this.searchPointByAngle : this.kdDimensions = 2;
            a.apply(this)
        });
        c.toXY = function(a) {
            var b, c = this.chart, g = a.plotX;
            b = a.plotY;
            a.rectPlotX = g;
            a.rectPlotY = b;
            b = this.xAxis.postTranslate(a.plotX, this.yAxis.len - b);
            a.plotX = a.polarPlotX = b.x - c.plotLeft;
            a.plotY = a.polarPlotY = b.y - c.plotTop;
            this.kdByAngle ? (c = (g / Math.PI * 180 + this.xAxis.pane.options.startAngle) % 360,
            c < 0 && (c += 360),
            a.clientX = c) : a.clientX = a.plotX
        }
        ;
        i.area && r(i.area.prototype, "init", a);
        i.areaspline && r(i.areaspline.prototype, "init", a);
        i.spline && r(i.spline.prototype, "getPointSpline", function(a, b, c, g) {
            var d, e, l, i, n, p, o;
            if (this.chart.polar) {
                d = c.plotX;
                e = c.plotY;
                a = b[g - 1];
                l = b[g + 1];
                this.connectEnds && (a || (a = b[b.length - 2]),
                l || (l = b[1]));
                if (a && l)
                    i = a.plotX,
                    n = a.plotY,
                    b = l.plotX,
                    p = l.plotY,
                    i = (1.5 * d + i) / 2.5,
                    n = (1.5 * e + n) / 2.5,
                    l = (1.5 * d + b) / 2.5,
                    o = (1.5 * e + p) / 2.5,
                    b = Math.sqrt(Math.pow(i - d, 2) + Math.pow(n - e, 2)),
                    p = Math.sqrt(Math.pow(l - d, 2) + Math.pow(o - e, 2)),
                    i = Math.atan2(n - e, i - d),
                    n = Math.atan2(o - e, l - d),
                    o = Math.PI / 2 + (i + n) / 2,
                    Math.abs(i - o) > Math.PI / 2 && (o -= Math.PI),
                    i = d + Math.cos(o) * b,
                    n = e + Math.sin(o) * b,
                    l = d + Math.cos(Math.PI + o) * p,
                    o = e + Math.sin(Math.PI + o) * p,
                    c.rightContX = l,
                    c.rightContY = o;
                g ? (c = ["C", a.rightContX || a.plotX, a.rightContY || a.plotY, i || d, n || e, d, e],
                a.rightContX = a.rightContY = null) : c = ["M", d, e]
            } else
                c = a.call(this, b, c, g);
            return c
        });
        r(c, "translate", function(a) {
            var b = this.chart;
            a.call(this);
            if (b.polar && (this.kdByAngle = b.tooltip && b.tooltip.shared,
            !this.preventPostTranslate)) {
                a = this.points;
                for (b = a.length; b--; )
                    this.toXY(a[b])
            }
        });
        r(c, "getSegmentPath", function(a, b) {
            var c = this.points;
            if (this.chart.polar && this.options.connectEnds !== !1 && b[b.length - 1] === c[c.length - 1] && c[0].y !== null)
                this.connectEnds = !0,
                b = [].concat(b, [c[0]]);
            return a.call(this, b)
        });
        r(c, "animate", b);
        if (i.column)
            e = i.column.prototype,
            r(e, "animate", b),
            r(e, "translate", function(a) {
                var b = this.xAxis, c = this.yAxis.len, d = b.center, e = b.startAngleRad, i = this.chart.renderer, l, n;
                this.preventPostTranslate = !0;
                a.call(this);
                if (b.isRadial) {
                    b = this.points;
                    for (n = b.length; n--; )
                        l = b[n],
                        a = l.barX + e,
                        l.shapeType = "path",
                        l.shapeArgs = {
                            d: i.symbols.arc(d[0], d[1], c - l.plotY, null, {
                                start: a,
                                end: a + l.pointWidth,
                                innerR: c - o(l.yBottom, c)
                            })
                        },
                        this.toXY(l),
                        l.tooltipPos = [l.plotX, l.plotY],
                        l.ttBelow = l.plotY > d[1]
                }
            }),
            r(e, "alignDataLabel", function(a, b, d, e, j, i) {
                if (this.chart.polar) {
                    a = b.rectPlotX / Math.PI * 180;
                    if (e.align === null)
                        e.align = a > 20 && a < 160 ? "left" : a > 200 && a < 340 ? "right" : "center";
                    if (e.verticalAlign === null)
                        e.verticalAlign = a < 45 || a > 315 ? "bottom" : a > 135 && a < 225 ? "top" : "middle";
                    c.alignDataLabel.call(this, b, d, e, j, i)
                } else
                    a.call(this, b, d, e, j, i)
            });
        r(d, "getCoordinates", function(a, b) {
            var c = this.chart
              , d = {
                xAxis: [],
                yAxis: []
            };
            c.polar ? s(c.axes, function(a) {
                var e = a.isXAxis
                  , f = a.center
                  , i = b.chartX - f[0] - c.plotLeft
                  , f = b.chartY - f[1] - c.plotTop;
                d[e ? "xAxis" : "yAxis"].push({
                    axis: a,
                    value: a.translate(e ? Math.PI - Math.atan2(i, f) : Math.sqrt(Math.pow(i, 2) + Math.pow(f, 2)), !0)
                })
            }) : d = a.call(this, b);
            return d
        })
    })()
})(Highcharts);
(function(d) {
    function p(c, b, a) {
        var e, g, f = b.options.chart.options3d, h = !1;
        a ? (h = b.inverted,
        a = b.plotWidth / 2,
        b = b.plotHeight / 2,
        e = f.depth / 2,
        g = z(f.depth, 1) * z(f.viewDistance, 0)) : (a = b.plotLeft + b.plotWidth / 2,
        b = b.plotTop + b.plotHeight / 2,
        e = f.depth / 2,
        g = z(f.depth, 1) * z(f.viewDistance, 0));
        var j = [], i = a, k = b, l = e, q = g, a = A * (h ? f.beta : -f.beta), f = A * (h ? -f.alpha : f.alpha), o = m(a), x = n(a), r = m(f), v = n(f), t, u, y, w, s, p;
        d.each(c, function(a) {
            t = (h ? a.y : a.x) - i;
            u = (h ? a.x : a.y) - k;
            y = (a.z || 0) - l;
            w = x * t - o * y;
            s = -o * r * t - x * r * y + v * u;
            p = o * v * t + x * v * y + r * u;
            q > 0 && q < Number.POSITIVE_INFINITY && (w *= q / (p + l + q),
            s *= q / (p + l + q));
            w += i;
            s += k;
            p += l;
            j.push({
                x: h ? s : w,
                y: h ? w : s,
                z: p
            })
        });
        return j
    }
    function B(c) {
        return c !== void 0 && c !== null
    }
    function F(c) {
        var b = 0, a, e;
        for (a = 0; a < c.length; a++)
            e = (a + 1) % c.length,
            b += c[a].x * c[e].y - c[e].x * c[a].y;
        return b / 2
    }
    function D(c) {
        var b = 0, a;
        for (a = 0; a < c.length; a++)
            b += c[a].z;
        return c.length ? b / c.length : 0
    }
    function s(c, b, a, e, g, f, d, j) {
        var i = [];
        return f > g && f - g > o / 2 + 1.0E-4 ? (i = i.concat(s(c, b, a, e, g, g + o / 2, d, j)),
        i = i.concat(s(c, b, a, e, g + o / 2, f, d, j))) : f < g && g - f > o / 2 + 1.0E-4 ? (i = i.concat(s(c, b, a, e, g, g - o / 2, d, j)),
        i = i.concat(s(c, b, a, e, g - o / 2, f, d, j))) : (i = f - g,
        ["C", c + a * n(g) - a * C * i * m(g) + d, b + e * m(g) + e * C * i * n(g) + j, c + a * n(f) + a * C * i * m(f) + d, b + e * m(f) - e * C * i * n(f) + j, c + a * n(f) + d, b + e * m(f) + j])
    }
    function G(c) {
        if (this.chart.is3d()) {
            var b = this.chart.options.plotOptions.column.grouping;
            if (b !== void 0 && !b && this.group.zIndex !== void 0 && !this.zIndexSet)
                this.group.attr({
                    zIndex: this.group.zIndex * 10
                }),
                this.zIndexSet = !0;
            var a = this.options
              , e = this.options.states;
            this.borderWidth = a.borderWidth = B(a.edgeWidth) ? a.edgeWidth : 1;
            d.each(this.data, function(b) {
                if (b.y !== null)
                    b = b.pointAttr,
                    this.borderColor = d.pick(a.edgeColor, b[""].fill),
                    b[""].stroke = this.borderColor,
                    b.hover.stroke = d.pick(e.hover.edgeColor, this.borderColor),
                    b.select.stroke = d.pick(e.select.edgeColor, this.borderColor)
            })
        }
        c.apply(this, [].slice.call(arguments, 1))
    }
    var o = Math.PI
      , A = o / 180
      , m = Math.sin
      , n = Math.cos
      , z = d.pick
      , H = Math.round;
    d.perspective = p;
    var C = 4 * (Math.sqrt(2) - 1) / 3 / (o / 2);
    d.SVGRenderer.prototype.toLinePath = function(c, b) {
        var a = [];
        d.each(c, function(b) {
            a.push("L", b.x, b.y)
        });
        c.length && (a[0] = "M",
        b && a.push("Z"));
        return a
    }
    ;
    d.SVGRenderer.prototype.cuboid = function(c) {
        var b = this.g()
          , c = this.cuboidPath(c);
        b.front = this.path(c[0]).attr({
            zIndex: c[3],
            "stroke-linejoin": "round"
        }).add(b);
        b.top = this.path(c[1]).attr({
            zIndex: c[4],
            "stroke-linejoin": "round"
        }).add(b);
        b.side = this.path(c[2]).attr({
            zIndex: c[5],
            "stroke-linejoin": "round"
        }).add(b);
        b.fillSetter = function(a) {
            var b = d.Color(a).brighten(0.1).get()
              , c = d.Color(a).brighten(-0.1).get();
            this.front.attr({
                fill: a
            });
            this.top.attr({
                fill: b
            });
            this.side.attr({
                fill: c
            });
            this.color = a;
            return this
        }
        ;
        b.opacitySetter = function(a) {
            this.front.attr({
                opacity: a
            });
            this.top.attr({
                opacity: a
            });
            this.side.attr({
                opacity: a
            });
            return this
        }
        ;
        b.attr = function(a) {
            a.shapeArgs || B(a.x) ? (a = this.renderer.cuboidPath(a.shapeArgs || a),
            this.front.attr({
                d: a[0],
                zIndex: a[3]
            }),
            this.top.attr({
                d: a[1],
                zIndex: a[4]
            }),
            this.side.attr({
                d: a[2],
                zIndex: a[5]
            })) : d.SVGElement.prototype.attr.call(this, a);
            return this
        }
        ;
        b.animate = function(a, b, c) {
            B(a.x) && B(a.y) ? (a = this.renderer.cuboidPath(a),
            this.front.attr({
                zIndex: a[3]
            }).animate({
                d: a[0]
            }, b, c),
            this.top.attr({
                zIndex: a[4]
            }).animate({
                d: a[1]
            }, b, c),
            this.side.attr({
                zIndex: a[5]
            }).animate({
                d: a[2]
            }, b, c)) : a.opacity ? (this.front.animate(a, b, c),
            this.top.animate(a, b, c),
            this.side.animate(a, b, c)) : d.SVGElement.prototype.animate.call(this, a, b, c);
            return this
        }
        ;
        b.destroy = function() {
            this.front.destroy();
            this.top.destroy();
            this.side.destroy();
            return null
        }
        ;
        b.attr({
            zIndex: -c[3]
        });
        return b
    }
    ;
    d.SVGRenderer.prototype.cuboidPath = function(c) {
        var b = c.x
          , a = c.y
          , e = c.z
          , g = c.height
          , f = c.width
          , h = c.depth
          , j = d.map
          , i = [{
            x: b,
            y: a,
            z: e
        }, {
            x: b + f,
            y: a,
            z: e
        }, {
            x: b + f,
            y: a + g,
            z: e
        }, {
            x: b,
            y: a + g,
            z: e
        }, {
            x: b,
            y: a + g,
            z: e + h
        }, {
            x: b + f,
            y: a + g,
            z: e + h
        }, {
            x: b + f,
            y: a,
            z: e + h
        }, {
            x: b,
            y: a,
            z: e + h
        }]
          , i = p(i, d.charts[this.chartIndex], c.insidePlotArea)
          , a = function(a, b) {
            a = j(a, function(a) {
                return i[a]
            });
            b = j(b, function(a) {
                return i[a]
            });
            return F(a) < 0 ? a : F(b) < 0 ? b : []
        }
          , c = a([3, 2, 1, 0], [7, 6, 5, 4])
          , b = a([1, 6, 7, 0], [4, 5, 2, 3])
          , a = a([1, 2, 5, 6], [0, 7, 4, 3]);
        return [this.toLinePath(c, !0), this.toLinePath(b, !0), this.toLinePath(a, !0), D(c), D(b), D(a)]
    }
    ;
    d.SVGRenderer.prototype.arc3d = function(c) {
        c.alpha *= A;
        c.beta *= A;
        var b = this.g()
          , a = this.arc3dPath(c)
          , e = b.renderer
          , g = a.zTop * 100;
        b.shapeArgs = c;
        b.top = e.path(a.top).setRadialReference(c.center).attr({
            zIndex: a.zTop
        }).add(b);
        b.side1 = e.path(a.side2).attr({
            zIndex: a.zSide1
        });
        b.side2 = e.path(a.side1).attr({
            zIndex: a.zSide2
        });
        b.inn = e.path(a.inn).attr({
            zIndex: a.zInn
        });
        b.out = e.path(a.out).attr({
            zIndex: a.zOut
        });
        b.fillSetter = function(a) {
            this.color = a;
            var b = d.Color(a).brighten(-0.1).get();
            this.side1.attr({
                fill: b
            });
            this.side2.attr({
                fill: b
            });
            this.inn.attr({
                fill: b
            });
            this.out.attr({
                fill: b
            });
            this.top.attr({
                fill: a
            });
            return this
        }
        ;
        b.translateXSetter = function(a) {
            this.out.attr({
                translateX: a
            });
            this.inn.attr({
                translateX: a
            });
            this.side1.attr({
                translateX: a
            });
            this.side2.attr({
                translateX: a
            });
            this.top.attr({
                translateX: a
            })
        }
        ;
        b.translateYSetter = function(a) {
            this.out.attr({
                translateY: a
            });
            this.inn.attr({
                translateY: a
            });
            this.side1.attr({
                translateY: a
            });
            this.side2.attr({
                translateY: a
            });
            this.top.attr({
                translateY: a
            })
        }
        ;
        b.animate = function(a, b, c) {
            B(a.end) || B(a.start) ? (this._shapeArgs = this.shapeArgs,
            d.SVGElement.prototype.animate.call(this, {
                _args: a
            }, {
                duration: b,
                start: function() {
                    var a = arguments[0].elem
                      , b = a._shapeArgs;
                    b.fill !== a.color && a.attr({
                        fill: b.fill
                    })
                },
                step: function() {
                    var a = arguments[1]
                      , b = a.elem
                      , c = b._shapeArgs
                      , e = a.end
                      , a = a.pos
                      , c = d.merge(c, {
                        x: c.x + (e.x - c.x) * a,
                        y: c.y + (e.y - c.y) * a,
                        r: c.r + (e.r - c.r) * a,
                        innerR: c.innerR + (e.innerR - c.innerR) * a,
                        start: c.start + (e.start - c.start) * a,
                        end: c.end + (e.end - c.end) * a
                    })
                      , e = b.renderer.arc3dPath(c);
                    b.shapeArgs = c;
                    b.top.attr({
                        d: e.top,
                        zIndex: e.zTop
                    });
                    b.inn.attr({
                        d: e.inn,
                        zIndex: e.zInn
                    });
                    b.out.attr({
                        d: e.out,
                        zIndex: e.zOut
                    });
                    b.side1.attr({
                        d: e.side1,
                        zIndex: e.zSide1
                    });
                    b.side2.attr({
                        d: e.side2,
                        zIndex: e.zSide2
                    })
                }
            }, c)) : d.SVGElement.prototype.animate.call(this, a, b, c);
            return this
        }
        ;
        b.destroy = function() {
            this.top.destroy();
            this.out.destroy();
            this.inn.destroy();
            this.side1.destroy();
            this.side2.destroy();
            d.SVGElement.prototype.destroy.call(this)
        }
        ;
        b.hide = function() {
            this.top.hide();
            this.out.hide();
            this.inn.hide();
            this.side1.hide();
            this.side2.hide()
        }
        ;
        b.show = function() {
            this.top.show();
            this.out.show();
            this.inn.show();
            this.side1.show();
            this.side2.show()
        }
        ;
        b.zIndex = g;
        b.attr({
            zIndex: g
        });
        return b
    }
    ;
    d.SVGRenderer.prototype.arc3dPath = function(c) {
        function b(a) {
            a %= 2 * o;
            a > o && (a = 2 * o - a);
            return a
        }
        var a = c.x
          , e = c.y
          , d = c.start
          , f = c.end - 1.0E-5
          , h = c.r
          , j = c.innerR
          , i = c.depth
          , k = c.alpha
          , l = c.beta
          , q = n(d)
          , p = m(d)
          , c = n(f)
          , x = m(f)
          , r = h * n(l);
        h *= n(k);
        var v = j * n(l)
          , t = j * n(k)
          , j = i * m(l)
          , u = i * m(k)
          , i = ["M", a + r * q, e + h * p]
          , i = i.concat(s(a, e, r, h, d, f, 0, 0))
          , i = i.concat(["L", a + v * c, e + t * x])
          , i = i.concat(s(a, e, v, t, f, d, 0, 0))
          , i = i.concat(["Z"])
          , y = l > 0 ? o / 2 : 0
          , l = k > 0 ? 0 : o / 2
          , y = d > -y ? d : f > -y ? -y : d
          , w = f < o - l ? f : d < o - l ? o - l : f
          , k = ["M", a + r * n(y), e + h * m(y)]
          , k = k.concat(s(a, e, r, h, y, w, 0, 0));
        f > o - l && d < o - l && (k = k.concat(["L", a + r * n(w) + j, e + h * m(w) + u]),
        k = k.concat(s(a, e, r, h, w, f, j, u)),
        k = k.concat(["L", a + r * n(f), e + h * m(f)]),
        k = k.concat(s(a, e, r, h, f, w, 0, 0)));
        k = k.concat(["L", a + r * n(w) + j, e + h * m(w) + u]);
        k = k.concat(s(a, e, r, h, w, y, j, u));
        k = k.concat(["Z"]);
        l = ["M", a + v * q, e + t * p];
        l = l.concat(s(a, e, v, t, d, f, 0, 0));
        l = l.concat(["L", a + v * n(f) + j, e + t * m(f) + u]);
        l = l.concat(s(a, e, v, t, f, d, j, u));
        l = l.concat(["Z"]);
        q = ["M", a + r * q, e + h * p, "L", a + r * q + j, e + h * p + u, "L", a + v * q + j, e + t * p + u, "L", a + v * q, e + t * p, "Z"];
        a = ["M", a + r * c, e + h * x, "L", a + r * c + j, e + h * x + u, "L", a + v * c + j, e + t * x + u, "L", a + v * c, e + t * x, "Z"];
        x = Math.atan2(u, -j);
        e = Math.abs(f + x);
        c = Math.abs(d + x);
        d = Math.abs((d + f) / 2 + x);
        e = b(e);
        c = b(c);
        d = b(d);
        d *= 1E5;
        f = c * 1E5;
        e *= 1E5;
        return {
            top: i,
            zTop: o * 1E5 + 1,
            out: k,
            zOut: Math.max(d, f, e),
            inn: l,
            zInn: Math.max(d, f, e),
            side1: q,
            zSide1: e * 0.99,
            side2: a,
            zSide2: f * 0.99
        }
    }
    ;
    d.Chart.prototype.is3d = function() {
        return this.options.chart.options3d && this.options.chart.options3d.enabled
    }
    ;
    d.wrap(d.Chart.prototype, "isInsidePlot", function(c) {
        return this.is3d() ? !0 : c.apply(this, [].slice.call(arguments, 1))
    });
    d.getOptions().chart.options3d = {
        enabled: !1,
        alpha: 0,
        beta: 0,
        depth: 100,
        viewDistance: 25,
        frame: {
            bottom: {
                size: 1,
                color: "rgba(255,255,255,0)"
            },
            side: {
                size: 1,
                color: "rgba(255,255,255,0)"
            },
            back: {
                size: 1,
                color: "rgba(255,255,255,0)"
            }
        }
    };
    d.wrap(d.Chart.prototype, "init", function(c) {
        var b = [].slice.call(arguments, 1), a;
        if (b[0].chart.options3d && b[0].chart.options3d.enabled)
            b[0].chart.options3d.alpha = (b[0].chart.options3d.alpha || 0) % 360,
            b[0].chart.options3d.beta = (b[0].chart.options3d.beta || 0) % 360,
            a = b[0].plotOptions || {},
            a = a.pie || {},
            a.borderColor = d.pick(a.borderColor, void 0);
        c.apply(this, b)
    });
    d.wrap(d.Chart.prototype, "setChartSize", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.is3d()) {
            var b = this.inverted
              , a = this.clipBox
              , e = this.margin;
            a[b ? "y" : "x"] = -(e[3] || 0);
            a[b ? "x" : "y"] = -(e[0] || 0);
            a[b ? "height" : "width"] = this.chartWidth + (e[3] || 0) + (e[1] || 0);
            a[b ? "width" : "height"] = this.chartHeight + (e[0] || 0) + (e[2] || 0)
        }
    });
    d.wrap(d.Chart.prototype, "redraw", function(c) {
        if (this.is3d())
            this.isDirtyBox = !0;
        c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.Chart.prototype, "renderSeries", function(c) {
        var b = this.series.length;
        if (this.is3d())
            for (; b--; )
                c = this.series[b],
                c.translate(),
                c.render();
        else
            c.call(this)
    });
    d.Chart.prototype.retrieveStacks = function(c) {
        var b = this.series, a = {}, e, g = 1;
        d.each(this.series, function(d) {
            e = z(d.options.stack, c ? 0 : b.length - 1 - d.index);
            a[e] ? a[e].series.push(d) : (a[e] = {
                series: [d],
                position: g
            },
            g++)
        });
        a.totalStacks = g + 1;
        return a
    }
    ;
    d.wrap(d.Axis.prototype, "setOptions", function(c, b) {
        var a;
        c.call(this, b);
        if (this.chart.is3d())
            a = this.options,
            a.tickWidth = d.pick(a.tickWidth, 0),
            a.gridLineWidth = d.pick(a.gridLineWidth, 1)
    });
    d.wrap(d.Axis.prototype, "render", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.chart.is3d()) {
            var b = this.chart
              , a = b.renderer
              , e = b.options.chart.options3d
              , d = e.frame
              , f = d.bottom
              , h = d.back
              , d = d.side
              , j = e.depth
              , i = this.height
              , k = this.width
              , l = this.left
              , q = this.top;
            if (!this.isZAxis)
                this.horiz ? (h = {
                    x: l,
                    y: q + (b.xAxis[0].opposite ? -f.size : i),
                    z: 0,
                    width: k,
                    height: f.size,
                    depth: j,
                    insidePlotArea: !1
                },
                this.bottomFrame ? this.bottomFrame.animate(h) : this.bottomFrame = a.cuboid(h).attr({
                    fill: f.color,
                    zIndex: b.yAxis[0].reversed && e.alpha > 0 ? 4 : -1
                }).css({
                    stroke: f.color
                }).add()) : (e = {
                    x: l + (b.yAxis[0].opposite ? 0 : -d.size),
                    y: q + (b.xAxis[0].opposite ? -f.size : 0),
                    z: j,
                    width: k + d.size,
                    height: i + f.size,
                    depth: h.size,
                    insidePlotArea: !1
                },
                this.backFrame ? this.backFrame.animate(e) : this.backFrame = a.cuboid(e).attr({
                    fill: h.color,
                    zIndex: -3
                }).css({
                    stroke: h.color
                }).add(),
                b = {
                    x: l + (b.yAxis[0].opposite ? k : -d.size),
                    y: q + (b.xAxis[0].opposite ? -f.size : 0),
                    z: 0,
                    width: d.size,
                    height: i + f.size,
                    depth: j,
                    insidePlotArea: !1
                },
                this.sideFrame ? this.sideFrame.animate(b) : this.sideFrame = a.cuboid(b).attr({
                    fill: d.color,
                    zIndex: -2
                }).css({
                    stroke: d.color
                }).add())
        }
    });
    d.wrap(d.Axis.prototype, "getPlotLinePath", function(c) {
        var b = c.apply(this, [].slice.call(arguments, 1));
        if (!this.chart.is3d())
            return b;
        if (b === null)
            return b;
        var a = this.chart.options.chart.options3d
          , a = this.isZAxis ? this.chart.plotWidth : a.depth
          , d = this.opposite;
        this.horiz && (d = !d);
        b = [this.swapZ({
            x: b[1],
            y: b[2],
            z: d ? a : 0
        }), this.swapZ({
            x: b[1],
            y: b[2],
            z: a
        }), this.swapZ({
            x: b[4],
            y: b[5],
            z: a
        }), this.swapZ({
            x: b[4],
            y: b[5],
            z: d ? 0 : a
        })];
        b = p(b, this.chart, !1);
        return b = this.chart.renderer.toLinePath(b, !1)
    });
    d.wrap(d.Axis.prototype, "getLinePath", function(c) {
        return this.chart.is3d() ? [] : c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.Axis.prototype, "getPlotBandPath", function(c) {
        if (this.chart.is3d()) {
            var b = arguments
              , a = b[1]
              , b = this.getPlotLinePath(b[2]);
            (a = this.getPlotLinePath(a)) && b ? a.push("L", b[10], b[11], "L", b[7], b[8], "L", b[4], b[5], "L", b[1], b[2]) : a = null;
            return a
        } else
            return c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.Tick.prototype, "getMarkPath", function(c) {
        var b = c.apply(this, [].slice.call(arguments, 1));
        if (!this.axis.chart.is3d())
            return b;
        b = [this.axis.swapZ({
            x: b[1],
            y: b[2],
            z: 0
        }), this.axis.swapZ({
            x: b[4],
            y: b[5],
            z: 0
        })];
        b = p(b, this.axis.chart, !1);
        return b = ["M", b[0].x, b[0].y, "L", b[1].x, b[1].y]
    });
    d.wrap(d.Tick.prototype, "getLabelPosition", function(c) {
        var b = c.apply(this, [].slice.call(arguments, 1));
        if (!this.axis.chart.is3d())
            return b;
        var a = p([this.axis.swapZ({
            x: b.x,
            y: b.y,
            z: 0
        })], this.axis.chart, !1)[0];
        a.x -= !this.axis.horiz && this.axis.opposite ? this.axis.transA : 0;
        a.old = b;
        return a
    });
    d.wrap(d.Tick.prototype, "handleOverflow", function(c, b) {
        if (this.axis.chart.is3d())
            b = b.old;
        return c.call(this, b)
    });
    d.wrap(d.Axis.prototype, "getTitlePosition", function(c) {
        var b = c.apply(this, [].slice.call(arguments, 1));
        return !this.chart.is3d() ? b : b = p([this.swapZ({
            x: b.x,
            y: b.y,
            z: 0
        })], this.chart, !1)[0]
    });
    d.wrap(d.Axis.prototype, "drawCrosshair", function(c) {
        var b = arguments;
        this.chart.is3d() && b[2] && (b[2] = {
            plotX: b[2].plotXold || b[2].plotX,
            plotY: b[2].plotYold || b[2].plotY
        });
        c.apply(this, [].slice.call(b, 1))
    });
    d.Axis.prototype.swapZ = function(c, b) {
        if (this.isZAxis) {
            var a = b ? 0 : this.chart.plotLeft
              , d = this.chart;
            return {
                x: a + (d.yAxis[0].opposite ? c.z : d.xAxis[0].width - c.z),
                y: c.y,
                z: c.x - a
            }
        } else
            return c
    }
    ;
    var E = d.ZAxis = function() {
        this.isZAxis = !0;
        this.init.apply(this, arguments)
    }
    ;
    d.extend(E.prototype, d.Axis.prototype);
    d.extend(E.prototype, {
        setOptions: function(c) {
            c = d.merge({
                offset: 0,
                lineWidth: 0
            }, c);
            d.Axis.prototype.setOptions.call(this, c);
            this.coll = "zAxis"
        },
        setAxisSize: function() {
            d.Axis.prototype.setAxisSize.call(this);
            this.width = this.len = this.chart.options.chart.options3d.depth;
            this.right = this.chart.chartWidth - this.width - this.left
        },
        getSeriesExtremes: function() {
            var c = this
              , b = c.chart;
            c.hasVisibleSeries = !1;
            c.dataMin = c.dataMax = c.ignoreMinPadding = c.ignoreMaxPadding = null;
            c.buildStacks && c.buildStacks();
            d.each(c.series, function(a) {
                if (a.visible || !b.options.chart.ignoreHiddenSeries)
                    if (c.hasVisibleSeries = !0,
                    a = a.zData,
                    a.length)
                        c.dataMin = Math.min(z(c.dataMin, a[0]), Math.min.apply(null, a)),
                        c.dataMax = Math.max(z(c.dataMax, a[0]), Math.max.apply(null, a))
            })
        }
    });
    d.wrap(d.Chart.prototype, "getAxes", function(c) {
        var b = this
          , a = this.options
          , a = a.zAxis = d.splat(a.zAxis || {});
        c.call(this);
        if (b.is3d())
            this.zAxis = [],
            d.each(a, function(a, c) {
                a.index = c;
                a.isX = !0;
                (new E(b,a)).setScale()
            })
    });
    d.wrap(d.seriesTypes.column.prototype, "translate", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.chart.is3d()) {
            var b = this.chart
              , a = this.options
              , e = a.depth || 25
              , g = (a.stacking ? a.stack || 0 : this._i) * (e + (a.groupZPadding || 1));
            a.grouping !== !1 && (g = 0);
            g += a.groupZPadding || 1;
            d.each(this.data, function(a) {
                if (a.y !== null) {
                    var c = a.shapeArgs
                      , d = a.tooltipPos;
                    a.shapeType = "cuboid";
                    c.z = g;
                    c.depth = e;
                    c.insidePlotArea = !0;
                    d = p([{
                        x: d[0],
                        y: d[1],
                        z: g
                    }], b, !1)[0];
                    a.tooltipPos = [d.x, d.y]
                }
            });
            this.z = g
        }
    });
    d.wrap(d.seriesTypes.column.prototype, "animate", function(c) {
        if (this.chart.is3d()) {
            var b = arguments[1]
              , a = this.yAxis
              , e = this
              , g = this.yAxis.reversed;
            if (d.svg)
                b ? d.each(e.data, function(b) {
                    if (b.y !== null && (b.height = b.shapeArgs.height,
                    b.shapey = b.shapeArgs.y,
                    b.shapeArgs.height = 1,
                    !g))
                        b.shapeArgs.y = b.stackY ? b.plotY + a.translate(b.stackY) : b.plotY + (b.negative ? -b.height : b.height)
                }) : (d.each(e.data, function(a) {
                    if (a.y !== null)
                        a.shapeArgs.height = a.height,
                        a.shapeArgs.y = a.shapey,
                        a.graphic && a.graphic.animate(a.shapeArgs, e.options.animation)
                }),
                this.drawDataLabels(),
                e.animate = null)
        } else
            c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.seriesTypes.column.prototype, "init", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.chart.is3d()) {
            var b = this.options
              , a = b.grouping
              , d = b.stacking
              , g = 0;
            if (a === void 0 || a) {
                a = this.chart.retrieveStacks(d);
                d = b.stack || 0;
                for (g = 0; g < a[d].series.length; g++)
                    if (a[d].series[g] === this)
                        break;
                g = a.totalStacks * 10 - 10 * (a.totalStacks - a[d].position) - g
            }
            b.zIndex = g
        }
    });
    d.wrap(d.Series.prototype, "alignDataLabel", function(c) {
        if (this.chart.is3d() && (this.type === "column" || this.type === "columnrange")) {
            var b = arguments[4]
              , a = {
                x: b.x,
                y: b.y,
                z: this.z
            }
              , a = p([a], this.chart, !0)[0];
            b.x = a.x;
            b.y = a.y
        }
        c.apply(this, [].slice.call(arguments, 1))
    });
    d.seriesTypes.columnrange && d.wrap(d.seriesTypes.columnrange.prototype, "drawPoints", G);
    d.wrap(d.seriesTypes.column.prototype, "drawPoints", G);
    d.wrap(d.seriesTypes.pie.prototype, "translate", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.chart.is3d()) {
            var b = this
              , a = b.chart
              , e = b.options
              , g = e.depth || 0
              , f = a.options.chart.options3d
              , h = {
                x: a.plotWidth / 2,
                y: a.plotHeight / 2,
                z: f.depth
            }
              , j = f.alpha
              , i = f.beta
              , k = e.stacking ? (e.stack || 0) * g : b._i * g;
            k += g / 2;
            e.grouping !== !1 && (k = 0);
            d.each(b.data, function(a) {
                var c = a.shapeArgs;
                a.shapeType = "arc3d";
                c.z = k;
                c.depth = g * 0.75;
                c.origin = h;
                c.alpha = j;
                c.beta = i;
                c.center = b.center;
                c = (c.end + c.start) / 2;
                a.slicedTranslation = {
                    translateX: H(n(c) * e.slicedOffset * n(j * A)),
                    translateY: H(m(c) * e.slicedOffset * n(j * A))
                }
            })
        }
    });
    d.wrap(d.seriesTypes.pie.prototype.pointClass.prototype, "haloPath", function(c) {
        var b = arguments;
        return this.series.chart.is3d() ? [] : c.call(this, b[1])
    });
    d.wrap(d.seriesTypes.pie.prototype, "drawPoints", function(c) {
        var b = this.group
          , a = this.options
          , e = a.states;
        if (this.chart.is3d())
            this.borderWidth = a.borderWidth = a.edgeWidth || 1,
            this.borderColor = a.edgeColor = d.pick(a.edgeColor, a.borderColor, void 0),
            e.hover.borderColor = d.pick(e.hover.edgeColor, this.borderColor),
            e.hover.borderWidth = d.pick(e.hover.edgeWidth, this.borderWidth),
            e.select.borderColor = d.pick(e.select.edgeColor, this.borderColor),
            e.select.borderWidth = d.pick(e.select.edgeWidth, this.borderWidth),
            d.each(this.data, function(a) {
                var b = a.pointAttr;
                b[""].stroke = a.series.borderColor || a.color;
                b[""]["stroke-width"] = a.series.borderWidth;
                b.hover.stroke = e.hover.borderColor;
                b.hover["stroke-width"] = e.hover.borderWidth;
                b.select.stroke = e.select.borderColor;
                b.select["stroke-width"] = e.select.borderWidth
            });
        c.apply(this, [].slice.call(arguments, 1));
        this.chart.is3d() && d.each(this.points, function(a) {
            var c = a.graphic;
            c.out.add(b);
            c.inn.add(b);
            c.side1.add(b);
            c.side2.add(b);
            c[a.y ? "show" : "hide"]()
        })
    });
    d.wrap(d.seriesTypes.pie.prototype, "drawDataLabels", function(c) {
        if (this.chart.is3d()) {
            var b = this;
            d.each(b.data, function(a) {
                var c = a.shapeArgs
                  , d = c.r
                  , f = c.depth
                  , h = (c.alpha || b.chart.options.chart.options3d.alpha) * A
                  , c = (c.start + c.end) / 2
                  , a = a.labelPos;
                a[1] += -d * (1 - n(h)) * m(c) + (m(c) > 0 ? m(h) * f : 0);
                a[3] += -d * (1 - n(h)) * m(c) + (m(c) > 0 ? m(h) * f : 0);
                a[5] += -d * (1 - n(h)) * m(c) + (m(c) > 0 ? m(h) * f : 0)
            })
        }
        c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.seriesTypes.pie.prototype, "addPoint", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        this.chart.is3d() && this.update(this.userOptions, !0)
    });
    d.wrap(d.seriesTypes.pie.prototype, "animate", function(c) {
        if (this.chart.is3d()) {
            var b = arguments[1]
              , a = this.options.animation
              , e = this.center
              , g = this.group
              , f = this.markerGroup;
            if (d.svg)
                if (a === !0 && (a = {}),
                b) {
                    if (g.oldtranslateX = g.translateX,
                    g.oldtranslateY = g.translateY,
                    b = {
                        translateX: e[0],
                        translateY: e[1],
                        scaleX: 0.001,
                        scaleY: 0.001
                    },
                    g.attr(b),
                    f)
                        f.attrSetters = g.attrSetters,
                        f.attr(b)
                } else
                    b = {
                        translateX: g.oldtranslateX,
                        translateY: g.oldtranslateY,
                        scaleX: 1,
                        scaleY: 1
                    },
                    g.animate(b, a),
                    f && f.animate(b, a),
                    this.animate = null
        } else
            c.apply(this, [].slice.call(arguments, 1))
    });
    d.wrap(d.seriesTypes.scatter.prototype, "translate", function(c) {
        c.apply(this, [].slice.call(arguments, 1));
        if (this.chart.is3d()) {
            var b = this.chart, a = d.pick(this.zAxis, b.options.zAxis[0]), e = [], g, f, h;
            for (h = 0; h < this.data.length; h++)
                g = this.data[h],
                f = a.isLog && a.val2lin ? a.val2lin(g.z) : g.z,
                g.plotZ = a.translate(f),
                g.isInside = g.isInside ? f >= a.min && f <= a.max : !1,
                e.push({
                    x: g.plotX,
                    y: g.plotY,
                    z: g.plotZ
                });
            b = p(e, b, !0);
            for (h = 0; h < this.data.length; h++)
                g = this.data[h],
                a = b[h],
                g.plotXold = g.plotX,
                g.plotYold = g.plotY,
                g.plotX = a.x,
                g.plotY = a.y,
                g.plotZ = a.z
        }
    });
    d.wrap(d.seriesTypes.scatter.prototype, "init", function(c, b, a) {
        if (b.is3d())
            this.axisTypes = ["xAxis", "yAxis", "zAxis"],
            this.pointArrayMap = ["x", "y", "z"],
            this.parallelArrays = ["x", "y", "z"];
        c = c.apply(this, [b, a]);
        if (this.chart.is3d())
            this.tooltipOptions.pointFormat = this.userOptions.tooltip ? this.userOptions.tooltip.pointFormat || "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>" : "x: <b>{point.x}</b><br/>y: <b>{point.y}</b><br/>z: <b>{point.z}</b><br/>";
        return c
    });
    if (d.VMLRenderer)
        d.setOptions({
            animate: !1
        }),
        d.VMLRenderer.prototype.cuboid = d.SVGRenderer.prototype.cuboid,
        d.VMLRenderer.prototype.cuboidPath = d.SVGRenderer.prototype.cuboidPath,
        d.VMLRenderer.prototype.toLinePath = d.SVGRenderer.prototype.toLinePath,
        d.VMLRenderer.prototype.createElement3D = d.SVGRenderer.prototype.createElement3D,
        d.VMLRenderer.prototype.arc3d = function(c) {
            c = d.SVGRenderer.prototype.arc3d.call(this, c);
            c.css({
                zIndex: c.zIndex
            });
            return c
        }
        ,
        d.VMLRenderer.prototype.arc3dPath = d.SVGRenderer.prototype.arc3dPath,
        d.wrap(d.Axis.prototype, "render", function(c) {
            c.apply(this, [].slice.call(arguments, 1));
            this.sideFrame && (this.sideFrame.css({
                zIndex: 0
            }),
            this.sideFrame.front.attr({
                fill: this.sideFrame.color
            }));
            this.bottomFrame && (this.bottomFrame.css({
                zIndex: 1
            }),
            this.bottomFrame.front.attr({
                fill: this.bottomFrame.color
            }));
            this.backFrame && (this.backFrame.css({
                zIndex: 0
            }),
            this.backFrame.front.attr({
                fill: this.backFrame.color
            }))
        })
})(Highcharts);
(function(g) {
    var z = g.Chart, s = g.addEvent, A = g.removeEvent, B = HighchartsAdapter.fireEvent, j = g.createElement, p = g.discardElement, u = g.css, l = g.merge, m = g.each, q = g.extend, E = g.splat, F = Math.max, k = document, C = window, G = g.isTouchDevice, H = g.Renderer.prototype.symbols, r = g.getOptions(), x;
    q(r.lang, {
        printChart: "Print chart",
        downloadPNG: "Download PNG image",
        downloadJPEG: "Download JPEG image",
        downloadPDF: "Download PDF document",
        downloadSVG: "Download SVG vector image",
        contextButtonTitle: "Chart context menu"
    });
    r.navigation = {
        menuStyle: {
            border: "1px solid #A0A0A0",
            background: "#FFFFFF",
            padding: "5px 0"
        },
        menuItemStyle: {
            padding: "0 10px",
            background: "none",
            color: "#303030",
            fontSize: G ? "14px" : "11px"
        },
        menuItemHoverStyle: {
            background: "#4572A5",
            color: "#FFFFFF"
        },
        buttonOptions: {
            symbolFill: "#E0E0E0",
            symbolSize: 14,
            symbolStroke: "#666",
            symbolStrokeWidth: 3,
            symbolX: 12.5,
            symbolY: 10.5,
            align: "right",
            buttonSpacing: 3,
            height: 22,
            theme: {
                fill: "white",
                stroke: "none"
            },
            verticalAlign: "top",
            width: 24
        }
    };
    r.exporting = {
        type: "image/png",
        url: "http://export.highcharts.com/",
        buttons: {
            contextButton: {
                menuClassName: "highcharts-contextmenu",
                symbol: "menu",
                _titleKey: "contextButtonTitle",
                menuItems: [{
                    textKey: "printChart",
                    onclick: function() {
                        this.print()
                    }
                }, {
                    separator: !0
                }, {
                    textKey: "downloadPNG",
                    onclick: function() {
                        this.exportChart()
                    }
                }, {
                    textKey: "downloadJPEG",
                    onclick: function() {
                        this.exportChart({
                            type: "image/jpeg"
                        })
                    }
                }, {
                    textKey: "downloadPDF",
                    onclick: function() {
                        this.exportChart({
                            type: "application/pdf"
                        })
                    }
                }, {
                    textKey: "downloadSVG",
                    onclick: function() {
                        this.exportChart({
                            type: "image/svg+xml"
                        })
                    }
                }]
            }
        }
    };
    g.post = function(b, a, e) {
        var c, b = j("form", l({
            method: "post",
            action: b,
            enctype: "multipart/form-data"
        }, e), {
            display: "none"
        }, k.body);
        for (c in a)
            j("input", {
                type: "hidden",
                name: c,
                value: a[c]
            }, null, b);
        b.submit();
        p(b)
    }
    ;
    q(z.prototype, {
        sanitizeSVG: function(b) {
            return b.replace(/zIndex="[^"]+"/g, "").replace(/isShadow="[^"]+"/g, "").replace(/symbolName="[^"]+"/g, "").replace(/jQuery[0-9]+="[^"]+"/g, "").replace(/url\([^#]+#/g, "url(#").replace(/<svg /, '<svg xmlns:xlink="http://www.w3.org/1999/xlink" ').replace(/ (NS[0-9]+\:)?href=/g, " xlink:href=").replace(/\n/, " ").replace(/<\/svg>.*?$/, "</svg>").replace(/(fill|stroke)="rgba\(([ 0-9]+,[ 0-9]+,[ 0-9]+),([ 0-9\.]+)\)"/g, '$1="rgb($2)" $1-opacity="$3"').replace(/&nbsp;/g, "\u00a0").replace(/&shy;/g, "\u00ad").replace(/<IMG /g, "<image ").replace(/<(\/?)TITLE>/g, "<$1title>").replace(/height=([^" ]+)/g, 'height="$1"').replace(/width=([^" ]+)/g, 'width="$1"').replace(/hc-svg-href="([^"]+)">/g, 'xlink:href="$1"/>').replace(/ id=([^" >]+)/g, ' id="$1"').replace(/class=([^" >]+)/g, 'class="$1"').replace(/ transform /g, " ").replace(/:(path|rect)/g, "$1").replace(/style="([^"]+)"/g, function(a) {
                return a.toLowerCase()
            })
        },
        getChartHTML: function() {
            return this.container.innerHTML
        },
        getSVG: function(b) {
            var a = this, e, c, f, y, h, d = l(a.options, b), I = d.exporting.allowHTML;
            if (!k.createElementNS)
                k.createElementNS = function(a, b) {
                    return k.createElement(b)
                }
                ;
            c = j("div", null, {
                position: "absolute",
                top: "-9999em",
                width: a.chartWidth + "px",
                height: a.chartHeight + "px"
            }, k.body);
            f = a.renderTo.style.width;
            h = a.renderTo.style.height;
            f = d.exporting.sourceWidth || d.chart.width || /px$/.test(f) && parseInt(f, 10) || 600;
            h = d.exporting.sourceHeight || d.chart.height || /px$/.test(h) && parseInt(h, 10) || 400;
            q(d.chart, {
                animation: !1,
                renderTo: c,
                forExport: !0,
                renderer: "SVGRenderer",
                width: f,
                height: h
            });
            d.exporting.enabled = !1;
            delete d.data;
            d.series = [];
            m(a.series, function(a) {
                y = l(a.options, {
                    animation: !1,
                    enableMouseTracking: !1,
                    showCheckbox: !1,
                    visible: a.visible
                });
                y.isInternal || d.series.push(y)
            });
            b && m(["xAxis", "yAxis"], function(a) {
                m(E(b[a]), function(b, c) {
                    d[a][c] = l(d[a][c], b)
                })
            });
            e = new g.Chart(d,a.callback);
            m(["xAxis", "yAxis"], function(b) {
                m(a[b], function(a, c) {
                    var d = e[b][c]
                      , f = a.getExtremes()
                      , h = f.userMin
                      , f = f.userMax;
                    d && (h !== void 0 || f !== void 0) && d.setExtremes(h, f, !0, !1)
                })
            });
            f = e.getChartHTML();
            d = null;
            e.destroy();
            p(c);
            if (I && (c = f.match(/<\/svg>(.*?$)/)))
                c = '<foreignObject x="0" y="0" width="200" height="200"><body xmlns="http://www.w3.org/1999/xhtml">' + c[1] + "</body></foreignObject>",
                f = f.replace("</svg>", c + "</svg>");
            f = this.sanitizeSVG(f);
            return f = f.replace(/(url\(#highcharts-[0-9]+)&quot;/g, "$1").replace(/&quot;/g, "'")
        },
        getSVGForExport: function(b, a) {
            var e = this.options.exporting;
            return this.getSVG(l({
                chart: {
                    borderRadius: 0
                }
            }, e.chartOptions, a, {
                exporting: {
                    sourceWidth: b && b.sourceWidth || e.sourceWidth,
                    sourceHeight: b && b.sourceHeight || e.sourceHeight
                }
            }))
        },
        exportChart: function(b, a) {
            var e = this.getSVGForExport(b, a)
              , b = l(this.options.exporting, b);
            g.post(b.url, {
                filename: b.filename || "chart",
                type: b.type,
                width: b.width || 0,
                scale: b.scale || 2,
                svg: e
            }, b.formAttributes)
        },
        print: function() {
            var b = this
              , a = b.container
              , e = []
              , c = a.parentNode
              , f = k.body
              , g = f.childNodes;
            if (!b.isPrinting)
                b.isPrinting = !0,
                B(b, "beforePrint"),
                m(g, function(a, b) {
                    if (a.nodeType === 1)
                        e[b] = a.style.display,
                        a.style.display = "none"
                }),
                f.appendChild(a),
                C.focus(),
                C.print(),
                setTimeout(function() {
                    c.appendChild(a);
                    m(g, function(a, b) {
                        if (a.nodeType === 1)
                            a.style.display = e[b]
                    });
                    b.isPrinting = !1;
                    B(b, "afterPrint")
                }, 1E3)
        },
        contextMenu: function(b, a, e, c, f, g, h) {
            var d = this, l = d.options.navigation, D = l.menuItemStyle, n = d.chartWidth, o = d.chartHeight, k = "cache-" + b, i = d[k], t = F(f, g), v, w, p, r = function(a) {
                d.pointer.inClass(a.target, b) || w()
            };
            if (!i)
                d[k] = i = j("div", {
                    className: b
                }, {
                    position: "absolute",
                    zIndex: 1E3,
                    padding: t + "px"
                }, d.container),
                v = j("div", null, q({
                    MozBoxShadow: "3px 3px 10px #888",
                    WebkitBoxShadow: "3px 3px 10px #888",
                    boxShadow: "3px 3px 10px #888"
                }, l.menuStyle), i),
                w = function() {
                    u(i, {
                        display: "none"
                    });
                    h && h.setState(0);
                    d.openMenu = !1
                }
                ,
                s(i, "mouseleave", function() {
                    p = setTimeout(w, 500)
                }),
                s(i, "mouseenter", function() {
                    clearTimeout(p)
                }),
                s(document, "mouseup", r),
                s(d, "destroy", function() {
                    A(document, "mouseup", r)
                }),
                m(a, function(a) {
                    if (a) {
                        var b = a.separator ? j("hr", null, null, v) : j("div", {
                            onmouseover: function() {
                                u(this, l.menuItemHoverStyle)
                            },
                            onmouseout: function() {
                                u(this, D)
                            },
                            onclick: function(b) {
                                b.stopPropagation();
                                w();
                                a.onclick && a.onclick.apply(d, arguments)
                            },
                            innerHTML: a.text || d.options.lang[a.textKey]
                        }, q({
                            cursor: "pointer"
                        }, D), v);
                        d.exportDivElements.push(b)
                    }
                }),
                d.exportDivElements.push(v, i),
                d.exportMenuWidth = i.offsetWidth,
                d.exportMenuHeight = i.offsetHeight;
            a = {
                display: "block"
            };
            e + d.exportMenuWidth > n ? a.right = n - e - f - t + "px" : a.left = e - t + "px";
            c + g + d.exportMenuHeight > o && h.alignOptions.verticalAlign !== "top" ? a.bottom = o - c - t + "px" : a.top = c + g - t + "px";
            u(i, a);
            d.openMenu = !0
        },
        addButton: function(b) {
            var a = this, e = a.renderer, c = l(a.options.navigation.buttonOptions, b), f = c.onclick, k = c.menuItems, h, d, m = {
                stroke: c.symbolStroke,
                fill: c.symbolFill
            }, j = c.symbolSize || 12;
            if (!a.btnCount)
                a.btnCount = 0;
            if (!a.exportDivElements)
                a.exportDivElements = [],
                a.exportSVGElements = [];
            if (c.enabled !== !1) {
                var n = c.theme, o = n.states, p = o && o.hover, o = o && o.select, i;
                delete n.states;
                f ? i = function(b) {
                    b.stopPropagation();
                    f.call(a, b)
                }
                : k && (i = function() {
                    a.contextMenu(d.menuClassName, k, d.translateX, d.translateY, d.width, d.height, d);
                    d.setState(2)
                }
                );
                c.text && c.symbol ? n.paddingLeft = g.pick(n.paddingLeft, 25) : c.text || q(n, {
                    width: c.width,
                    height: c.height,
                    padding: 0
                });
                d = e.button(c.text, 0, 0, i, n, p, o).attr({
                    title: a.options.lang[c._titleKey],
                    "stroke-linecap": "round"
                });
                d.menuClassName = b.menuClassName || "highcharts-menu-" + a.btnCount++;
                c.symbol && (h = e.symbol(c.symbol, c.symbolX - j / 2, c.symbolY - j / 2, j, j).attr(q(m, {
                    "stroke-width": c.symbolStrokeWidth || 1,
                    zIndex: 1
                })).add(d));
                d.add().align(q(c, {
                    width: d.width,
                    x: g.pick(c.x, x)
                }), !0, "spacingBox");
                x += (d.width + c.buttonSpacing) * (c.align === "right" ? -1 : 1);
                a.exportSVGElements.push(d, h)
            }
        },
        destroyExport: function(b) {
            var b = b.target, a, e;
            for (a = 0; a < b.exportSVGElements.length; a++)
                if (e = b.exportSVGElements[a])
                    e.onclick = e.ontouchstart = null,
                    b.exportSVGElements[a] = e.destroy();
            for (a = 0; a < b.exportDivElements.length; a++)
                e = b.exportDivElements[a],
                A(e, "mouseleave"),
                b.exportDivElements[a] = e.onmouseout = e.onmouseover = e.ontouchstart = e.onclick = null,
                p(e)
        }
    });
    H.menu = function(b, a, e, c) {
        return ["M", b, a + 2.5, "L", b + e, a + 2.5, "M", b, a + c / 2 + 0.5, "L", b + e, a + c / 2 + 0.5, "M", b, a + c - 1.5, "L", b + e, a + c - 1.5]
    }
    ;
    z.prototype.callbacks.push(function(b) {
        var a, e = b.options.exporting, c = e.buttons;
        x = 0;
        if (e.enabled !== !1) {
            for (a in c)
                b.addButton(c[a]);
            s(b, "destroy", b.destroyExport)
        }
    })
})(Highcharts);
function TwigkitHistogramRendererRegistration() {
    jQuery('.histogram dd.bar').hover(function() {
        $(this).addClass("hover")
    });
    jQuery('.histogram dd.bar').hover(function() {
        $(this).addClass("hover");
    }, function() {
        $(this).removeClass("hover");
    });
}
TwigkitRenderCallbacks.add("Chart", TwigkitHistogramRendererRegistration);
(function($, undefined) {
    function Datepicker() {
        this.debug = !1,
        this._curInst = null,
        this._keyEvent = !1,
        this._disabledInputs = [],
        this._datepickerShowing = !1,
        this._inDialog = !1,
        this._mainDivId = "ui-datepicker-div",
        this._inlineClass = "ui-datepicker-inline",
        this._appendClass = "ui-datepicker-append",
        this._triggerClass = "ui-datepicker-trigger",
        this._dialogClass = "ui-datepicker-dialog",
        this._disableClass = "ui-datepicker-disabled",
        this._unselectableClass = "ui-datepicker-unselectable",
        this._currentClass = "ui-datepicker-current-day",
        this._dayOverClass = "ui-datepicker-days-cell-over",
        this.regional = [],
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        },
        this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        },
        $.extend(this._defaults, this.regional[""]),
        this.dpDiv = bindHover($('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
    }
    function bindHover(a) {
        var b = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return a.bind("mouseout", function(a) {
            var c = $(a.target).closest(b);
            if (!c.length)
                return;
            c.removeClass("ui-state-hover ui-datepicker-prev-hover ui-datepicker-next-hover")
        }).bind("mouseover", function(c) {
            var d = $(c.target).closest(b);
            if ($.datepicker._isDisabledDatepicker(instActive.inline ? a.parent()[0] : instActive.input[0]) || !d.length)
                return;
            d.parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),
            d.addClass("ui-state-hover"),
            d.hasClass("ui-datepicker-prev") && d.addClass("ui-datepicker-prev-hover"),
            d.hasClass("ui-datepicker-next") && d.addClass("ui-datepicker-next-hover")
        })
    }
    function extendRemove(a, b) {
        $.extend(a, b);
        for (var c in b)
            if (b[c] == null || b[c] == undefined)
                a[c] = b[c];
        return a
    }
    function isArray(a) {
        return a && ($.browser.safari && typeof a == "object" && a.length || a.constructor && a.constructor.toString().match(/\Array\(\)/))
    }
    $.extend($.ui, {
        datepicker: {
            version: "1.8.24"
        }
    });
    var PROP_NAME = "datepicker", dpuuid = (new Date).getTime(), instActive;
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        log: function() {
            this.debug && console.log.apply("", arguments)
        },
        _widgetDatepicker: function() {
            return this.dpDiv
        },
        setDefaults: function(a) {
            return extendRemove(this._defaults, a || {}),
            this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase()
              , inline = nodeName == "div" || nodeName == "span";
            target.id || (this.uuid += 1,
            target.id = "dp" + this.uuid);
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {}),
            nodeName == "input" ? this._connectDatepicker(target, inst) : inline && this._inlineDatepicker(target, inst)
        },
        _newInst: function(a, b) {
            var c = a[0].id.replace(/([^A-Za-z0-9_-])/g, "\\\\$1");
            return {
                id: c,
                input: a,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: b,
                dpDiv: b ? bindHover($('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>')) : this.dpDiv
            }
        },
        _connectDatepicker: function(a, b) {
            var c = $(a);
            b.append = $([]),
            b.trigger = $([]);
            if (c.hasClass(this.markerClassName))
                return;
            this._attachments(c, b),
            c.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp).bind("setData.datepicker", function(a, c, d) {
                b.settings[c] = d
            }).bind("getData.datepicker", function(a, c) {
                return this._get(b, c)
            }),
            this._autoSize(b),
            $.data(a, PROP_NAME, b),
            b.settings.disabled && this._disableDatepicker(a)
        },
        _attachments: function(a, b) {
            var c = this._get(b, "appendText")
              , d = this._get(b, "isRTL");
            b.append && b.append.remove(),
            c && (b.append = $('<span class="' + this._appendClass + '">' + c + "</span>"),
            a[d ? "before" : "after"](b.append)),
            a.unbind("focus", this._showDatepicker),
            b.trigger && b.trigger.remove();
            var e = this._get(b, "showOn");
            (e == "focus" || e == "both") && a.focus(this._showDatepicker);
            if (e == "button" || e == "both") {
                var f = this._get(b, "buttonText")
                  , g = this._get(b, "buttonImage");
                b.trigger = $(this._get(b, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: g,
                    alt: f,
                    title: f
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(g == "" ? f : $("<img/>").attr({
                    src: g,
                    alt: f,
                    title: f
                }))),
                a[d ? "before" : "after"](b.trigger),
                b.trigger.click(function() {
                    return $.datepicker._datepickerShowing && $.datepicker._lastInput == a[0] ? $.datepicker._hideDatepicker() : $.datepicker._datepickerShowing && $.datepicker._lastInput != a[0] ? ($.datepicker._hideDatepicker(),
                    $.datepicker._showDatepicker(a[0])) : $.datepicker._showDatepicker(a[0]),
                    !1
                })
            }
        },
        _autoSize: function(a) {
            if (this._get(a, "autoSize") && !a.inline) {
                var b = new Date(2009,11,20)
                  , c = this._get(a, "dateFormat");
                if (c.match(/[DM]/)) {
                    var d = function(a) {
                        var b = 0
                          , c = 0;
                        for (var d = 0; d < a.length; d++)
                            a[d].length > b && (b = a[d].length,
                            c = d);
                        return c
                    };
                    b.setMonth(d(this._get(a, c.match(/MM/) ? "monthNames" : "monthNamesShort"))),
                    b.setDate(d(this._get(a, c.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - b.getDay())
                }
                a.input.attr("size", this._formatDate(a, b).length)
            }
        },
        _inlineDatepicker: function(a, b) {
            var c = $(a);
            if (c.hasClass(this.markerClassName))
                return;
            c.addClass(this.markerClassName).append(b.dpDiv).bind("setData.datepicker", function(a, c, d) {
                b.settings[c] = d
            }).bind("getData.datepicker", function(a, c) {
                return this._get(b, c)
            }),
            $.data(a, PROP_NAME, b),
            this._setDate(b, this._getDefaultDate(b), !0),
            this._updateDatepicker(b),
            this._updateAlternate(b),
            b.settings.disabled && this._disableDatepicker(a),
            b.dpDiv.css("display", "block")
        },
        _dialogDatepicker: function(a, b, c, d, e) {
            var f = this._dialogInst;
            if (!f) {
                this.uuid += 1;
                var g = "dp" + this.uuid;
                this._dialogInput = $('<input type="text" id="' + g + '" style="position: absolute; top: -100px; width: 0px;"/>'),
                this._dialogInput.keydown(this._doKeyDown),
                $("body").append(this._dialogInput),
                f = this._dialogInst = this._newInst(this._dialogInput, !1),
                f.settings = {},
                $.data(this._dialogInput[0], PROP_NAME, f)
            }
            extendRemove(f.settings, d || {}),
            b = b && b.constructor == Date ? this._formatDate(f, b) : b,
            this._dialogInput.val(b),
            this._pos = e ? e.length ? e : [e.pageX, e.pageY] : null;
            if (!this._pos) {
                var h = document.documentElement.clientWidth
                  , i = document.documentElement.clientHeight
                  , j = document.documentElement.scrollLeft || document.body.scrollLeft
                  , k = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [h / 2 - 100 + j, i / 2 - 150 + k]
            }
            return this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"),
            f.settings.onSelect = c,
            this._inDialog = !0,
            this.dpDiv.addClass(this._dialogClass),
            this._showDatepicker(this._dialogInput[0]),
            $.blockUI && $.blockUI(this.dpDiv),
            $.data(this._dialogInput[0], PROP_NAME, f),
            this
        },
        _destroyDatepicker: function(a) {
            var b = $(a)
              , c = $.data(a, PROP_NAME);
            if (!b.hasClass(this.markerClassName))
                return;
            var d = a.nodeName.toLowerCase();
            $.removeData(a, PROP_NAME),
            d == "input" ? (c.append.remove(),
            c.trigger.remove(),
            b.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : (d == "div" || d == "span") && b.removeClass(this.markerClassName).empty()
        },
        _enableDatepicker: function(a) {
            var b = $(a)
              , c = $.data(a, PROP_NAME);
            if (!b.hasClass(this.markerClassName))
                return;
            var d = a.nodeName.toLowerCase();
            if (d == "input")
                a.disabled = !1,
                c.trigger.filter("button").each(function() {
                    this.disabled = !1
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                });
            else if (d == "div" || d == "span") {
                var e = b.children("." + this._inlineClass);
                e.children().removeClass("ui-state-disabled"),
                e.find("select.ui-datepicker-month, select.ui-datepicker-year").removeAttr("disabled")
            }
            this._disabledInputs = $.map(this._disabledInputs, function(b) {
                return b == a ? null : b
            })
        },
        _disableDatepicker: function(a) {
            var b = $(a)
              , c = $.data(a, PROP_NAME);
            if (!b.hasClass(this.markerClassName))
                return;
            var d = a.nodeName.toLowerCase();
            if (d == "input")
                a.disabled = !0,
                c.trigger.filter("button").each(function() {
                    this.disabled = !0
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                });
            else if (d == "div" || d == "span") {
                var e = b.children("." + this._inlineClass);
                e.children().addClass("ui-state-disabled"),
                e.find("select.ui-datepicker-month, select.ui-datepicker-year").attr("disabled", "disabled")
            }
            this._disabledInputs = $.map(this._disabledInputs, function(b) {
                return b == a ? null : b
            }),
            this._disabledInputs[this._disabledInputs.length] = a
        },
        _isDisabledDatepicker: function(a) {
            if (!a)
                return !1;
            for (var b = 0; b < this._disabledInputs.length; b++)
                if (this._disabledInputs[b] == a)
                    return !0;
            return !1
        },
        _getInst: function(a) {
            try {
                return $.data(a, PROP_NAME)
            } catch (b) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(a, b, c) {
            var d = this._getInst(a);
            if (arguments.length == 2 && typeof b == "string")
                return b == "defaults" ? $.extend({}, $.datepicker._defaults) : d ? b == "all" ? $.extend({}, d.settings) : this._get(d, b) : null;
            var e = b || {};
            typeof b == "string" && (e = {},
            e[b] = c);
            if (d) {
                this._curInst == d && this._hideDatepicker();
                var f = this._getDateDatepicker(a, !0)
                  , g = this._getMinMaxDate(d, "min")
                  , h = this._getMinMaxDate(d, "max");
                extendRemove(d.settings, e),
                g !== null && e.dateFormat !== undefined && e.minDate === undefined && (d.settings.minDate = this._formatDate(d, g)),
                h !== null && e.dateFormat !== undefined && e.maxDate === undefined && (d.settings.maxDate = this._formatDate(d, h)),
                this._attachments($(a), d),
                this._autoSize(d),
                this._setDate(d, f),
                this._updateAlternate(d),
                this._updateDatepicker(d)
            }
        },
        _changeDatepicker: function(a, b, c) {
            this._optionDatepicker(a, b, c)
        },
        _refreshDatepicker: function(a) {
            var b = this._getInst(a);
            b && this._updateDatepicker(b)
        },
        _setDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            c && (this._setDate(c, b),
            this._updateDatepicker(c),
            this._updateAlternate(c))
        },
        _getDateDatepicker: function(a, b) {
            var c = this._getInst(a);
            return c && !c.inline && this._setDateFromField(c, b),
            c ? this._getDate(c) : null
        },
        _doKeyDown: function(a) {
            var b = $.datepicker._getInst(a.target)
              , c = !0
              , d = b.dpDiv.is(".ui-datepicker-rtl");
            b._keyEvent = !0;
            if ($.datepicker._datepickerShowing)
                switch (a.keyCode) {
                case 9:
                    $.datepicker._hideDatepicker(),
                    c = !1;
                    break;
                case 13:
                    var e = $("td." + $.datepicker._dayOverClass + ":not(." + $.datepicker._currentClass + ")", b.dpDiv);
                    e[0] && $.datepicker._selectDay(a.target, b.selectedMonth, b.selectedYear, e[0]);
                    var f = $.datepicker._get(b, "onSelect");
                    if (f) {
                        var g = $.datepicker._formatDate(b);
                        f.apply(b.input ? b.input[0] : null, [g, b])
                    } else
                        $.datepicker._hideDatepicker();
                    return !1;
                case 27:
                    $.datepicker._hideDatepicker();
                    break;
                case 33:
                    $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M");
                    break;
                case 34:
                    $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M");
                    break;
                case 35:
                    (a.ctrlKey || a.metaKey) && $.datepicker._clearDate(a.target),
                    c = a.ctrlKey || a.metaKey;
                    break;
                case 36:
                    (a.ctrlKey || a.metaKey) && $.datepicker._gotoToday(a.target),
                    c = a.ctrlKey || a.metaKey;
                    break;
                case 37:
                    (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? 1 : -1, "D"),
                    c = a.ctrlKey || a.metaKey,
                    a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? -$.datepicker._get(b, "stepBigMonths") : -$.datepicker._get(b, "stepMonths"), "M");
                    break;
                case 38:
                    (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, -7, "D"),
                    c = a.ctrlKey || a.metaKey;
                    break;
                case 39:
                    (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, d ? -1 : 1, "D"),
                    c = a.ctrlKey || a.metaKey,
                    a.originalEvent.altKey && $.datepicker._adjustDate(a.target, a.ctrlKey ? +$.datepicker._get(b, "stepBigMonths") : +$.datepicker._get(b, "stepMonths"), "M");
                    break;
                case 40:
                    (a.ctrlKey || a.metaKey) && $.datepicker._adjustDate(a.target, 7, "D"),
                    c = a.ctrlKey || a.metaKey;
                    break;
                default:
                    c = !1
                }
            else
                a.keyCode == 36 && a.ctrlKey ? $.datepicker._showDatepicker(this) : c = !1;
            c && (a.preventDefault(),
            a.stopPropagation())
        },
        _doKeyPress: function(a) {
            var b = $.datepicker._getInst(a.target);
            if ($.datepicker._get(b, "constrainInput")) {
                var c = $.datepicker._possibleChars($.datepicker._get(b, "dateFormat"))
                  , d = String.fromCharCode(a.charCode == undefined ? a.keyCode : a.charCode);
                return a.ctrlKey || a.metaKey || d < " " || !c || c.indexOf(d) > -1
            }
        },
        _doKeyUp: function(a) {
            var b = $.datepicker._getInst(a.target);
            if (b.input.val() != b.lastVal)
                try {
                    var c = $.datepicker.parseDate($.datepicker._get(b, "dateFormat"), b.input ? b.input.val() : null, $.datepicker._getFormatConfig(b));
                    c && ($.datepicker._setDateFromField(b),
                    $.datepicker._updateAlternate(b),
                    $.datepicker._updateDatepicker(b))
                } catch (d) {
                    $.datepicker.log(d)
                }
            return !0
        },
        _showDatepicker: function(a) {
            a = a.target || a,
            a.nodeName.toLowerCase() != "input" && (a = $("input", a.parentNode)[0]);
            if ($.datepicker._isDisabledDatepicker(a) || $.datepicker._lastInput == a)
                return;
            var b = $.datepicker._getInst(a);
            $.datepicker._curInst && $.datepicker._curInst != b && ($.datepicker._curInst.dpDiv.stop(!0, !0),
            b && $.datepicker._datepickerShowing && $.datepicker._hideDatepicker($.datepicker._curInst.input[0]));
            var c = $.datepicker._get(b, "beforeShow")
              , d = c ? c.apply(a, [a, b]) : {};
            if (d === !1)
                return;
            extendRemove(b.settings, d),
            b.lastVal = null,
            $.datepicker._lastInput = a,
            $.datepicker._setDateFromField(b),
            $.datepicker._inDialog && (a.value = ""),
            $.datepicker._pos || ($.datepicker._pos = $.datepicker._findPos(a),
            $.datepicker._pos[1] += a.offsetHeight);
            var e = !1;
            $(a).parents().each(function() {
                return e |= $(this).css("position") == "fixed",
                !e
            }),
            e && $.browser.opera && ($.datepicker._pos[0] -= document.documentElement.scrollLeft,
            $.datepicker._pos[1] -= document.documentElement.scrollTop);
            var f = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null,
            b.dpDiv.empty(),
            b.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            }),
            $.datepicker._updateDatepicker(b),
            f = $.datepicker._checkOffset(b, f, e),
            b.dpDiv.css({
                position: $.datepicker._inDialog && $.blockUI ? "static" : e ? "fixed" : "absolute",
                display: "none",
                left: f.left + "px",
                top: f.top + "px"
            });
            if (!b.inline) {
                var g = $.datepicker._get(b, "showAnim")
                  , h = $.datepicker._get(b, "duration")
                  , i = function() {
                    var a = b.dpDiv.find("iframe.ui-datepicker-cover");
                    if (!!a.length) {
                        var c = $.datepicker._getBorders(b.dpDiv);
                        a.css({
                            left: -c[0],
                            top: -c[1],
                            width: b.dpDiv.outerWidth(),
                            height: b.dpDiv.outerHeight()
                        })
                    }
                };
                b.dpDiv.zIndex($(a).zIndex() + 1),
                $.datepicker._datepickerShowing = !0,
                $.effects && $.effects[g] ? b.dpDiv.show(g, $.datepicker._get(b, "showOptions"), h, i) : b.dpDiv[g || "show"](g ? h : null, i),
                (!g || !h) && i(),
                b.input.is(":visible") && !b.input.is(":disabled") && b.input.focus(),
                $.datepicker._curInst = b
            }
        },
        _updateDatepicker: function(a) {
            var b = this;
            b.maxRows = 4;
            var c = $.datepicker._getBorders(a.dpDiv);
            instActive = a,
            a.dpDiv.empty().append(this._generateHTML(a)),
            this._attachHandlers(a);
            var d = a.dpDiv.find("iframe.ui-datepicker-cover");
            !d.length || d.css({
                left: -c[0],
                top: -c[1],
                width: a.dpDiv.outerWidth(),
                height: a.dpDiv.outerHeight()
            }),
            a.dpDiv.find("." + this._dayOverClass + " a").mouseover();
            var e = this._getNumberOfMonths(a)
              , f = e[1]
              , g = 17;
            a.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),
            f > 1 && a.dpDiv.addClass("ui-datepicker-multi-" + f).css("width", g * f + "em"),
            a.dpDiv[(e[0] != 1 || e[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi"),
            a.dpDiv[(this._get(a, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"),
            a == $.datepicker._curInst && $.datepicker._datepickerShowing && a.input && a.input.is(":visible") && !a.input.is(":disabled") && a.input[0] != document.activeElement && a.input.focus();
            if (a.yearshtml) {
                var h = a.yearshtml;
                setTimeout(function() {
                    h === a.yearshtml && a.yearshtml && a.dpDiv.find("select.ui-datepicker-year:first").replaceWith(a.yearshtml),
                    h = a.yearshtml = null
                }, 0)
            }
        },
        _getBorders: function(a) {
            var b = function(a) {
                return {
                    thin: 1,
                    medium: 2,
                    thick: 3
                }[a] || a
            };
            return [parseFloat(b(a.css("border-left-width"))), parseFloat(b(a.css("border-top-width")))]
        },
        _checkOffset: function(a, b, c) {
            var d = a.dpDiv.outerWidth()
              , e = a.dpDiv.outerHeight()
              , f = a.input ? a.input.outerWidth() : 0
              , g = a.input ? a.input.outerHeight() : 0
              , h = document.documentElement.clientWidth + (c ? 0 : $(document).scrollLeft())
              , i = document.documentElement.clientHeight + (c ? 0 : $(document).scrollTop());
            return b.left -= this._get(a, "isRTL") ? d - f : 0,
            b.left -= c && b.left == a.input.offset().left ? $(document).scrollLeft() : 0,
            b.top -= c && b.top == a.input.offset().top + g ? $(document).scrollTop() : 0,
            b.left -= Math.min(b.left, b.left + d > h && h > d ? Math.abs(b.left + d - h) : 0),
            b.top -= Math.min(b.top, b.top + e > i && i > e ? Math.abs(e + g) : 0),
            b
        },
        _findPos: function(a) {
            var b = this._getInst(a)
              , c = this._get(b, "isRTL");
            while (a && (a.type == "hidden" || a.nodeType != 1 || $.expr.filters.hidden(a)))
                a = a[c ? "previousSibling" : "nextSibling"];
            var d = $(a).offset();
            return [d.left, d.top]
        },
        _hideDatepicker: function(a) {
            var b = this._curInst;
            if (!b || a && b != $.data(a, PROP_NAME))
                return;
            if (this._datepickerShowing) {
                var c = this._get(b, "showAnim")
                  , d = this._get(b, "duration")
                  , e = function() {
                    $.datepicker._tidyDialog(b)
                };
                $.effects && $.effects[c] ? b.dpDiv.hide(c, $.datepicker._get(b, "showOptions"), d, e) : b.dpDiv[c == "slideDown" ? "slideUp" : c == "fadeIn" ? "fadeOut" : "hide"](c ? d : null, e),
                c || e(),
                this._datepickerShowing = !1;
                var f = this._get(b, "onClose");
                f && f.apply(b.input ? b.input[0] : null, [b.input ? b.input.val() : "", b]),
                this._lastInput = null,
                this._inDialog && (this._dialogInput.css({
                    position: "absolute",
                    left: "0",
                    top: "-100px"
                }),
                $.blockUI && ($.unblockUI(),
                $("body").append(this.dpDiv))),
                this._inDialog = !1
            }
        },
        _tidyDialog: function(a) {
            a.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(a) {
            if (!$.datepicker._curInst)
                return;
            var b = $(a.target)
              , c = $.datepicker._getInst(b[0]);
            (b[0].id != $.datepicker._mainDivId && b.parents("#" + $.datepicker._mainDivId).length == 0 && !b.hasClass($.datepicker.markerClassName) && !b.closest("." + $.datepicker._triggerClass).length && $.datepicker._datepickerShowing && (!$.datepicker._inDialog || !$.blockUI) || b.hasClass($.datepicker.markerClassName) && $.datepicker._curInst != c) && $.datepicker._hideDatepicker()
        },
        _adjustDate: function(a, b, c) {
            var d = $(a)
              , e = this._getInst(d[0]);
            if (this._isDisabledDatepicker(d[0]))
                return;
            this._adjustInstDate(e, b + (c == "M" ? this._get(e, "showCurrentAtPos") : 0), c),
            this._updateDatepicker(e)
        },
        _gotoToday: function(a) {
            var b = $(a)
              , c = this._getInst(b[0]);
            if (this._get(c, "gotoCurrent") && c.currentDay)
                c.selectedDay = c.currentDay,
                c.drawMonth = c.selectedMonth = c.currentMonth,
                c.drawYear = c.selectedYear = c.currentYear;
            else {
                var d = new Date;
                c.selectedDay = d.getDate(),
                c.drawMonth = c.selectedMonth = d.getMonth(),
                c.drawYear = c.selectedYear = d.getFullYear()
            }
            this._notifyChange(c),
            this._adjustDate(b)
        },
        _selectMonthYear: function(a, b, c) {
            var d = $(a)
              , e = this._getInst(d[0]);
            e["selected" + (c == "M" ? "Month" : "Year")] = e["draw" + (c == "M" ? "Month" : "Year")] = parseInt(b.options[b.selectedIndex].value, 10),
            this._notifyChange(e),
            this._adjustDate(d)
        },
        _selectDay: function(a, b, c, d) {
            var e = $(a);
            if ($(d).hasClass(this._unselectableClass) || this._isDisabledDatepicker(e[0]))
                return;
            var f = this._getInst(e[0]);
            f.selectedDay = f.currentDay = $("a", d).html(),
            f.selectedMonth = f.currentMonth = b,
            f.selectedYear = f.currentYear = c,
            this._selectDate(a, this._formatDate(f, f.currentDay, f.currentMonth, f.currentYear))
        },
        _clearDate: function(a) {
            var b = $(a)
              , c = this._getInst(b[0]);
            this._selectDate(b, "")
        },
        _selectDate: function(a, b) {
            var c = $(a)
              , d = this._getInst(c[0]);
            b = b != null ? b : this._formatDate(d),
            d.input && d.input.val(b),
            this._updateAlternate(d);
            var e = this._get(d, "onSelect");
            e ? e.apply(d.input ? d.input[0] : null, [b, d]) : d.input && d.input.trigger("change"),
            d.inline ? this._updateDatepicker(d) : (this._hideDatepicker(),
            this._lastInput = d.input[0],
            typeof d.input[0] != "object" && d.input.focus(),
            this._lastInput = null)
        },
        _updateAlternate: function(a) {
            var b = this._get(a, "altField");
            if (b) {
                var c = this._get(a, "altFormat") || this._get(a, "dateFormat")
                  , d = this._getDate(a)
                  , e = this.formatDate(c, d, this._getFormatConfig(a));
                $(b).each(function() {
                    $(this).val(e)
                })
            }
        },
        noWeekends: function(a) {
            var b = a.getDay();
            return [b > 0 && b < 6, ""]
        },
        iso8601Week: function(a) {
            var b = new Date(a.getTime());
            b.setDate(b.getDate() + 4 - (b.getDay() || 7));
            var c = b.getTime();
            return b.setMonth(0),
            b.setDate(1),
            Math.floor(Math.round((c - b) / 864e5) / 7) + 1
        },
        parseDate: function(a, b, c) {
            if (a == null || b == null)
                throw "Invalid arguments";
            b = typeof b == "object" ? b.toString() : b + "";
            if (b == "")
                return null;
            var d = (c ? c.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            d = typeof d != "string" ? d : (new Date).getFullYear() % 100 + parseInt(d, 10);
            var e = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort
              , f = (c ? c.dayNames : null) || this._defaults.dayNames
              , g = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort
              , h = (c ? c.monthNames : null) || this._defaults.monthNames
              , i = -1
              , j = -1
              , k = -1
              , l = -1
              , m = !1
              , n = function(b) {
                var c = s + 1 < a.length && a.charAt(s + 1) == b;
                return c && s++,
                c
            }
              , o = function(a) {
                var c = n(a)
                  , d = a == "@" ? 14 : a == "!" ? 20 : a == "y" && c ? 4 : a == "o" ? 3 : 2
                  , e = new RegExp("^\\d{1," + d + "}")
                  , f = b.substring(r).match(e);
                if (!f)
                    throw "Missing number at position " + r;
                return r += f[0].length,
                parseInt(f[0], 10)
            }
              , p = function(a, c, d) {
                var e = $.map(n(a) ? d : c, function(a, b) {
                    return [[b, a]]
                }).sort(function(a, b) {
                    return -(a[1].length - b[1].length)
                })
                  , f = -1;
                $.each(e, function(a, c) {
                    var d = c[1];
                    if (b.substr(r, d.length).toLowerCase() == d.toLowerCase())
                        return f = c[0],
                        r += d.length,
                        !1
                });
                if (f != -1)
                    return f + 1;
                throw "Unknown name at position " + r
            }
              , q = function() {
                if (b.charAt(r) != a.charAt(s))
                    throw "Unexpected literal at position " + r;
                r++
            }
              , r = 0;
            for (var s = 0; s < a.length; s++)
                if (m)
                    a.charAt(s) == "'" && !n("'") ? m = !1 : q();
                else
                    switch (a.charAt(s)) {
                    case "d":
                        k = o("d");
                        break;
                    case "D":
                        p("D", e, f);
                        break;
                    case "o":
                        l = o("o");
                        break;
                    case "m":
                        j = o("m");
                        break;
                    case "M":
                        j = p("M", g, h);
                        break;
                    case "y":
                        i = o("y");
                        break;
                    case "@":
                        var t = new Date(o("@"));
                        i = t.getFullYear(),
                        j = t.getMonth() + 1,
                        k = t.getDate();
                        break;
                    case "!":
                        var t = new Date((o("!") - this._ticksTo1970) / 1e4);
                        i = t.getFullYear(),
                        j = t.getMonth() + 1,
                        k = t.getDate();
                        break;
                    case "'":
                        n("'") ? q() : m = !0;
                        break;
                    default:
                        q()
                    }
            if (r < b.length)
                throw "Extra/unparsed characters found in date: " + b.substring(r);
            i == -1 ? i = (new Date).getFullYear() : i < 100 && (i += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (i <= d ? 0 : -100));
            if (l > -1) {
                j = 1,
                k = l;
                do {
                    var u = this._getDaysInMonth(i, j - 1);
                    if (k <= u)
                        break;
                    j++,
                    k -= u
                } while (!0)
            }
            var t = this._daylightSavingAdjust(new Date(i,j - 1,k));
            if (t.getFullYear() != i || t.getMonth() + 1 != j || t.getDate() != k)
                throw "Invalid date";
            return t
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 24 * 60 * 60 * 1e7,
        formatDate: function(a, b, c) {
            if (!b)
                return "";
            var d = (c ? c.dayNamesShort : null) || this._defaults.dayNamesShort
              , e = (c ? c.dayNames : null) || this._defaults.dayNames
              , f = (c ? c.monthNamesShort : null) || this._defaults.monthNamesShort
              , g = (c ? c.monthNames : null) || this._defaults.monthNames
              , h = function(b) {
                var c = m + 1 < a.length && a.charAt(m + 1) == b;
                return c && m++,
                c
            }
              , i = function(a, b, c) {
                var d = "" + b;
                if (h(a))
                    while (d.length < c)
                        d = "0" + d;
                return d
            }
              , j = function(a, b, c, d) {
                return h(a) ? d[b] : c[b]
            }
              , k = ""
              , l = !1;
            if (b)
                for (var m = 0; m < a.length; m++)
                    if (l)
                        a.charAt(m) == "'" && !h("'") ? l = !1 : k += a.charAt(m);
                    else
                        switch (a.charAt(m)) {
                        case "d":
                            k += i("d", b.getDate(), 2);
                            break;
                        case "D":
                            k += j("D", b.getDay(), d, e);
                            break;
                        case "o":
                            k += i("o", Math.round(((new Date(b.getFullYear(),b.getMonth(),b.getDate())).getTime() - (new Date(b.getFullYear(),0,0)).getTime()) / 864e5), 3);
                            break;
                        case "m":
                            k += i("m", b.getMonth() + 1, 2);
                            break;
                        case "M":
                            k += j("M", b.getMonth(), f, g);
                            break;
                        case "y":
                            k += h("y") ? b.getFullYear() : (b.getYear() % 100 < 10 ? "0" : "") + b.getYear() % 100;
                            break;
                        case "@":
                            k += b.getTime();
                            break;
                        case "!":
                            k += b.getTime() * 1e4 + this._ticksTo1970;
                            break;
                        case "'":
                            h("'") ? k += "'" : l = !0;
                            break;
                        default:
                            k += a.charAt(m)
                        }
            return k
        },
        _possibleChars: function(a) {
            var b = ""
              , c = !1
              , d = function(b) {
                var c = e + 1 < a.length && a.charAt(e + 1) == b;
                return c && e++,
                c
            };
            for (var e = 0; e < a.length; e++)
                if (c)
                    a.charAt(e) == "'" && !d("'") ? c = !1 : b += a.charAt(e);
                else
                    switch (a.charAt(e)) {
                    case "d":
                    case "m":
                    case "y":
                    case "@":
                        b += "0123456789";
                        break;
                    case "D":
                    case "M":
                        return null;
                    case "'":
                        d("'") ? b += "'" : c = !0;
                        break;
                    default:
                        b += a.charAt(e)
                    }
            return b
        },
        _get: function(a, b) {
            return a.settings[b] !== undefined ? a.settings[b] : this._defaults[b]
        },
        _setDateFromField: function(a, b) {
            if (a.input.val() == a.lastVal)
                return;
            var c = this._get(a, "dateFormat"), d = a.lastVal = a.input ? a.input.val() : null, e, f;
            e = f = this._getDefaultDate(a);
            var g = this._getFormatConfig(a);
            try {
                e = this.parseDate(c, d, g) || f
            } catch (h) {
                this.log(h),
                d = b ? "" : d
            }
            a.selectedDay = e.getDate(),
            a.drawMonth = a.selectedMonth = e.getMonth(),
            a.drawYear = a.selectedYear = e.getFullYear(),
            a.currentDay = d ? e.getDate() : 0,
            a.currentMonth = d ? e.getMonth() : 0,
            a.currentYear = d ? e.getFullYear() : 0,
            this._adjustInstDate(a)
        },
        _getDefaultDate: function(a) {
            return this._restrictMinMax(a, this._determineDate(a, this._get(a, "defaultDate"), new Date))
        },
        _determineDate: function(a, b, c) {
            var d = function(a) {
                var b = new Date;
                return b.setDate(b.getDate() + a),
                b
            }
              , e = function(b) {
                try {
                    return $.datepicker.parseDate($.datepicker._get(a, "dateFormat"), b, $.datepicker._getFormatConfig(a))
                } catch (c) {}
                var d = (b.toLowerCase().match(/^c/) ? $.datepicker._getDate(a) : null) || new Date
                  , e = d.getFullYear()
                  , f = d.getMonth()
                  , g = d.getDate()
                  , h = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g
                  , i = h.exec(b);
                while (i) {
                    switch (i[2] || "d") {
                    case "d":
                    case "D":
                        g += parseInt(i[1], 10);
                        break;
                    case "w":
                    case "W":
                        g += parseInt(i[1], 10) * 7;
                        break;
                    case "m":
                    case "M":
                        f += parseInt(i[1], 10),
                        g = Math.min(g, $.datepicker._getDaysInMonth(e, f));
                        break;
                    case "y":
                    case "Y":
                        e += parseInt(i[1], 10),
                        g = Math.min(g, $.datepicker._getDaysInMonth(e, f))
                    }
                    i = h.exec(b)
                }
                return new Date(e,f,g)
            }
              , f = b == null || b === "" ? c : typeof b == "string" ? e(b) : typeof b == "number" ? isNaN(b) ? c : d(b) : new Date(b.getTime());
            return f = f && f.toString() == "Invalid Date" ? c : f,
            f && (f.setHours(0),
            f.setMinutes(0),
            f.setSeconds(0),
            f.setMilliseconds(0)),
            this._daylightSavingAdjust(f)
        },
        _daylightSavingAdjust: function(a) {
            return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0),
            a) : null
        },
        _setDate: function(a, b, c) {
            var d = !b
              , e = a.selectedMonth
              , f = a.selectedYear
              , g = this._restrictMinMax(a, this._determineDate(a, b, new Date));
            a.selectedDay = a.currentDay = g.getDate(),
            a.drawMonth = a.selectedMonth = a.currentMonth = g.getMonth(),
            a.drawYear = a.selectedYear = a.currentYear = g.getFullYear(),
            (e != a.selectedMonth || f != a.selectedYear) && !c && this._notifyChange(a),
            this._adjustInstDate(a),
            a.input && a.input.val(d ? "" : this._formatDate(a))
        },
        _getDate: function(a) {
            var b = !a.currentYear || a.input && a.input.val() == "" ? null : this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));
            return b
        },
        _attachHandlers: function(a) {
            var b = this._get(a, "stepMonths")
              , c = "#" + a.id.replace(/\\\\/g, "\\");
            a.dpDiv.find("[data-handler]").map(function() {
                var a = {
                    prev: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(c, -b, "M")
                    },
                    next: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._adjustDate(c, +b, "M")
                    },
                    hide: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._hideDatepicker()
                    },
                    today: function() {
                        window["DP_jQuery_" + dpuuid].datepicker._gotoToday(c)
                    },
                    selectDay: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectDay(c, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this),
                        !1
                    },
                    selectMonth: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(c, this, "M"),
                        !1
                    },
                    selectYear: function() {
                        return window["DP_jQuery_" + dpuuid].datepicker._selectMonthYear(c, this, "Y"),
                        !1
                    }
                };
                $(this).bind(this.getAttribute("data-event"), a[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function(a) {
            var b = new Date;
            b = this._daylightSavingAdjust(new Date(b.getFullYear(),b.getMonth(),b.getDate()));
            var c = this._get(a, "isRTL")
              , d = this._get(a, "showButtonPanel")
              , e = this._get(a, "hideIfNoPrevNext")
              , f = this._get(a, "navigationAsDateFormat")
              , g = this._getNumberOfMonths(a)
              , h = this._get(a, "showCurrentAtPos")
              , i = this._get(a, "stepMonths")
              , j = g[0] != 1 || g[1] != 1
              , k = this._daylightSavingAdjust(a.currentDay ? new Date(a.currentYear,a.currentMonth,a.currentDay) : new Date(9999,9,9))
              , l = this._getMinMaxDate(a, "min")
              , m = this._getMinMaxDate(a, "max")
              , n = a.drawMonth - h
              , o = a.drawYear;
            n < 0 && (n += 12,
            o--);
            if (m) {
                var p = this._daylightSavingAdjust(new Date(m.getFullYear(),m.getMonth() - g[0] * g[1] + 1,m.getDate()));
                p = l && p < l ? l : p;
                while (this._daylightSavingAdjust(new Date(o,n,1)) > p)
                    n--,
                    n < 0 && (n = 11,
                    o--)
            }
            a.drawMonth = n,
            a.drawYear = o;
            var q = this._get(a, "prevText");
            q = f ? this.formatDate(q, this._daylightSavingAdjust(new Date(o,n - i,1)), this._getFormatConfig(a)) : q;
            var r = this._canAdjustMonth(a, -1, o, n) ? '<a class="ui-datepicker-prev ui-corner-all" data-handler="prev" data-event="click" title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>" : e ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + q + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "e" : "w") + '">' + q + "</span></a>"
              , s = this._get(a, "nextText");
            s = f ? this.formatDate(s, this._daylightSavingAdjust(new Date(o,n + i,1)), this._getFormatConfig(a)) : s;
            var t = this._canAdjustMonth(a, 1, o, n) ? '<a class="ui-datepicker-next ui-corner-all" data-handler="next" data-event="click" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>" : e ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + s + '"><span class="ui-icon ui-icon-circle-triangle-' + (c ? "w" : "e") + '">' + s + "</span></a>"
              , u = this._get(a, "currentText")
              , v = this._get(a, "gotoCurrent") && a.currentDay ? k : b;
            u = f ? this.formatDate(u, v, this._getFormatConfig(a)) : u;
            var w = a.inline ? "" : '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" data-handler="hide" data-event="click">' + this._get(a, "closeText") + "</button>"
              , x = d ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (c ? w : "") + (this._isInRange(a, v) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" data-handler="today" data-event="click">' + u + "</button>" : "") + (c ? "" : w) + "</div>" : ""
              , y = parseInt(this._get(a, "firstDay"), 10);
            y = isNaN(y) ? 0 : y;
            var z = this._get(a, "showWeek")
              , A = this._get(a, "dayNames")
              , B = this._get(a, "dayNamesShort")
              , C = this._get(a, "dayNamesMin")
              , D = this._get(a, "monthNames")
              , E = this._get(a, "monthNamesShort")
              , F = this._get(a, "beforeShowDay")
              , G = this._get(a, "showOtherMonths")
              , H = this._get(a, "selectOtherMonths")
              , I = this._get(a, "calculateWeek") || this.iso8601Week
              , J = this._getDefaultDate(a)
              , K = "";
            for (var L = 0; L < g[0]; L++) {
                var M = "";
                this.maxRows = 4;
                for (var N = 0; N < g[1]; N++) {
                    var O = this._daylightSavingAdjust(new Date(o,n,a.selectedDay))
                      , P = " ui-corner-all"
                      , Q = "";
                    if (j) {
                        Q += '<div class="ui-datepicker-group';
                        if (g[1] > 1)
                            switch (N) {
                            case 0:
                                Q += " ui-datepicker-group-first",
                                P = " ui-corner-" + (c ? "right" : "left");
                                break;
                            case g[1] - 1:
                                Q += " ui-datepicker-group-last",
                                P = " ui-corner-" + (c ? "left" : "right");
                                break;
                            default:
                                Q += " ui-datepicker-group-middle",
                                P = ""
                            }
                        Q += '">'
                    }
                    Q += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + P + '">' + (/all|left/.test(P) && L == 0 ? c ? t : r : "") + (/all|right/.test(P) && L == 0 ? c ? r : t : "") + this._generateMonthYearHeader(a, n, o, l, m, L > 0 || N > 0, D, E) + '</div><table class="ui-datepicker-calendar"><thead>' + "<tr>";
                    var R = z ? '<th class="ui-datepicker-week-col">' + this._get(a, "weekHeader") + "</th>" : "";
                    for (var S = 0; S < 7; S++) {
                        var T = (S + y) % 7;
                        R += "<th" + ((S + y + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + ">" + '<span title="' + A[T] + '">' + C[T] + "</span></th>"
                    }
                    Q += R + "</tr></thead><tbody>";
                    var U = this._getDaysInMonth(o, n);
                    o == a.selectedYear && n == a.selectedMonth && (a.selectedDay = Math.min(a.selectedDay, U));
                    var V = (this._getFirstDayOfMonth(o, n) - y + 7) % 7
                      , W = Math.ceil((V + U) / 7)
                      , X = j ? this.maxRows > W ? this.maxRows : W : W;
                    this.maxRows = X;
                    var Y = this._daylightSavingAdjust(new Date(o,n,1 - V));
                    for (var Z = 0; Z < X; Z++) {
                        Q += "<tr>";
                        var _ = z ? '<td class="ui-datepicker-week-col">' + this._get(a, "calculateWeek")(Y) + "</td>" : "";
                        for (var S = 0; S < 7; S++) {
                            var ba = F ? F.apply(a.input ? a.input[0] : null, [Y]) : [!0, ""]
                              , bb = Y.getMonth() != n
                              , bc = bb && !H || !ba[0] || l && Y < l || m && Y > m;
                            _ += '<td class="' + ((S + y + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (bb ? " ui-datepicker-other-month" : "") + (Y.getTime() == O.getTime() && n == a.selectedMonth && a._keyEvent || J.getTime() == Y.getTime() && J.getTime() == O.getTime() ? " " + this._dayOverClass : "") + (bc ? " " + this._unselectableClass + " ui-state-disabled" : "") + (bb && !G ? "" : " " + ba[1] + (Y.getTime() == k.getTime() ? " " + this._currentClass : "") + (Y.getTime() == b.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!bb || G) && ba[2] ? ' title="' + ba[2] + '"' : "") + (bc ? "" : ' data-handler="selectDay" data-event="click" data-month="' + Y.getMonth() + '" data-year="' + Y.getFullYear() + '"') + ">" + (bb && !G ? "&#xa0;" : bc ? '<span class="ui-state-default">' + Y.getDate() + "</span>" : '<a class="ui-state-default' + (Y.getTime() == b.getTime() ? " ui-state-highlight" : "") + (Y.getTime() == k.getTime() ? " ui-state-active" : "") + (bb ? " ui-priority-secondary" : "") + '" href="#">' + Y.getDate() + "</a>") + "</td>",
                            Y.setDate(Y.getDate() + 1),
                            Y = this._daylightSavingAdjust(Y)
                        }
                        Q += _ + "</tr>"
                    }
                    n++,
                    n > 11 && (n = 0,
                    o++),
                    Q += "</tbody></table>" + (j ? "</div>" + (g[0] > 0 && N == g[1] - 1 ? '<div class="ui-datepicker-row-break"></div>' : "") : ""),
                    M += Q
                }
                K += M
            }
            return K += x + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !a.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : ""),
            a._keyEvent = !1,
            K
        },
        _generateMonthYearHeader: function(a, b, c, d, e, f, g, h) {
            var i = this._get(a, "changeMonth")
              , j = this._get(a, "changeYear")
              , k = this._get(a, "showMonthAfterYear")
              , l = '<div class="ui-datepicker-title">'
              , m = "";
            if (f || !i)
                m += '<span class="ui-datepicker-month">' + g[b] + "</span>";
            else {
                var n = d && d.getFullYear() == c
                  , o = e && e.getFullYear() == c;
                m += '<select class="ui-datepicker-month" data-handler="selectMonth" data-event="change">';
                for (var p = 0; p < 12; p++)
                    (!n || p >= d.getMonth()) && (!o || p <= e.getMonth()) && (m += '<option value="' + p + '"' + (p == b ? ' selected="selected"' : "") + ">" + h[p] + "</option>");
                m += "</select>"
            }
            k || (l += m + (f || !i || !j ? "&#xa0;" : ""));
            if (!a.yearshtml) {
                a.yearshtml = "";
                if (f || !j)
                    l += '<span class="ui-datepicker-year">' + c + "</span>";
                else {
                    var q = this._get(a, "yearRange").split(":")
                      , r = (new Date).getFullYear()
                      , s = function(a) {
                        var b = a.match(/c[+-].*/) ? c + parseInt(a.substring(1), 10) : a.match(/[+-].*/) ? r + parseInt(a, 10) : parseInt(a, 10);
                        return isNaN(b) ? r : b
                    }
                      , t = s(q[0])
                      , u = Math.max(t, s(q[1] || ""));
                    t = d ? Math.max(t, d.getFullYear()) : t,
                    u = e ? Math.min(u, e.getFullYear()) : u,
                    a.yearshtml += '<select class="ui-datepicker-year" data-handler="selectYear" data-event="change">';
                    for (; t <= u; t++)
                        a.yearshtml += '<option value="' + t + '"' + (t == c ? ' selected="selected"' : "") + ">" + t + "</option>";
                    a.yearshtml += "</select>",
                    l += a.yearshtml,
                    a.yearshtml = null
                }
            }
            return l += this._get(a, "yearSuffix"),
            k && (l += (f || !i || !j ? "&#xa0;" : "") + m),
            l += "</div>",
            l
        },
        _adjustInstDate: function(a, b, c) {
            var d = a.drawYear + (c == "Y" ? b : 0)
              , e = a.drawMonth + (c == "M" ? b : 0)
              , f = Math.min(a.selectedDay, this._getDaysInMonth(d, e)) + (c == "D" ? b : 0)
              , g = this._restrictMinMax(a, this._daylightSavingAdjust(new Date(d,e,f)));
            a.selectedDay = g.getDate(),
            a.drawMonth = a.selectedMonth = g.getMonth(),
            a.drawYear = a.selectedYear = g.getFullYear(),
            (c == "M" || c == "Y") && this._notifyChange(a)
        },
        _restrictMinMax: function(a, b) {
            var c = this._getMinMaxDate(a, "min")
              , d = this._getMinMaxDate(a, "max")
              , e = c && b < c ? c : b;
            return e = d && e > d ? d : e,
            e
        },
        _notifyChange: function(a) {
            var b = this._get(a, "onChangeMonthYear");
            b && b.apply(a.input ? a.input[0] : null, [a.selectedYear, a.selectedMonth + 1, a])
        },
        _getNumberOfMonths: function(a) {
            var b = this._get(a, "numberOfMonths");
            return b == null ? [1, 1] : typeof b == "number" ? [1, b] : b
        },
        _getMinMaxDate: function(a, b) {
            return this._determineDate(a, this._get(a, b + "Date"), null)
        },
        _getDaysInMonth: function(a, b) {
            return 32 - this._daylightSavingAdjust(new Date(a,b,32)).getDate()
        },
        _getFirstDayOfMonth: function(a, b) {
            return (new Date(a,b,1)).getDay()
        },
        _canAdjustMonth: function(a, b, c, d) {
            var e = this._getNumberOfMonths(a)
              , f = this._daylightSavingAdjust(new Date(c,d + (b < 0 ? b : e[0] * e[1]),1));
            return b < 0 && f.setDate(this._getDaysInMonth(f.getFullYear(), f.getMonth())),
            this._isInRange(a, f)
        },
        _isInRange: function(a, b) {
            var c = this._getMinMaxDate(a, "min")
              , d = this._getMinMaxDate(a, "max");
            return (!c || b.getTime() >= c.getTime()) && (!d || b.getTime() <= d.getTime())
        },
        _getFormatConfig: function(a) {
            var b = this._get(a, "shortYearCutoff");
            return b = typeof b != "string" ? b : (new Date).getFullYear() % 100 + parseInt(b, 10),
            {
                shortYearCutoff: b,
                dayNamesShort: this._get(a, "dayNamesShort"),
                dayNames: this._get(a, "dayNames"),
                monthNamesShort: this._get(a, "monthNamesShort"),
                monthNames: this._get(a, "monthNames")
            }
        },
        _formatDate: function(a, b, c, d) {
            b || (a.currentDay = a.selectedDay,
            a.currentMonth = a.selectedMonth,
            a.currentYear = a.selectedYear);
            var e = b ? typeof b == "object" ? b : this._daylightSavingAdjust(new Date(d,c,b)) : this._daylightSavingAdjust(new Date(a.currentYear,a.currentMonth,a.currentDay));
            return this.formatDate(this._get(a, "dateFormat"), e, this._getFormatConfig(a))
        }
    }),
    $.fn.datepicker = function(a) {
        if (!this.length)
            return this;
        $.datepicker.initialized || ($(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv),
        $.datepicker.initialized = !0);
        var b = Array.prototype.slice.call(arguments, 1);
        return typeof a != "string" || a != "isDisabled" && a != "getDate" && a != "widget" ? a == "option" && arguments.length == 2 && typeof arguments[1] == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b)) : this.each(function() {
            typeof a == "string" ? $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this].concat(b)) : $.datepicker._attachDatepicker(this, a)
        }) : $.datepicker["_" + a + "Datepicker"].apply($.datepicker, [this[0]].concat(b))
    }
    ,
    $.datepicker = new Datepicker,
    $.datepicker.initialized = !1,
    $.datepicker.uuid = (new Date).getTime(),
    $.datepicker.version = "1.8.24",
    window["DP_jQuery_" + dpuuid] = $
})(jQuery);
;(function(f) {
    var e = 'placeholder'in document.createElement('input')
      , a = 'placeholder'in document.createElement('textarea');
    if (e && a) {
        f.fn.placeholder = function() {
            return this
        }
        ;
        f.fn.placeholder.input = f.fn.placeholder.textarea = true
    } else {
        f.fn.placeholder = function() {
            return this.filter((e ? 'textarea' : ':input') + '[placeholder]').bind('focus.placeholder', b).bind('blur.placeholder', d).trigger('blur.placeholder').end()
        }
        ;
        f.fn.placeholder.input = e;
        f.fn.placeholder.textarea = a;
        f(function() {
            f('form').bind('submit.placeholder', function() {
                var g = f('.placeholder', this).each(b);
                setTimeout(function() {
                    g.each(d)
                }, 10)
            })
        });
        f(window).bind('unload.placeholder', function() {
            f('.placeholder').val('')
        })
    }
    function c(h) {
        var g = {}
          , i = /^jQuery\d+$/;
        f.each(h.attributes, function(k, j) {
            if (j.specified && !i.test(j.name)) {
                g[j.name] = j.value
            }
        });
        return g
    }
    function b() {
        var g = f(this);
        if (g.val() === g.attr('placeholder') && g.hasClass('placeholder')) {
            if (g.data('placeholder-password')) {
                g.hide().next().attr('id', g.removeAttr('id').data('placeholder-id')).show().focus()
            } else {
                g.val('').removeClass('placeholder')
            }
        }
    }
    function d(h) {
        var l, k = f(this), g = k, j = this.id;
        if (k.val() === '') {
            if (k.is(':password')) {
                if (!k.data('placeholder-textinput')) {
                    try {
                        l = k.clone().attr({
                            type: 'text'
                        })
                    } catch (i) {
                        l = f('<input>').attr(f.extend(c(this), {
                            type: 'text'
                        }))
                    }
                    l.removeAttr('name').data('placeholder-password', true).data('placeholder-id', j).bind('focus.placeholder', b);
                    k.data('placeholder-textinput', l).data('placeholder-id', j).before(l)
                }
                k = k.removeAttr('id').hide().prev().attr('id', j).show()
            }
            k.addClass('placeholder').val(k.attr('placeholder'))
        } else {
            k.removeClass('placeholder')
        }
    }
}(jQuery));
function AjaxFacets(query, maxCharacters, replaceDisplayValue) {
    this.query = query;
    this.maxCharacters = maxCharacters;
    this.replaceDisplayValue = replaceDisplayValue;
}
AjaxFacets.prototype.retrieveFilters = function(container, dataServiceUrl, facetName, targetNode, selectType, maxCharacters) {
    var self = this;
    var request = dataServiceUrl + encodeURIComponent(facetName) + "/?path=" + targetNode + "&" + self.query.split("?")[1];
    var filterList = getElementsByClassName(container, 'filter-list');
    if (filterList.length == 0) {
        jQuery.ajax({
            url: request,
            contentType: "application/json",
            success: function(data) {
                self.renderFilters(container, dataServiceUrl, facetName, selectType, data);
            },
            error: function(data) {
                addClass(container, 'no-children');
            }
        });
    }
}
;
AjaxFacets.prototype.renderFilters = function(container, dataServiceUrl, facetName, selectType, filters) {
    var self = this;
    var ol = document.createElement('ol');
    ol.className = 'filter-list hierarchical';
    for (var i = 0; i < filters.length; i++) {
        var filter = filters[i];
        if (selectType == 'checkboxes') {
            var li = self.checkboxModeTemplate(container, dataServiceUrl, facetName, filter);
        } else {
            var li = self.textModeTemplate(container, dataServiceUrl, facetName, filter);
        }
        ol.appendChild(li);
    }
    addClass(ol.children[0], 'first');
    addClass(ol.children[ol.children.length - 1], 'last');
    container.appendChild(ol);
    var f = new Filters();
    f.attachExpandEvent(ol);
    if (filters.length == 0) {
        addClass(container, 'no-children');
    }
}
;
AjaxFacets.prototype.checkboxModeTemplate = function(container, dataServiceUrl, facetName, filter) {
    var li = document.createElement('li');
    li.className = 'filter';
    if (filter['has-more-rel'] == 'true') {
        var expand = document.createElement('span');
        expand.className = 'expand';
        li.appendChild(expand);
        var self = this;
        addEvent(expand, 'click', function() {
            var ajaxFacet = new AjaxFacets(self.query,self.maxCharacters,self.replaceDisplayValue);
            ajaxFacet.retrieveFilters(this.parentNode, dataServiceUrl, facetName, filter.val.act);
        });
    } else {
        addClass(li, 'no-children');
    }
    var checkbox = document.createElement('input');
    checkbox.setAttribute('type', 'checkbox');
    checkbox.className = 'checkbox';
    checkbox.id = facetName + '-' + filter.val.dsp;
    checkbox.setAttribute('name', 'f');
    checkbox.setAttribute('value', facetName + '["' + filter.val.act + '"]["' + filter.val.dsp + '"]*');
    li.appendChild(checkbox);
    var labelText = document.createTextNode(filter.val.dsp);
    var label = document.createElement('label');
    label.className = 'label';
    label.setAttribute('for', facetName + '-' + filter.val.dsp);
    label.appendChild(labelText);
    li.appendChild(label);
    var countText = document.createTextNode(filter.count);
    var count = document.createElement('span');
    count.className = 'count';
    count.appendChild(countText);
    var metadata = document.createElement('span');
    metadata.className = 'metadata';
    metadata.appendChild(count);
    li.appendChild(metadata);
    return li;
}
;
AjaxFacets.prototype.textModeTemplate = function(container, dataServiceUrl, facetName, filter) {
    var tk = new TWIGKIT();
    var li = document.createElement('li');
    li.className = 'filter';
    if (filter['has-more-rel'] == true) {
        var expand = document.createElement('span');
        expand.className = 'expand';
        li.appendChild(expand);
        var self = this;
        addEvent(expand, 'click', function() {
            var ajaxFacet = new AjaxFacets(self.query,self.maxCharacters,self.replaceDisplayValue);
            ajaxFacet.retrieveFilters(this.parentNode, dataServiceUrl, facetName, filter.val.act);
        });
    } else {
        addClass(li, 'no-children');
    }
    var labelTitle = '';
    var displayValue = filter.val.dsp.slice(0, this.maxCharacters);
    displayValue = displayValue.replace(/_/g, ' ');
    if (filter.val.dsp.length > this.maxCharacters) {
        displayValue = trim(displayValue) + "...";
        labelTitle = filter.val.dsp;
    }
    var labelText = document.createTextNode(displayValue);
    var label = document.createElement('a');
    label.className = 'label';
    label.setAttribute('href', tk.addFilter(this.query, tk.createFilter(filter.field, filter.val.act, filter.val.dsp)));
    label.setAttribute('title', labelTitle);
    label.appendChild(labelText);
    li.appendChild(label);
    var countText = document.createTextNode(filter.count);
    var count = document.createElement('span');
    count.className = 'count';
    count.appendChild(countText);
    var metadata = document.createElement('span');
    metadata.className = 'metadata';
    metadata.appendChild(count);
    li.appendChild(metadata);
    var excludeText = document.createTextNode('-');
    var exclude = document.createElement('a');
    exclude.className = 'exclude';
    exclude.setAttribute('href', tk.addFilter(this.query, tk.createFilter(filter.field, filter.val.act, filter.val.dsp, true)));
    exclude.appendChild(excludeText);
    li.appendChild(exclude);
    addEvent(li, 'onmouseover', function() {
        addClass(li, 'hover');
    });
    addEvent(li, 'onmouseout', function() {
        removeClass(li, 'hover');
    });
    return li;
}
;
function initAjaxFacets() {
    var ajaxFacets = getElementsByClassName(document, 'ajax-facet');
    for (var i = 0; i < ajaxFacets.length; i++) {
        var container = ajaxFacets[i];
        var dataServiceUrl = container.getAttribute('data-service-url');
        var facetName = container.getAttribute('data-facet-name');
        var initialPath = container.getAttribute('data-initial-path');
        var selectType = container.getAttribute('data-select-type');
        var maxCharacters = container.getAttribute('data-max-characters');
        var replaceDisplayValue = container.getAttribute('data-replace-display-value');
        var ajaxFacet = new AjaxFacets(container.getAttribute('data-query'),maxCharacters,replaceDisplayValue);
        ajaxFacet.retrieveFilters(container, dataServiceUrl, facetName, initialPath, selectType);
    }
}
TwigkitRenderCallbacks.add("initAjaxFacets", initAjaxFacets);
(function(jQuery) {
    jQuery.fn.configureBuilder = function(settings) {
        var builder = $(this);
        capsize(builder.children('form')[0], 'capsize');
        var button = builder.find('input[type="submit"]')[0];
        builder.find('input[type="text"]:not(.capsize)').placeholder();
        builder.find('select[name="field"]').change(function() {
            var templateName = jQuery(this).val();
            var sameTemplate = jQuery(this).parents('fieldset').hasClass(templateName);
            if (!sameTemplate) {
                var thisFieldSet = jQuery(this).parents('fieldset');
                var newTemplate = getTemplate(settings, builder, false, templateName);
                jQuery(thisFieldSet).before(newTemplate);
                removeFieldSet(builder, thisFieldSet, false);
            }
            jQuery(this).siblings('input.filter.capsize').attr('data-field', jQuery(this).val());
        });
        builder.find('select[name="operator"]').change(function() {
            if (jQuery(this).val() == 'EXCLUDE') {
                jQuery(this).closest('fieldset').find('input[type="text"], input[type="checkbox"]').attr('data-exclude', true);
                jQuery(this).closest('fieldset').find('input[type="text"], input[type="checkbox"]').attr('data-optional', 'NONE');
            } else {
                jQuery(this).closest('fieldset').find('input[type="text"], input[type="checkbox"]').attr('data-optional', jQuery(this).val());
                jQuery(this).closest('fieldset').find('input[type="text"], input[type="checkbox"]').attr('data-exclude', false);
            }
        });
        builder.find('a.add-expression').click(function() {
            var template = getTemplate(settings, builder, true);
            jQuery(this).parent().before(template);
            return false;
        });
        builder.find('a.remove-expression').click(function() {
            removeFieldSet(builder, jQuery(this).parent(), true);
            return false;
        });
        builder.children('form').find('input.date').each(function() {
            addDateCapabilities(this);
        });
        builder.children('form').submit(function(event) {
            jQuery(builder).find('fieldset.range').each(function() {
                var from = jQuery(this).find('input.from');
                var to = jQuery(this).find('input.to');
                var fromValue = from.val();
                var toValue = to.val();
                var val = '';
                var isDate = jQuery(from).hasClass('date') || jQuery(to).hasClass('date');
                if (isDate) {
                    if (fromValue !== '') {
                        fromValue += 'T00:00:00';
                    }
                    if (toValue !== '') {
                        toValue += 'T23:59:59';
                    }
                }
                if (fromValue !== '' && toValue === '') {
                    val = fromValue + ',';
                } else if (fromValue === '' && toValue !== '') {
                    val = ',' + toValue;
                } else if (fromValue !== '' && toValue !== '') {
                    val = fromValue + ',' + toValue;
                }
                if (val !== '') {
                    createRangeFilter(builder, from.attr('data-field'), from.attr('data-group'), fromValue, toValue);
                    from.val('');
                    to.val('');
                }
            });
            jQuery(builder).find('input:text:not(.template):not([name="q"]):not(.date):not(.from):not(.to), input:checkbox:checked, select.value').each(function() {
                var input = $(this);
                if (input.val() != '' && input.val() != input.attr('placeholder')) {
                    if (input.val().indexOf(settings.delimiter) > -1) {
                        splitFilters(builder, settings, input);
                    } else {
                        var optional = input.attr('data-optional');
                        if (input.attr('type') === 'text' && optional === 'VALUE') {
                            optional = 'FIELD';
                        }
                        createStringFilter(builder, input.attr('data-field'), input.attr('data-group'), input.val(), optional, input.attr('data-exclude') === 'true');
                    }
                    input.val('');
                }
            });
            jQuery(builder).find('select').each(function() {
                var cls = jQuery(this).attr('class');
                jQuery(this).before('<div class="' + cls + '"> </div>');
                jQuery(this).remove();
            });
            return true;
        });
        if (!hasClass(builder.children('form')[0], 'preset')) {
            var initialTemplate = getTemplate(settings, builder, true);
            builder.find('.add-submit').before(initialTemplate);
        }
    }
    ;
    function addDateCapabilities(el) {
        var format = jQuery(el).attr('data-format');
        var visible = jQuery(el).next('input.date').first();
        jQuery(el).change(function() {
            if (jQuery(this).val() === '') {
                jQuery(visible).val('');
            }
        });
        var value;
        var datePicker = jQuery(el).datepicker({
            dateFormat: format !== '' ? format : 'yy-mm-dd',
            altField: visible,
            altFormat: 'yy-mm-dd',
            changeYear: true,
            prevText: '&laquo;',
            nextText: '&raquo;',
            beforeShow: function(input, instance) {
                value = input.value;
            }
        });
        datePicker.datepicker("widget").click(function(e) {
            if (!e)
                var e = window.event;
            e.cancelBubble = true;
            if (e.stopPropagation)
                e.stopPropagation();
        });
    }
    function getTemplate(settings, builder, incrementGroup, templateName) {
        var newTemplate;
        if (templateName) {
            var originalFieldSet = builder.find('.templates').children('fieldset[data-original = ' + templateName + ']');
            if (originalFieldSet.length > 0) {
                return originalFieldSet;
            }
            newTemplate = builder.find('.templates').children('fieldset.' + templateName).first().clone(true);
        } else {
            newTemplate = builder.find('.templates').children("fieldset:not(.query)").first().clone(true);
            templateName = newTemplate.attr('class').split(' ')[0];
        }
        jQuery(newTemplate).find('label.field').html(templateName);
        jQuery(newTemplate).find('select[name="field"]').val(templateName);
        jQuery(newTemplate).find('[data-field]').attr('data-field', templateName);
        jQuery(newTemplate).find('input.date').each(function() {
            addDateCapabilities(this);
        });
        if (settings['grouping']) {
            var group = -1;
            builder.find('input[data-group]').each(function() {
                var g = jQuery(this).attr('data-group');
                if (g && g.length > 0) {
                    group = parseInt(g) > group ? parseInt(g) : group;
                }
            });
            if (incrementGroup)
                ++group;
            jQuery(newTemplate).find('input').attr('data-group', group);
        }
        var inputsToCapsize = jQuery(newTemplate).find('input.capsize');
        if (inputsToCapsize.length > 0) {
            var input = new Capsize();
            input.input = jQuery(newTemplate).find('input.capsize')[0];
            input.populateList();
        }
        return newTemplate;
    }
    function removeFieldSet(builder, fieldSet, permanent) {
        if (!permanent && jQuery(fieldSet).attr('data-original') !== undefined) {
            var field = jQuery(fieldSet).find('[data-field]').attr('data-field');
            jQuery(fieldSet).find('select.field').val(field);
            jQuery(builder).find('.templates').append(fieldSet);
        } else {
            jQuery(fieldSet).remove();
        }
    }
    function splitFilters(builder, settings, input) {
        if (input.val().indexOf(settings.delimiter) > 0) {
            var filters = input.val().split(settings.delimiter);
            for (var i = 0; i < filters.length; i++) {
                var optional = input.attr('data-optional');
                if (optional === 'FIELD') {
                    optional = 'VALUE';
                }
                createStringFilter(builder, input.attr('data-field'), input.attr('data-group'), filters[i], optional, input.attr('data-exclude') === 'true');
            }
        } else {
            createStringFilter(builder, input.attr('data-field'), input.attr('data-group'), input.val(), input.attr('data-optional'), input.attr('data-exclude') === 'true');
        }
    }
    function createRangeFilter(builder, field, group, from, to) {
        var val = '';
        if (from !== '' && to === '') {
            val = from + ',';
        } else if (from === '' && to !== '') {
            val = ',' + to;
        } else if (from !== '' && to !== '') {
            val = from + ',' + to;
        }
        createFilter(builder, field, group, val, 'NONE', false);
    }
    function createStringFilter(builder, field, group, value, optional, exclude) {
        createFilter(builder, field, group, '"' + value + '"', optional, exclude);
    }
    function createFilter(builder, field, group, value, optional, exclude) {
        if (value && value.length > 0) {
            var filter = '';
            if (exclude) {
                filter += '-';
            } else if (optional === 'FIELD') {
                filter += '~';
            }
            filter += field;
            if (group && parseInt(group) > -1) {
                filter += '(' + group + ')';
            }
            filter += '[' + value + ']';
            if (optional === 'VALUE') {
                filter += '*';
            }
            builder.find('form').append("<input type='hidden' name='f' value='" + filter.replace(/'/g, '&#39;') + "' />");
        }
    }
})(jQuery);
function Builder() {
    jQuery('div.advanced-search').each(function() {
        var settings = {
            'delimiter': ';;',
            'grouping': jQuery(this).attr('data-grouping') == 'true'
        };
        jQuery(this).configureBuilder(settings);
    });
}
TwigkitRenderCallbacks.add("Builder", Builder);
var DELIMITER = ';;';
function Capsize() {
    var capsizeContainer;
    var input;
    var newInput;
    var minInputWidth;
}
Capsize.prototype.populateList = function() {
    this.minInputWidth = 100;
    var self = this;
    this.newInput = this.input.cloneNode(false);
    addEvent(this.newInput, 'blur', function(event) {
        var capsules = getElementsByClassName(self.capsizeContainer, 'capsule');
        if (capsules) {
            for (var i = 0; i < capsules.length; i++) {
                removeClass(capsules[i], 'selected');
            }
        }
        if (self.newInput.value.length > 0 && self.newInput.value != self.input.getAttribute('placeholder')) {
            self.updateValue();
            self.addCapsule(self.newInput.value);
        }
    });
    this.capsizeContainer = document.createElement('ul');
    setClass(this.capsizeContainer, 'capsize-container');
    this.input.parentNode.appendChild(this.capsizeContainer);
    var newInputLi = document.createElement('li');
    setClass(newInputLi, 'input');
    this.capsizeContainer.appendChild(newInputLi);
    this.newInput.setAttribute('value', '');
    removeClass(this.newInput, 'capsize');
    addEvent(this.capsizeContainer, 'click', function() {
        self.newInput.focus();
        addClass(self.capsizeContainer, 'focus');
    });
    addEvent(this.newInput, 'focus', function() {
        self.resizeInput();
    });
    addEvent(this.newInput, 'blur', function() {
        removeClass(self.capsizeContainer, 'focus');
    });
    newInputLi.appendChild(this.newInput);
    this.attachKeyboardEvents();
    this.input.setAttribute('style', 'display: none;');
    this.input.style.cssText = "display: none;";
    this.input.removeAttribute('maxlength');
    if (this.input.getAttribute('value')) {
        var capsules = this.input.getAttribute('value').split(DELIMITER);
    }
    if (capsules) {
        for (var i = 0; i < capsules.length; i++) {
            if (capsules[i].length > 0) {
                self.addCapsule(capsules[i]);
            }
        }
    }
}
;
var KEY_BACKSPACE = 8
  , KEY_TAB = 9
  , KEY_RETURN = 13
  , KEY_COMMA = 188;
Capsize.prototype.attachKeyboardEvents = function() {
    var self = this;
    addEvent(this.newInput, 'keydown', function(event) {
        var code = (event.keyCode ? event.keyCode : event.which);
        switch (code) {
        case KEY_BACKSPACE:
            if (self.newInput.value.length === 0) {
                self.removeLastValue();
                if (event.preventDefault) {
                    event.preventDefault();
                }
                return false;
            }
            break;
        case KEY_TAB:
        case KEY_RETURN:
        case KEY_COMMA:
            if (self.newInput.value.length > 0 && self.newInput.value != self.input.getAttribute('placeholder')) {
                self.updateValue();
                self.addCapsule(self.newInput.value);
                if (event.preventDefault) {
                    event.preventDefault();
                }
                return false;
            }
            break;
            return true;
        }
    });
}
;
Capsize.prototype.resizeInput = function() {
    var capsules = getElementsByClassName(this.capsizeContainer, 'capsule');
    var capsulesWidth = 0;
    var capsulesHeight = getStyle(this.capsizeContainer, 'height');
    var capsulesMargin = 0;
    var capsizeContainerWidth = jQuery(this.capsizeContainer).width();
    for (var i = 0; i < capsules.length; i++) {
        if (i == 0) {
            capsulesHeight = jQuery(capsules[i]).outerHeight(true);
            capsulesMargin = jQuery(capsules[i]).outerWidth(true) - jQuery(capsules[i]).outerWidth(false);
        }
        capsulesWidth = capsulesWidth + jQuery(capsules[i]).outerWidth(true);
        if (capsulesWidth > capsizeContainerWidth) {
            capsulesWidth = jQuery(capsules[i]).outerWidth(true);
        }
        if (i + 1 == capsules.length && capsulesWidth + this.minInputWidth > capsizeContainerWidth) {
            capsulesWidth = 0;
        }
    }
    var newWidth = capsizeContainerWidth - capsulesWidth - (this.newInput.scrollWidth - this.newInput.clientWidth);
    if (newWidth < this.minInputWidth) {
        newWidth = this.minInputWidth;
    }
    this.newInput.style.width = newWidth - capsulesMargin + "px";
}
;
Capsize.prototype.updateValue = function() {
    var newValue;
    if (this.input.value) {
        newValue = trim(this.input.value) + DELIMITER + trim(this.newInput.value);
    } else {
        newValue = trim(this.newInput.value);
    }
    this.input.value = newValue;
}
;
Capsize.prototype.removeValue = function(indexToRemove) {
    var terms = this.input.value.split(DELIMITER);
    var newValue = '';
    for (var i = 0; i < terms.length; i++) {
        if (i != indexToRemove) {
            if (newValue.length > 0) {
                newValue += DELIMITER;
            }
            newValue += terms[i];
        }
    }
    this.input.value = newValue;
    var capsules = getElementsByClassName(this.capsizeContainer, 'capsule');
    if (indexToRemove > -1 && capsules.length > indexToRemove) {
        this.capsizeContainer.removeChild(capsules[indexToRemove]);
        if (this.input.value.length == 0) {
            this.newInput.setAttribute('placeholder', this.input.getAttribute('placeholder'));
            this.newInput.blur();
            this.newInput.focus();
        }
    }
    this.newInput.blur();
    this.newInput.focus();
}
;
Capsize.prototype.removeLastValue = function() {
    if (this.input.value.length > 0) {
        var capsules = getElementsByClassName(this.capsizeContainer, 'capsule');
        var last = capsules[capsules.length - 1];
        if (!hasClass(last, 'selected')) {
            addClass(last, 'selected');
        } else {
            this.removeValue(capsules.length - 1);
        }
    }
}
;
Capsize.prototype.addCapsule = function(capsuleVal) {
    var self = this;
    var capsuleLi = document.createElement('li');
    addEvent(capsuleLi, 'click', function(event) {
        var index = 0;
        while ((capsuleLi = capsuleLi.previousSibling) != null)
            ++index;
        self.removeValue(index);
    });
    var capsuleXValue = document.createTextNode('×');
    var capsuleX = document.createElement('span');
    addClass(capsuleX, 'x');
    capsuleX.appendChild(capsuleXValue);
    capsuleLi.appendChild(capsuleX);
    setClass(capsuleLi, 'capsule');
    var capsuleValue = document.createTextNode(capsuleVal);
    var capsuleValueElement = document.createElement('span');
    addClass(capsuleValueElement, 'value');
    capsuleValueElement.appendChild(capsuleValue);
    capsuleLi.appendChild(capsuleValueElement);
    this.newInput.style.width = this.minInputWidth + "px";
    this.capsizeContainer.appendChild(capsuleLi);
    this.newInput.value = '';
    var newInputLi = this.newInput.parentNode;
    this.capsizeContainer.appendChild(newInputLi);
    setTimeout(function() {
        if (self.newInput.scrollWidth > 0)
            self.newInput.focus();
    }, 10);
    this.newInput.setAttribute('placeholder', '');
}
;
function capsize(el, cls) {
    var inputs = getElementsByClassName(el, cls);
    if (inputs && inputs.length > 0) {
        for (var i = 0; i < inputs.length; i++) {
            var input = new Capsize();
            input.input = inputs[i];
            input.populateList();
        }
    }
}
;(function(jQuery) {
    var config;
    jQuery.fn.configureDatePicker = function(settings) {
        var date_form = $(this);
        var button = date_form.find('input[type="submit"]')[0];
        date_form.find('input.control.filter.date').each(function() {
            var format = jQuery(this).attr('data-format');
            var visible = jQuery(this).next('input.date').first();
            jQuery(this).change(function() {
                if (jQuery(this).val() === '') {
                    jQuery(visible).val('');
                }
            });
            var value;
            var datePicker = jQuery(this).datepicker({
                dateFormat: format !== '' ? format : 'yy-mm-dd',
                altField: visible,
                altFormat: 'yy-mm-dd',
                changeYear: true,
                prevText: '&laquo;',
                nextText: '&raquo;',
                beforeShow: function(input, instance) {
                    value = input.value;
                },
                onSelect: function(date, instance) {
                    if (button === undefined) {
                        if (date == '') {
                            jQuery(visible).val('');
                        }
                        date_form.submit();
                    }
                },
                onClose: function(date, instance) {
                    if (button === undefined && date == '' && value != date) {
                        if (date == '') {
                            jQuery(visible).val('');
                        }
                        date_form.submit();
                    }
                }
            });
        });
        date_form.submit(function(event) {
            var from = jQuery(this).find('input.from');
            var to = jQuery(this).find('input.to');
            var fromValue = from.val();
            var toValue = to.val();
            var val = '';
            var isDate = jQuery(from).hasClass('date') || jQuery(to).hasClass('date');
            if (isDate) {
                if (fromValue !== '') {
                    fromValue += 'T00:00:00';
                }
                if (toValue !== '') {
                    toValue += 'T23:59:59';
                }
            }
            if (fromValue !== '' && toValue === '') {
                val = fromValue + ',';
            } else if (fromValue === '' && toValue !== '') {
                val = ',' + toValue;
            } else if (fromValue !== '' && toValue !== '') {
                val = fromValue + ',' + toValue;
            }
            if (val !== '') {
                createDateRangeFilter(date_form, from.attr('data-field'), from.attr('data-group'), fromValue, toValue);
            }
        });
    }
    function createDateRangeFilter(builder, field, group, from, to) {
        var val = '';
        if (from !== '' && to === '') {
            val = from + ',';
        } else if (from === '' && to !== '') {
            val = ',' + to;
        } else if (from !== '' && to !== '') {
            val = from + ',' + to;
        }
        createDateFilter(builder, field, group, val, 'NONE', false);
    }
    function createDateFilter(builder, field, group, value, optional, exclude) {
        if (value && value.length > 0) {
            var filter = '';
            if (exclude) {
                filter += '-';
            } else if (optional === 'FIELD') {
                filter += '~';
            }
            filter += field;
            if (group && parseInt(group) > -1) {
                filter += '(' + group + ')';
            }
            filter += '[' + value + ']';
            if (optional === 'VALUE') {
                filter += '*';
            }
            builder.append("<input type='hidden' name='f' value='" + filter + "' />");
        }
    }
})(jQuery);
function TwigKitDatePicker() {
    jQuery('.datepicker').each(function() {
        var settings = {};
        jQuery(this).configureDatePicker(settings);
    });
    jQuery("form.datepicker input[type='text']").placeholder();
}
TwigkitRenderCallbacks.add("DatePicker", TwigKitDatePicker);
(function(jQuery) {
    jQuery.fn.initializeInstantResults = function(settings) {
        var instantResultsContainer = $(this);
        var input = settings.form.find("input[name=q]");
        var template = Tempo.prepare(instantResultsContainer, {
            'escape': false
        });
        var delay;
        var request = null;
        var keys = {
            UP: 38,
            DOWN: 40,
            BACKSPACE: 8,
            RETURN: 13,
            ESC: 27,
            SHIFT: 16,
            CONTROL: 17,
            CMDL: 91,
            CMDR: 93
        };
        input.on('keydown', function(event) {
            switch (event.keyCode) {
            case keys.UP:
                return scroll('up', event);
            case keys.DOWN:
                return scroll('down', event);
            case keys.SHIFT:
                return false;
            case keys.CONTROL:
                return false;
            case keys.CMDL:
                return false;
            case keys.CMDR:
                return false;
            case keys.RETURN:
                return goToResult(event);
            case keys.ESC:
                template.clear();
                instantResultsContainer.hide();
                return false;
            default:
                if (input.val().length > 1) {
                    fetchResults();
                } else {
                    instantResultsContainer.hide();
                }
            }
        });
        function fetchResults() {
            clearTimeout(delay);
            if (request !== null) {
                request.abort();
            }
            delay = setTimeout(function() {
                var query = input.val();
                var urlForQuery;
                if (settings.query !== null && settings.query.length > 0) {
                    urlForQuery = settings.serviceUrl + "?" + settings.query.replace(/\{\{[A-z0-9]+?\}\}/g, query);
                } else {
                    if (settings.enableWildcard) {
                        query = query + "*";
                    }
                    urlForQuery = settings.serviceUrl + "?q=" + query + "&f=" + settings.filters + '&rpp=5';
                }
                request = jQuery.ajax({
                    url: urlForQuery,
                    success: function(data) {
                        template.clear();
                        if (data.hits.act[1] > 0) {
                            template.render(data);
                            instantResultsContainer.show();
                        } else {
                            instantResultsContainer.hide();
                        }
                    }
                });
            }, 250);
        }
        function scroll(direction, event) {
            var instantResults = instantResultsContainer.find("li");
            var selectedResult = instantResults.filter(".selected");
            if (direction == 'down') {
                if (selectedResult.length == 0) {
                    instantResults.first().addClass('selected');
                } else {
                    selectedResult.removeClass('selected');
                    selectedResult.next().addClass('selected');
                }
            }
            if (direction == 'up') {
                if (selectedResult.length > 0) {
                    selectedResult.removeClass('selected');
                    selectedResult.prev().addClass('selected');
                }
            }
            event.preventDefault();
            return false;
        }
        function goToResult(event) {
            var instantResults = instantResultsContainer.find("li");
            var selectedResult = instantResults.filter(".selected");
            if (selectedResult.length == 0) {
                settings.form.trigger('submit');
            } else {
                var url = selectedResult.find('a').attr('href');
                window.location = url;
            }
            event.preventDefault();
            return false;
        }
        instantResultsContainer.click(function(e) {
            e.stopPropagation();
        });
        $("body").click(function() {
            template.clear();
            instantResultsContainer.hide();
            return true;
        });
        $(document).add(parent.document).mouseup(function(e) {
            if (!instantResultsContainer.is(e.target) && instantResultsContainer.has(e.target).length === 0) {
                template.clear();
                instantResultsContainer.hide();
                return true;
            }
        });
    }
    ;
})(jQuery);
function TwigkitInstantResults() {
    jQuery('.instant-results').each(function() {
        var settings = {
            form: jQuery(this).closest('form'),
            serviceUrl: jQuery(this).data('service-url'),
            filters: jQuery(this).data('filters'),
            query: jQuery(this).data('query'),
            enableWildcard: jQuery(this).data('enable-wildcard')
        };
        jQuery(this).initializeInstantResults(settings);
    });
}
TwigkitRenderCallbacks.add("TwigkitInstantResults", TwigkitInstantResults);
(function(jQuery) {
    jQuery.fn.modal = function(settings, index, previewLinks) {
        var self = $(this);
        var requestUrl = self.attr('href');
        var isScrollable = self.hasClass("scroll")
        self.bind('click', function(e) {
            populateModal(requestUrl, index, previewLinks, isScrollable);
            e.stopPropagation();
            return false;
        });
    }
    function populateModal(requestUrl, index, previewLinks, isScrollable) {
        var modalDiv = $("div.modal");
        if (modalDiv.length == 0) {
            modalDiv = document.createElement('div');
            $(modalDiv).addClass('modal');
            $('body').append($(modalDiv));
        } else {
            $(modalDiv).empty();
        }
        $(modalDiv).append('<div class="modal-mask"></div>');
        if (isScrollable) {
            $(modalDiv).append('<div class="modal-container modal-scrollable"></div>');
        } else {
            $(modalDiv).append('<div class="modal-container"></div>');
        }
        $(".modal-container").append('<p class="loading">Loading preview</p>');
        $(modalDiv).find('.modal-container').click(function(e) {
            e.stopPropagation();
        });
        $("body").click(function() {
            $(modalDiv).remove();
        });
        jQuery.ajax({
            url: requestUrl,
            dataType: "html",
            success: function(data) {
                $(modalDiv).find(".modal-container").html(data);
                $(modalDiv).find(".modal-cancel").click(function(e) {
                    $(modalDiv).remove();
                    e.stopPropagation();
                    return false;
                });
                var nextButton = $(modalDiv).find("a.next");
                nextButton.click(function(e) {
                    e.stopPropagation();
                    previewLinks.eq(index + 1).trigger('click');
                    return false;
                });
                var previousButton = $(modalDiv).find("a.previous");
                previousButton.click(function(e) {
                    e.stopPropagation();
                    previewLinks.eq(index - 1).trigger('click');
                    return false;
                });
                if (index == 0) {
                    previousButton.hide();
                } else if (index == previewLinks.length - 1) {
                    nextButton.hide();
                }
            }
        });
    }
})(jQuery);
function Modal() {
    var previewLinks = jQuery('a.preview');
    jQuery('a.preview').each(function(index) {
        var settings = {};
        jQuery(this).modal(settings, index, previewLinks);
    });
}
TwigkitRenderCallbacks.add("Modal", Modal);
function popover() {
    var closeOnClick;
}
popover.prototype.attachEvents = function(popoverContainer) {
    var self = this;
    var popoverLink = getElementsByClassName(popoverContainer, 'popover-link')[0];
    var popoverDynamicLink = getElementsByClassName(popoverContainer, 'dynamic-text')[0];
    var popoverDynamicLinkInput = getElementsByClassName(popoverContainer, 'dynamic-link-text-input')[0];
    var popoverCancelLink = getElementsByClassName(popoverContainer, 'popover-cancel')[0];
    var popoverBody = getElementsByClassName(popoverContainer, 'popover-body')[0];
    popoverLink.onclick = function() {
        if (hasClass(popoverContainer, 'visible')) {
            removeClass(popoverContainer, 'visible');
        } else {
            document.onclick();
            addClass(popoverContainer, 'visible');
        }
    }
    ;
    if (popoverCancelLink) {
        popoverCancelLink.onclick = function() {
            removeClass(popoverContainer, 'visible');
            return false;
        }
        ;
    }
    if (popoverDynamicLinkInput) {
        popoverDynamicLinkInput.onchange = function() {
            popoverDynamicLink.innerHTML = this.value;
        }
        ;
    }
    if (self.closeOnClick) {
        var lis = popoverBody.getElementsByTagName(self.closeOnClick);
        for (var i = 0; i < lis.length; i++) {
            addEvent(lis[i], 'click', function() {
                removeClass(popoverContainer, 'visible');
            });
        }
    }
    popoverContainer.onclick = function(e) {
        if (!e)
            var e = window.event;
        e.cancelBubble = true;
        if (e.stopPropagation)
            e.stopPropagation();
    }
    ;
    var preexistingEvents = (document.onclick) ? document.onclick : function() {}
    ;
    document.onclick = function() {
        preexistingEvents();
        removeClass(popoverContainer, 'visible');
    }
    ;
}
;
function initPopover() {
    var popoverContainers = getElementsByClassName(document, 'popover-container');
    for (var i = 0; i < popoverContainers.length; i++) {
        var pop = new popover();
        if (popoverContainers[i].getAttribute('data-close-on-click')) {
            pop.closeOnClick = popoverContainers[i].getAttribute('data-close-on-click');
        }
        pop.attachEvents(popoverContainers[i]);
    }
}
TwigkitRenderCallbacks.add("initPopover", initPopover);
var isIE6 = /MSIE 6/i.test(navigator.userAgent);
(function(jQuery) {
    var config;
    var delay;
    var html = {
        CONTAINER: 'dl',
        SUGGESTION: 'dd',
        LABEL: 'label'
    };
    var keys = {
        UP: 38,
        DOWN: 40,
        DEL: 46,
        BACKSPACE: 8,
        TAB: 9,
        RETURN: 13,
        ESC: 27,
        PAGEUP: 33,
        PAGEDOWN: 34
    };
    jQuery.fn.addQuerySuggestionService = function(settings, container) {
        config = {
            'serviceUrl': '/twigkit/services/query-suggestion-service/',
            'serviceId': 'static-completions',
            'serviceRemote': 'false',
            'action': '',
            'containerClassName': 'suggestions',
            'selectedClassName': 'selected',
            'ajax': 'false'
        };
        if (settings) {
            jQuery.extend(config, settings);
        }
        this.each(function() {
            attach(this, container, false);
        });
        return this;
    }
    ;
    function attach(elem, container, escape) {
        var template = (escape === undefined) ? Tempo.prepare(container) : Tempo.prepare(container, {
            'escape': escape
        });
        container.css('top', jQuery(jQuery(elem)).offset().top + jQuery(elem).outerHeight() + 'px');
        container.css('left', jQuery(jQuery(elem)).offset().left + 'px');
        jQuery(elem).bind('keydown keyup', function(event) {
            var input = event.target;
            jQuery(input).blur(function(event) {
                setTimeout(function() {
                    template.clear();
                    container.hide();
                    if (!isIE6)
                        jQuery(input).removeClass('suggesting');
                }, 250);
            });
            clearTimeout(delay);
            switch (event.keyCode) {
            case keys.UP:
                if (event.type == 'keydown') {
                    event.preventDefault();
                    changeSelection(container, keys.UP);
                }
                return false;
            case keys.DOWN:
                if (event.type == 'keydown') {
                    event.preventDefault();
                    changeSelection(container, keys.DOWN);
                }
                return false;
            case keys.RETURN:
                var target = container.find(html.SUGGESTION + '.' + config.selectedClassName);
                if (event.type == 'keydown' && target.length > 0) {
                    event.preventDefault();
                    takeSelection(target, container);
                    container.remove();
                    if (!isIE6)
                        jQuery(input).removeClass('suggesting');
                    return false;
                } else {
                    return true;
                }
            case keys.ESC:
                if (event.type == 'keydown') {
                    event.preventDefault();
                    template.clear();
                    container.hide();
                    jQuery(input).removeClass('suggesting');
                }
                return false;
            default:
                if (event.type == 'keyup') {
                    if (event.target.value.length > 0) {
                        delay = setTimeout(function() {
                            if (event.target.value.length > 0) {
                                var url = config.serviceUrl + config.serviceId + '?q=' + encodeURIComponent(event.target.value);
                                jQuery.ajax({
                                    url: url,
                                    dataType: "jsonp",
                                    success: function(data) {
                                        var groups = eval(data);
                                        var hasSuggestions = false;
                                        for (var i = 0; i < groups.length; i++) {
                                            if (groups[i].values.length > 0) {
                                                hasSuggestions = true;
                                                break;
                                            }
                                        }
                                        if (hasSuggestions) {
                                            template.render(groups);
                                            if (container.children().length > 0) {
                                                jQuery(container).find(html.SUGGESTION).on('hover', function(event) {
                                                    jQuery(container).find(html.SUGGESTION).removeClass(config.selectedClassName);
                                                    jQuery(this).toggleClass(config.selectedClassName);
                                                });
                                                jQuery(container).find(html.SUGGESTION).on('click', function(event) {
                                                    jQuery(this).addClass(config.selectedClassName);
                                                    takeSelection(this, container);
                                                });
                                                container.show();
                                                if (!isIE6)
                                                    jQuery(input).addClass('suggesting');
                                            } else {
                                                container.remove();
                                                if (!isIE6)
                                                    jQuery(input).removeClass('suggesting');
                                            }
                                        } else {
                                            template.clear();
                                            container.hide();
                                        }
                                    }
                                });
                            }
                        }, 350);
                    } else {
                        template.clear();
                        container.hide();
                    }
                }
                return true;
            }
        });
    }
    function takeSelection(suggestion, suggestionList) {
        jQuery(suggestionList).hide();
        if (!isIE6)
            jQuery(suggestion).removeClass('suggesting');
        var rel = jQuery(suggestion).find('a').attr('rel');
        var cleanRel = rel.replace(/%3Cem%3E/gi, "").replace(/%3C%2Fem%3E/gi, "");
        document.location = cleanRel;
    }
    function changeSelection(suggestionList, direction) {
        if (jQuery(suggestionList).find(html.SUGGESTION + '.' + config.selectedClassName).length == 0) {
            jQuery(suggestionList).find(html.SUGGESTION + ':' + (direction == keys.DOWN ? 'first' : 'last')).toggleClass(config.selectedClassName);
        } else {
            if (direction == keys.UP && jQuery(suggestionList).find(html.SUGGESTION).first().hasClass(config.selectedClassName)) {
                jQuery(suggestionList).find(html.SUGGESTION).first().removeClass(config.selectedClassName);
            } else {
                if (direction == keys.DOWN && jQuery(suggestionList).find(html.SUGGESTION).last().hasClass(config.selectedClassName)) {
                    jQuery(suggestionList).find(html.SUGGESTION).last().removeClass(config.selectedClassName);
                    jQuery(suggestionList).find(html.SUGGESTION).first().toggleClass(config.selectedClassName);
                } else {
                    var elem = jQuery(suggestionList).find(html.SUGGESTION + '.' + config.selectedClassName);
                    elem.removeClass(config.selectedClassName);
                    if (direction == keys.UP) {
                        if (elem.prev(html.SUGGESTION).length == 0) {
                            elem = elem.parent().prev().find(html.SUGGESTION).last().toggleClass(config.selectedClassName);
                        } else {
                            elem.prev(html.SUGGESTION).toggleClass(config.selectedClassName);
                        }
                    } else {
                        if (elem.next(html.SUGGESTION).length == 0) {
                            elem = elem.parent().next().find(html.SUGGESTION).first().toggleClass(config.selectedClassName);
                        } else {
                            elem.next(html.SUGGESTION).toggleClass(config.selectedClassName);
                        }
                    }
                }
            }
        }
    }
})(jQuery);
function TwigkitQuerySuggestionServiceRegistration() {
    jQuery('input.suggest').each(function() {
        var settings = {};
        var form = jQuery(this).closest('form');
        var container = jQuery(form).find('.tempo-suggestions');
        settings['serviceId'] = jQuery(container).attr('data-service-id');
        settings['serviceUrl'] = jQuery(container).attr('data-service-url');
        jQuery(this).addQuerySuggestionService(settings, container);
    });
}
TwigkitRenderCallbacks.add("QuerySuggestion", TwigkitQuerySuggestionServiceRegistration);
function TwigKitSearchForm() {
    jQuery("form.searchform input.query").placeholder();
    jQuery("form.searchform").submit(function(event) {
        if ($('form.searchform input:checkbox[name=searchwithin]').attr('checked') || $('form.searchform input:hidden[name=searchwithin][value=true]').length > 0) {
            var f = jQuery(this).attr('data-filters');
            if (f != '' && f.length > 0) {
                var filters = f.substring(2).split('&&');
                for (var i = 0; i < filters.length; i++) {
                    if (filters[i] != '') {
                        $('<input>').attr({
                            type: 'hidden',
                            name: 'f',
                            value: filters[i]
                        }).appendTo(this);
                    }
                }
            }
        }
        return true;
    });
}
TwigkitRenderCallbacks.add("SearchForm", TwigKitSearchForm);
(function(jQuery) {
    jQuery.fn.configureToggles = function(settings) {
        var controls = jQuery(this);
        var panes = jQuery('#' + settings.panes);
        settings['allowMultiple'] = /^true$/i.test(jQuery(panes).attr('data-allow-multiple'));
        init(settings, controls, panes);
    }
    ;
    function init(settings, controls, panes) {
        jQuery(controls).find('li').each(function(index) {
            _initControl(settings, controls, jQuery(this), panes, index);
        });
    }
    function _initControl(settings, controls, control, panes, index) {
        var pane = $(panes).find('.toggle-pane:eq(' + index + ')');
        if (pane.hasClass('active')) {
            control.addClass('active');
            control.children('a').text(control.attr('data-active-value'));
            jQuery(controls).parents('.popover-container').find('.dynamic-link-text-input').val(control.attr('data-active-value')).trigger('change');
        }
        jQuery(control).click(function() {
            var pane = jQuery(panes).find('.toggle-pane:eq(' + index + ')');
            settings['visible'] = [];
            jQuery(controls).parents('.popover-container').find('.dynamic-link-text-input').val(jQuery(control).attr('data-active-value')).trigger('change');
            jQuery(pane).slideToggle('fast', function() {
                if (jQuery(pane).is(':visible')) {
                    jQuery(control).addClass('active');
                    jQuery(control).children('a').text(jQuery(control).attr('data-active-value'));
                    jQuery(pane).addClass('active');
                    if (!settings.allowMultiple) {
                        jQuery(pane).siblings().removeClass('active');
                    }
                } else {
                    jQuery(control).removeClass('active');
                    jQuery(pane).removeClass('active');
                    var dynamicLinkTextInput = jQuery(controls).parents('.popover-container').find('.dynamic-link-text-input');
                    dynamicLinkTextInput.val(dynamicLinkTextInput.attr('data-default-dynamic-link-text')).trigger('change');
                }
                jQuery(panes).find('.toggle-pane').each(function() {
                    settings.visible[jQuery(this).index()] = jQuery(this).is(':visible');
                });
                setCookie(settings.panes, settings.visible.join(','), 30);
            });
            if (!settings.allowMultiple) {
                jQuery(controls).find('li:not(active)').each(function() {
                    jQuery(this).removeClass('active');
                    jQuery(this).children('a').text(jQuery(this).attr('data-default-value'));
                });
                jQuery(pane).siblings().removeClass('active').hide();
            }
            return false;
        });
    }
})(jQuery);
function TwigKitToggle() {
    jQuery('.toggle-controls').each(function() {
        var settings = {};
        settings['panes'] = jQuery(this).attr('data-panes');
        jQuery(this).configureToggles(settings);
    });
}
TwigkitRenderCallbacks.add("Toggle", TwigKitToggle);
function ToggleCssClass() {
    $(".toggle-css-class").each(function() {
        var targetSelector = $(this).attr('data-target-selector');
        var persist = $(this).attr('data-persist');
        $(this).find('li').click(function() {
            var actualValue = $(this).attr('data-actual-value');
            $(this).siblings().each(function() {
                $(targetSelector).removeClass($(this).attr('data-actual-value'));
                $(this).removeClass('active');
            });
            $(targetSelector).addClass(actualValue);
            $(this).addClass('active');
            if (persist == 'true') {
                setCookie(targetSelector, actualValue, 7);
            }
        });
        if (persist == 'true') {
            var activeItem = getCookie(targetSelector);
            if (activeItem) {
                $(targetSelector).addClass(activeItem);
                $(this).find('li[data-actual-value=' + activeItem + ']').addClass('active');
            } else {
                $(this).find('li:first').click();
            }
        }
    });
}
TwigkitRenderCallbacks.add("ToggleCssClass", ToggleCssClass);
(function(e, t) {
    var n = 5;
    e.widget("ui.slider", e.ui.mouse, {
        version: "1.9.2",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null
        },
        _create: function() {
            var t, r, i = this.options, s = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), o = "<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>", u = [];
            this._keySliding = !1,
            this._mouseSliding = !1,
            this._animateOff = !0,
            this._handleIndex = null,
            this._detectOrientation(),
            this._mouseInit(),
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all" + (i.disabled ? " ui-slider-disabled ui-disabled" : "")),
            this.range = e([]),
            i.range && (i.range === !0 && (i.values || (i.values = [this._valueMin(), this._valueMin()]),
            i.values.length && i.values.length !== 2 && (i.values = [i.values[0], i.values[0]])),
            this.range = e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header" + (i.range === "min" || i.range === "max" ? " ui-slider-range-" + i.range : ""))),
            r = i.values && i.values.length || 1;
            for (t = s.length; t < r; t++)
                u.push(o);
            this.handles = s.add(e(u.join("")).appendTo(this.element)),
            this.handle = this.handles.eq(0),
            this.handles.add(this.range).filter("a").click(function(e) {
                e.preventDefault()
            }).mouseenter(function() {
                i.disabled || e(this).addClass("ui-state-hover")
            }).mouseleave(function() {
                e(this).removeClass("ui-state-hover")
            }).focus(function() {
                i.disabled ? e(this).blur() : (e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),
                e(this).addClass("ui-state-focus"))
            }).blur(function() {
                e(this).removeClass("ui-state-focus")
            }),
            this.handles.each(function(t) {
                e(this).data("ui-slider-handle-index", t)
            }),
            this._on(this.handles, {
                keydown: function(t) {
                    var r, i, s, o, u = e(t.target).data("ui-slider-handle-index");
                    switch (t.keyCode) {
                    case e.ui.keyCode.HOME:
                    case e.ui.keyCode.END:
                    case e.ui.keyCode.PAGE_UP:
                    case e.ui.keyCode.PAGE_DOWN:
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        t.preventDefault();
                        if (!this._keySliding) {
                            this._keySliding = !0,
                            e(t.target).addClass("ui-state-active"),
                            r = this._start(t, u);
                            if (r === !1)
                                return
                        }
                    }
                    o = this.options.step,
                    this.options.values && this.options.values.length ? i = s = this.values(u) : i = s = this.value();
                    switch (t.keyCode) {
                    case e.ui.keyCode.HOME:
                        s = this._valueMin();
                        break;
                    case e.ui.keyCode.END:
                        s = this._valueMax();
                        break;
                    case e.ui.keyCode.PAGE_UP:
                        s = this._trimAlignValue(i + (this._valueMax() - this._valueMin()) / n);
                        break;
                    case e.ui.keyCode.PAGE_DOWN:
                        s = this._trimAlignValue(i - (this._valueMax() - this._valueMin()) / n);
                        break;
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                        if (i === this._valueMax())
                            return;
                        s = this._trimAlignValue(i + o);
                        break;
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        if (i === this._valueMin())
                            return;
                        s = this._trimAlignValue(i - o)
                    }
                    this._slide(t, u, s)
                },
                keyup: function(t) {
                    var n = e(t.target).data("ui-slider-handle-index");
                    this._keySliding && (this._keySliding = !1,
                    this._stop(t, n),
                    this._change(t, n),
                    e(t.target).removeClass("ui-state-active"))
                }
            }),
            this._refreshValue(),
            this._animateOff = !1
        },
        _destroy: function() {
            this.handles.remove(),
            this.range.remove(),
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),
            this._mouseDestroy()
        },
        _mouseCapture: function(t) {
            var n, r, i, s, o, u, a, f, l = this, c = this.options;
            return c.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            },
            this.elementOffset = this.element.offset(),
            n = {
                x: t.pageX,
                y: t.pageY
            },
            r = this._normValueFromMouse(n),
            i = this._valueMax() - this._valueMin() + 1,
            this.handles.each(function(t) {
                var n = Math.abs(r - l.values(t));
                i > n && (i = n,
                s = e(this),
                o = t)
            }),
            c.range === !0 && this.values(1) === c.min && (o += 1,
            s = e(this.handles[o])),
            u = this._start(t, o),
            u === !1 ? !1 : (this._mouseSliding = !0,
            this._handleIndex = o,
            s.addClass("ui-state-active").focus(),
            a = s.offset(),
            f = !e(t.target).parents().andSelf().is(".ui-slider-handle"),
            this._clickOffset = f ? {
                left: 0,
                top: 0
            } : {
                left: t.pageX - a.left - s.width() / 2,
                top: t.pageY - a.top - s.height() / 2 - (parseInt(s.css("borderTopWidth"), 10) || 0) - (parseInt(s.css("borderBottomWidth"), 10) || 0) + (parseInt(s.css("marginTop"), 10) || 0)
            },
            this.handles.hasClass("ui-state-hover") || this._slide(t, o, r),
            this._animateOff = !0,
            !0))
        },
        _mouseStart: function() {
            return !0
        },
        _mouseDrag: function(e) {
            var t = {
                x: e.pageX,
                y: e.pageY
            }
              , n = this._normValueFromMouse(t);
            return this._slide(e, this._handleIndex, n),
            !1
        },
        _mouseStop: function(e) {
            return this.handles.removeClass("ui-state-active"),
            this._mouseSliding = !1,
            this._stop(e, this._handleIndex),
            this._change(e, this._handleIndex),
            this._handleIndex = null,
            this._clickOffset = null,
            this._animateOff = !1,
            !1
        },
        _detectOrientation: function() {
            this.orientation = this.options.orientation === "vertical" ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(e) {
            var t, n, r, i, s;
            return this.orientation === "horizontal" ? (t = this.elementSize.width,
            n = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (t = this.elementSize.height,
            n = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)),
            r = n / t,
            r > 1 && (r = 1),
            r < 0 && (r = 0),
            this.orientation === "vertical" && (r = 1 - r),
            i = this._valueMax() - this._valueMin(),
            s = this._valueMin() + r * i,
            this._trimAlignValue(s)
        },
        _start: function(e, t) {
            var n = {
                handle: this.handles[t],
                value: this.value()
            };
            return this.options.values && this.options.values.length && (n.value = this.values(t),
            n.values = this.values()),
            this._trigger("start", e, n)
        },
        _slide: function(e, t, n) {
            var r, i, s;
            this.options.values && this.options.values.length ? (r = this.values(t ? 0 : 1),
            this.options.values.length === 2 && this.options.range === !0 && (t === 0 && n > r || t === 1 && n < r) && (n = r),
            n !== this.values(t) && (i = this.values(),
            i[t] = n,
            s = this._trigger("slide", e, {
                handle: this.handles[t],
                value: n,
                values: i
            }),
            r = this.values(t ? 0 : 1),
            s !== !1 && this.values(t, n, !0))) : n !== this.value() && (s = this._trigger("slide", e, {
                handle: this.handles[t],
                value: n
            }),
            s !== !1 && this.value(n))
        },
        _stop: function(e, t) {
            var n = {
                handle: this.handles[t],
                value: this.value()
            };
            this.options.values && this.options.values.length && (n.value = this.values(t),
            n.values = this.values()),
            this._trigger("stop", e, n)
        },
        _change: function(e, t) {
            if (!this._keySliding && !this._mouseSliding) {
                var n = {
                    handle: this.handles[t],
                    value: this.value()
                };
                this.options.values && this.options.values.length && (n.value = this.values(t),
                n.values = this.values()),
                this._trigger("change", e, n)
            }
        },
        value: function(e) {
            if (arguments.length) {
                this.options.value = this._trimAlignValue(e),
                this._refreshValue(),
                this._change(null, 0);
                return
            }
            return this._value()
        },
        values: function(t, n) {
            var r, i, s;
            if (arguments.length > 1) {
                this.options.values[t] = this._trimAlignValue(n),
                this._refreshValue(),
                this._change(null, t);
                return
            }
            if (!arguments.length)
                return this._values();
            if (!e.isArray(arguments[0]))
                return this.options.values && this.options.values.length ? this._values(t) : this.value();
            r = this.options.values,
            i = arguments[0];
            for (s = 0; s < r.length; s += 1)
                r[s] = this._trimAlignValue(i[s]),
                this._change(null, s);
            this._refreshValue()
        },
        _setOption: function(t, n) {
            var r, i = 0;
            e.isArray(this.options.values) && (i = this.options.values.length),
            e.Widget.prototype._setOption.apply(this, arguments);
            switch (t) {
            case "disabled":
                n ? (this.handles.filter(".ui-state-focus").blur(),
                this.handles.removeClass("ui-state-hover"),
                this.handles.prop("disabled", !0),
                this.element.addClass("ui-disabled")) : (this.handles.prop("disabled", !1),
                this.element.removeClass("ui-disabled"));
                break;
            case "orientation":
                this._detectOrientation(),
                this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation),
                this._refreshValue();
                break;
            case "value":
                this._animateOff = !0,
                this._refreshValue(),
                this._change(null, 0),
                this._animateOff = !1;
                break;
            case "values":
                this._animateOff = !0,
                this._refreshValue();
                for (r = 0; r < i; r += 1)
                    this._change(null, r);
                this._animateOff = !1;
                break;
            case "min":
            case "max":
                this._animateOff = !0,
                this._refreshValue(),
                this._animateOff = !1
            }
        },
        _value: function() {
            var e = this.options.value;
            return e = this._trimAlignValue(e),
            e
        },
        _values: function(e) {
            var t, n, r;
            if (arguments.length)
                return t = this.options.values[e],
                t = this._trimAlignValue(t),
                t;
            n = this.options.values.slice();
            for (r = 0; r < n.length; r += 1)
                n[r] = this._trimAlignValue(n[r]);
            return n
        },
        _trimAlignValue: function(e) {
            if (e <= this._valueMin())
                return this._valueMin();
            if (e >= this._valueMax())
                return this._valueMax();
            var t = this.options.step > 0 ? this.options.step : 1
              , n = (e - this._valueMin()) % t
              , r = e - n;
            return Math.abs(n) * 2 >= t && (r += n > 0 ? t : -t),
            parseFloat(r.toFixed(5))
        },
        _valueMin: function() {
            return this.options.min
        },
        _valueMax: function() {
            return this.options.max
        },
        _refreshValue: function() {
            var t, n, r, i, s, o = this.options.range, u = this.options, a = this, f = this._animateOff ? !1 : u.animate, l = {};
            this.options.values && this.options.values.length ? this.handles.each(function(r) {
                n = (a.values(r) - a._valueMin()) / (a._valueMax() - a._valueMin()) * 100,
                l[a.orientation === "horizontal" ? "left" : "bottom"] = n + "%",
                e(this).stop(1, 1)[f ? "animate" : "css"](l, u.animate),
                a.options.range === !0 && (a.orientation === "horizontal" ? (r === 0 && a.range.stop(1, 1)[f ? "animate" : "css"]({
                    left: n + "%"
                }, u.animate),
                r === 1 && a.range[f ? "animate" : "css"]({
                    width: n - t + "%"
                }, {
                    queue: !1,
                    duration: u.animate
                })) : (r === 0 && a.range.stop(1, 1)[f ? "animate" : "css"]({
                    bottom: n + "%"
                }, u.animate),
                r === 1 && a.range[f ? "animate" : "css"]({
                    height: n - t + "%"
                }, {
                    queue: !1,
                    duration: u.animate
                }))),
                t = n
            }) : (r = this.value(),
            i = this._valueMin(),
            s = this._valueMax(),
            n = s !== i ? (r - i) / (s - i) * 100 : 0,
            l[this.orientation === "horizontal" ? "left" : "bottom"] = n + "%",
            this.handle.stop(1, 1)[f ? "animate" : "css"](l, u.animate),
            o === "min" && this.orientation === "horizontal" && this.range.stop(1, 1)[f ? "animate" : "css"]({
                width: n + "%"
            }, u.animate),
            o === "max" && this.orientation === "horizontal" && this.range[f ? "animate" : "css"]({
                width: 100 - n + "%"
            }, {
                queue: !1,
                duration: u.animate
            }),
            o === "min" && this.orientation === "vertical" && this.range.stop(1, 1)[f ? "animate" : "css"]({
                height: n + "%"
            }, u.animate),
            o === "max" && this.orientation === "vertical" && this.range[f ? "animate" : "css"]({
                height: 100 - n + "%"
            }, {
                queue: !1,
                duration: u.animate
            }))
        }
    })
})(jQuery);
!function(a) {
    function f(a, b) {
        if (!(a.originalEvent.touches.length > 1)) {
            a.preventDefault();
            var c = a.originalEvent.changedTouches[0]
              , d = document.createEvent("MouseEvents");
            d.initMouseEvent(b, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null),
            a.target.dispatchEvent(d)
        }
    }
    if (a.support.touch = "ontouchend"in document,
    a.support.touch) {
        var e, b = a.ui.mouse.prototype, c = b._mouseInit, d = b._mouseDestroy;
        b._touchStart = function(a) {
            var b = this;
            !e && b._mouseCapture(a.originalEvent.changedTouches[0]) && (e = !0,
            b._touchMoved = !1,
            f(a, "mouseover"),
            f(a, "mousemove"),
            f(a, "mousedown"))
        }
        ,
        b._touchMove = function(a) {
            e && (this._touchMoved = !0,
            f(a, "mousemove"))
        }
        ,
        b._touchEnd = function(a) {
            e && (f(a, "mouseup"),
            f(a, "mouseout"),
            this._touchMoved || f(a, "click"),
            e = !1)
        }
        ,
        b._mouseInit = function() {
            var b = this;
            b.element.bind({
                touchstart: a.proxy(b, "_touchStart"),
                touchmove: a.proxy(b, "_touchMove"),
                touchend: a.proxy(b, "_touchEnd")
            }),
            c.call(b)
        }
        ,
        b._mouseDestroy = function() {
            var b = this;
            b.element.unbind({
                touchstart: a.proxy(b, "_touchStart"),
                touchmove: a.proxy(b, "_touchMove"),
                touchend: a.proxy(b, "_touchEnd")
            }),
            d.call(b)
        }
    }
}(jQuery);
(function(jQuery) {
    jQuery.fn.configureSlider = function(settings) {
        settings.displayTranslations = parseTranslations(settings.displayTranslations);
        settings.actualTranslations = parseTranslations(settings.actualTranslations);
        settings.invertedActualTranslations = parseTranslations(settings.invertedActualTranslations);
        var sliderContainer = $(this);
        var slider = sliderContainer.find('.slider');
        var sliderFrom = sliderContainer.find('.slider-from');
        var sliderTo = sliderContainer.find('.slider-to');
        var sliderButton = sliderContainer.find('.slider-button');
        var from = getSliderValue(settings.fromValue, settings.invertedActualTranslations, settings.multiplier, settings.min);
        var to = getSliderValue(settings.toValue, settings.invertedActualTranslations, settings.multiplier, settings.max);
        var values = processSliderValues(settings, from, to);
        slider.slider({
            min: settings.min,
            max: settings.max,
            step: settings.step,
            range: true,
            values: values,
            slide: function(event, ui) {
                if ($(ui.handle).is(':last-child')) {
                    updateToHandle(ui.value);
                } else {
                    updateFromHandle(ui.value);
                }
            },
            change: function(event, ui) {
                sliderButton.show();
            },
            create: function(event, ui) {
                updateToHandle(slider.slider('values', 1));
                updateFromHandle(slider.slider('values', 0));
            }
        });
        sliderButton.on('click', function() {
            window.location = '?' + getCurrentQueryUri(settings, slider.slider('values', 0), slider.slider('values', 1));
        });
        function updateToHandle(value) {
            sliderTo.css('left', calculateLeftPosition(value));
            if (settings.displayTranslations) {
                sliderTo.text(settings.prefix + settings.displayTranslations[value] + settings.suffix);
            } else {
                sliderTo.text(settings.prefix + value + settings.suffix);
            }
        }
        function updateFromHandle(value) {
            sliderFrom.css('left', calculateLeftPosition(value));
            if (settings.displayTranslations) {
                sliderFrom.text(settings.prefix + settings.displayTranslations[value] + settings.suffix);
            } else {
                sliderFrom.text(settings.prefix + value + settings.suffix);
            }
        }
        function calculateLeftPosition(value) {
            return (value - settings.min) / (settings.max - settings.min) * 100 + "%";
        }
        function parseTranslations(translationString) {
            if (translationString) {
                var translationArray = translationString.split("||");
                var translationMap = new Object();
                for (var i = 0; i < (translationArray.length); i++) {
                    var label = translationArray[i].split("=")[0];
                    var value = translationArray[i].split("=")[1];
                    if (label.split(',')[0]) {
                        translationMap[label.split(',')[0]] = value;
                        translationMap[label.split(',')[1]] = value;
                    }
                }
                ;return translationMap;
            } else {
                return false;
            }
        }
    }
    ;
})(jQuery);
function TwigkitSlider() {
    jQuery('.slider-container').each(function() {
        var settings = buildSettings($(this))
        jQuery(this).configureSlider(settings);
    });
}
function buildSettings(slider_container) {
    return {
        query: slider_container.data('query'),
        fieldName: slider_container.data('field-name'),
        min: slider_container.data('min'),
        max: slider_container.data('max'),
        step: slider_container.data('step'),
        fromValue: slider_container.data('from-value'),
        toValue: slider_container.data('to-value'),
        prefix: slider_container.data('prefix'),
        suffix: slider_container.data('suffix'),
        toLabel: slider_container.data('to-label'),
        displayTranslations: slider_container.data('display-translations'),
        actualTranslations: slider_container.data('actual-translations'),
        invertedActualTranslations: slider_container.data('inverted-actual-translations'),
        invertRange: slider_container.data('invert-range'),
        multiplier: slider_container.data('multiplier') ? slider_container.data('multiplier') : 1
    };
}
function getCurrentQueryUri(settings, sliderValue0, sliderValue1) {
    var tk = new TWIGKIT();
    if (settings.actualTranslations) {
        var from = settings.actualTranslations[(settings.invertRange == true) ? sliderValue1 : sliderValue0];
        var to = settings.actualTranslations[(settings.invertRange == true) ? sliderValue0 : sliderValue1];
    } else {
        var from = (settings.invertRange == true) ? sliderValue1 : sliderValue0 * settings.multiplier;
        var to = (settings.invertRange == true) ? sliderValue0 : sliderValue1 * settings.multiplier;
    }
    if (from.toString().indexOf(',') !== -1) {
        from = from.split(',')[0];
    }
    if (to.toString().indexOf(',') !== -1) {
        to = to.split(',')[1];
    }
    if (settings.displayTranslations) {
        var displayValue = settings.prefix + settings.displayTranslations[sliderValue0] + settings.suffix + " " + settings.toLabel + " " + settings.prefix + settings.displayTranslations[sliderValue1] + settings.suffix;
    } else {
        var displayValue = settings.prefix + sliderValue0 + settings.suffix + " " + settings.toLabel + " " + settings.prefix + sliderValue1 + settings.suffix;
    }
    if (!from && !to) {
        return settings.query;
    } else {
        var filter = tk.createRangeFilter(settings.fieldName, from, to, displayValue, false, true);
        return tk.addFilter(settings.query, filter);
    }
}
function getSliderValue(fromOrToValue, invertedActualTranslations, multiplier, minOrMax) {
    var sliderValue;
    if (fromOrToValue != '') {
        if (invertedActualTranslations) {
            sliderValue = invertedActualTranslations[fromOrToValue];
        } else {
            sliderValue = fromOrToValue / multiplier;
        }
        return ( sliderValue !== undefined ? sliderValue : minOrMax) ;
    } else {
        return minOrMax;
    }
}
function processSliderValues(settings, from, to) {
    if (settings.invertRange == true && settings.invertedActualTranslations != true) {
        return [to, from];
    } else {
        return [from, to];
    }
}
TwigkitRenderCallbacks.add("TwigkitSlider", TwigkitSlider);
jQuery(document).ready(function() {
    clickableParent(".breadcrumb, .sort-field, ol.tabs li, .user-settings li, ol.facet-chart li, li.page");
    $("#facets-toggle, .tk-header-facets-toggle").click(function(e) {
        var body = $("body");
        if (!body.hasClass('zero-results')) {
            body.toggleClass("show-facets");
        }
        e.preventDefault();
    });
    $('body.zero-results .tk-header-facets-toggle a').addClass("disabled");
    setTimeout(function() {
        $("body").removeClass("no-js");
    }, 250);
});
var preData = null;
var nextData = null;
var allPagesArray = null;
var deleteAlertmsg = null;
$(document).ready(function() {
    var jQ = jQuery.i18n.prop;
    $('input, textarea').placeholder();
    $('#saved-searches input.button').addClass('ga_saved_searches');
    $('#saved-searches input.text').addClass('ga_saved_searches_txt');
    deleteAlertmsg = jQ('confirm_job_alert_removal_msg');
    var decodedrecentSearch = getCookieEscHtml("recentSearch");
    var utm_campaignVal = getParameterByName("utm_campaign");
    var jobAlertUser = getCookieEscHtml("jobAlertUser");
    if (jobAlertUser == "" && $(".hays-alert_first").length) {
        $(".hays-alert_first").show();
        setCookieWithPath("jobAlertUser", true, 3650);
    }
    setSearchLocations();
    if (utm_campaignVal) {
        var utm_campaignCookie = getCookieEscHtml("utm_campaign");
        if (utm_campaignVal != utm_campaignCookie)
            setCookieWithParentPath("utm_campaign", utm_campaignVal, 7);
    }
    var recentSearchTerm = decodedrecentSearch.replace(/\+/g, ' ');
    try {
        recentSearchTerm = decodeURIComponent(recentSearchTerm);
    } catch (ex) {}
    var recentViewedJobsTerm = getCookieEscHtml("recentViewedJobs");
    var lastSearch = recentSearchTerm.substring(0, recentSearchTerm.indexOf(":"));
    var portalId = getCookieEscHtml("PortalId");
    var useragent = navigator.userAgent;
    var isMobile = false;
    if (useragent.match(/BlackBerry/i) || useragent.match(/Android/i) || useragent.match(/iPhone|iPod/i) || useragent.match(/Opera Mini/i) || useragent.match(/IEMobile/i)) {
        isMobile = true;
    }
    if (portalId)
        _gaq.push(['_setCustomVar', 1, 'webuser', portalId, 1]);
    if (recentViewedJobsTerm) {
        var recentviewsjob = compareRecentViewedJobsTime(recentViewedJobsTerm);
        $("#recentViewedJobsList").html(recentviewsjob);
    }
    if (recentSearchTerm) {
        var recentsearchesStr = compareRecentTime(recentSearchTerm);
        $("#recentSearchesList").html(recentsearchesStr);
        $("#recentText").click(function() {
            contactTracking('job hunt', 'recentSearches', lastSearch);
        });
        $("#recentText").html(lastSearch);
        $("#recentText").attr("href", "../search/?q=" + lastSearch.replace(/ /g, '+'));
        $("#recentSearch").show();
        $(".clear-recent-search").click(function() {
            $("#recentSearch").hide();
            setCookieWithPath("recentSearch", "", -1);
        });
    } else {
        if (!recentViewedJobsTerm)
            $(".l-widgets-recentpanel").hide();
        else {
            $("#recent-searches-container").hide();
            $("#viewed-jobs-container").show();
            $("#viewRecentjobsList").addClass('active');
            $("#viewRecentSearchList").removeClass('active');
        }
    }
    $("#changeEmail .field").click(function() {
        $(".error-messages").css("display", "none");
    });
    $("#closeSuccess").click(function(e) {
        $("#forgetSuccessMsg").css('display', 'inline-block');
        $("#forgetSuccessMsg").css('display', 'none');
        $("#forgetfailureMsg").css('display', 'inline-block');
        $("#forgetfailureMsg").css('display', 'none');
        $("#ChangePasswordSuccessMsg").css('display', 'inline-block');
        $("#ChangePasswordSuccessMsg").css('display', 'none');
        e.preventDefault();
    });
    $("#searchSubmit").click(function() {
        var textval = $("#jobTitleHome").val();
        textval = textval.replace(/\+/g, ' ');
        textval = textval.replace(/\%20/g, ' ');
        $("#jobTitleHome").val(textval);
    });
    $('.l-widgets-timesheet').find('a').click(function() {
        contactTracking('timeSheet', 'Timesheet button', '');
    });
    $("#viewRecentSearch").click(function(e) {
        $("#viewed-jobs-container").hide();
        $("#recent-searches-container").show();
        $("#viewRecentSearchList").addClass('active');
        $("#viewRecentjobsList").removeClass('active');
        e.preventDefault();
    });
    $("#viewRecentjobs").click(function(e) {
        $("#recent-searches-container").hide();
        $("#viewed-jobs-container").show();
        $("#viewRecentjobsList").addClass('active');
        $("#viewRecentSearchList").removeClass('active');
        e.preventDefault();
    });
    $("#clearAllRecent").click(function(e) {
        if ($('#viewed-jobs-container').css('display') == 'none') {
            recentSearchTerm = "";
            $("#recentSearch").hide();
            $("#recentSearchesList").html("<li>" + jQ('no_recent_searches') + "</li>");
            setCookieWithPath("recentSearch", "", -1);
        } else {
            recentViewedJobsTerm = "";
            $("#recentViewedJobsList").html("<li>" + jQ('no_recent_viewed_jobs') + "</li>");
            setCookieWithPath("recentViewedJobs", "", -1);
        }
        if (!recentSearchTerm && !recentViewedJobsTerm) {
            $(".l-widgets-recentpanel").hide();
        }
        e.preventDefault();
    });
    $('form input[name="currentPassword"]').focus(function() {
        $('.currentpass_blank_error').hide();
    });
    $('form input[name="changedPassword"]').focus(function() {
        $('.changedpass_blank_error').hide();
    });
    $('form input[name="confirmPassword"]').focus(function() {
        $('.confirmpass_blank_error').hide();
    });
    $("#PassChanged").click(function() {
        $('.password_match').hide();
        $('.currentpass_blank_error').hide();
        $('.changedpass_blank_error').hide();
        $('.confirmpass_blank_error').hide();
        $('.passCriteria').hide();
        $('.passValidation').hide();
        var currentPassword = $('#currentPassword').val();
        var changedPassword = $('#changedPassword').val();
        var confirmPassword = $('#confirmPassword').val();
        var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d!?%*@_$-]{8,20}$/g;
        var recaptcha = $('.g-recaptcha-response').val();
        var isVaild = false;
        var captchaVaild = true;
        var captchaValidMsg = true;
        var showCaptcha = $('#showCaptcha_CP').val();
        $(".countermsgs").css('display', 'none');
        $('.countermsgs').hide();
        if ((changedPassword == null || changedPassword == "") || (currentPassword == null || currentPassword == "") || (confirmPassword == null || confirmPassword == "")) {
            if (currentPassword == null || currentPassword == "") {
                $('.currentpass_blank_error').show();
                $('.same_changePassword').hide();
            }
            if (changedPassword == null || changedPassword == "") {
                $('.changedpass_blank_error').show();
                $('.same_changePassword').hide();
            }
            if (confirmPassword == null || confirmPassword == "") {
                $('.confirmpass_blank_error').show();
                $('.same_changePassword').hide();
            }
            return false;
        }
        if ((currentPassword == changedPassword) && (changedPassword != null || changedPassword != "")) {
            $('.same_changePassword').show();
            $('.password_match').hide();
            $('.passCriteria').hide();
            $('.passBlank').hide();
            $('.passValidation').hide();
            return false;
        }
        if (changedPassword != confirmPassword && (changedPassword != null || changedPassword != "") && (confirmPassword != null || confirmPassword != "")) {
            $('.passValidation').show();
            $('.same_changePassword').hide();
            return false;
        } else if (changedPassword.length > 0) {
            if (!re.test(changedPassword)) {
                $('.passCriteria').show();
                $('.same_changePassword').hide();
                return false;
            }
        }
        if ($('.g-recaptcha').length > 0) {
            if (recaptcha == "" || recaptcha == null || recaptcha == 'undefined' && captchaValidMsg) {
                $(".captchaBlank").css('display', 'inline-block');
                $('.captchaBlank').show();
                return false;
            }
        }
        if ($('#showCaptcha_CP').val() == true) {
            if ($('.g-recaptcha').length > 0) {
                captchaVaild = false;
                $.ajax({
                    url: "/Rest/Verify/" + $('.g-recaptcha-response').val(),
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    success: function(json) {
                        captchaVaild = true;
                        captchaValidMsg = false;
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        captchaVaild = false;
                        captchaValidMsg = true;
                        $(".captchaBlank").css('display', 'inline-block');
                        $('.captchaBlank').show();
                    }
                });
                if (!captchaVaild) {
                    isVaild = false;
                    $(".captchaBlank").css('display', 'inline-block');
                    $('.captchaBlank').show();
                }
                if (captchaVaild) {
                    isVaild = true;
                    $(".incorrect-field").removeClass("showing");
                    $(".incorrect-field").addClass("hidden");
                    $(".captchaBlank").css('display', 'none');
                    $('.captchaBlank').hide();
                }
            }
        }
        if ($('.g-recaptcha').length > 0) {
            if (!captchaVaild) {
                $(".captchaBlank").css('display', 'inline-block');
                $('.captchaBlank').show();
                return false;
            }
        }
    });
    $(".facet .filter > a").click(function(Obj) {
        var term = $(this).attr("title");
        var classData = $(this).parents(".facet").attr("class");
        var facetName = $.grep(classData.split(" "), function(v, i) {
            return v.indexOf('facet-') === 0;
        }).join();
        contactTracking('Filter', facetName, term);
    });
    $(".bookmark-list .bookmark > a.title").click(function(Obj) {
        var term = $(this).text();
        contactTracking('Filter', 'shorlistsearch', term);
    });
    $(".saved-query-list .saved-query > a.title").click(function(Obj) {
        var term = $(this).text();
        contactTracking('Filter', 'mySearches', term);
    });
    $("#EmailChanged").click(function() {
        $('.emailValidation').hide();
        var currentEmail = $('#currentEmail').val();
        var changedEmail = $('#changedEmail').val();
        var confirmPassword = $('#confirmPassword').val();
        var recaptcha = $('.g-recaptcha-response').val();
        var isVaild = false;
        var captchaVaild = true;
        var captchaValidMsg = true;
        var showCaptcha = $('#showCaptcha_CE').val();
        $(".countermsgs").css('display', 'none');
        $('.countermsgs').hide();
        var validateString = /^(([^<>()[\]\\.,;:\s@\"\+]+(\.[^<>()[\]\\.,;:\s@\"\+]+)*)|(\".\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
        if ((currentEmail == null || currentEmail == "") || (changedEmail == null || changedEmail == "") || (confirmPassword == null || confirmPassword == "")) {
            $('.emailBlank').show();
            $('.emailCriteria').hide();
            $('.emailValidation').hide();
            $('.email_match').hide();
            return false;
        } else if (currentEmail != changedEmail && (changedEmail != null || changedEmail != "") && (confirmPassword != null || confirmPassword != "")) {
            $('.email_match').hide();
            $('.emailCriteria').hide();
            $('.emailBlank').hide();
            $('.emailValidation').show();
            return false;
        } else if ((!validateString.test(changedEmail)) && currentEmail != null && currentEmail != "" && changedEmail != null && changedEmail != "" && confirmPassword != null && confirmPassword != "") {
            $('.emailCriteria').show();
            $('.emailBlank').hide();
            $('.emailValidation').hide();
            $('.email_match').hide();
            return false;
        }
        if ($('.g-recaptcha').length > 0) {
            if (recaptcha == "" || recaptcha == null || recaptcha == 'undefined' && captchaValidMsg) {
                $(".captchaBlank").css('display', 'inline-block');
                $('.captchaBlank').show();
                return false;
            }
        }
        if ($('#showCaptcha_CE').val() == true) {
            if ($('.g-recaptcha').length > 0) {
                captchaVaild = false;
                $.ajax({
                    url: "/Rest/Verify/" + $('.g-recaptcha-response').val(),
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    success: function(json) {
                        captchaVaild = true;
                        captchaValidMsg = false;
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        captchaVaild = false;
                        captchaValidMsg = true;
                        $(".captchaBlank").css('display', 'inline-block');
                        $('.captchaBlank').show();
                    }
                });
                if (!captchaVaild) {
                    isVaild = false;
                    $(".captchaBlank").css('display', 'inline-block');
                    $('.captchaBlank').show();
                }
                if (captchaVaild) {
                    isVaild = true;
                    $(".incorrect-field").removeClass("showing");
                    $(".incorrect-field").addClass("hidden");
                    $(".captchaBlank").css('display', 'none');
                    $('.captchaBlank').hide();
                }
            }
        }
        if ($('.g-recaptcha').length > 0) {
            if (!captchaVaild) {
                $(".captchaBlank").css('display', 'inline-block');
                $('.captchaBlank').show();
                return false;
            }
        }
    });
    $(".clear-job-not-available-search").click(function() {
        $(".job-not-available-search").hide();
    });
    $(".enable-search-toggle .pl-toggle-left").on('click', function() {
        $("body").toggleClass("show-searchbox");
        $('body').scrollTop(0);
    });
    $(".hays-result-description").click(function() {
        var pageJDClass = $.grep(this.className.split(" "), function(v, i) {
            return v.indexOf('pg') === 0;
        }).join();
        contactTracking('Search', 'position', pageJDClass);
        dataLayer.push({
            'event': 'Top Menu',
            'ca1': 'Search',
            'ca2': 'Position',
            'ca3': pageJDClass
        });
    });
    $("#salary-form").submit(function() {
        var salaryTitle = $("#salary-title").val();
        var salaryLocation = $("#salary-location").val();
        contactTracking('salary Calc', 'CheckSalary', salaryTitle + '-' + salaryLocation);
    });
    var alertValue = getCookie("alertValue");
    var queryStringValue = window.location.search.substring(1);
    var arr1 = alertValue.split("&");
    var arr2 = queryStringValue.split("&");
    function compareArrays(arr1, arr2) {
        return $(arr1).not(arr2).length == 0 && $(arr2).not(arr1).length == 0
    }
    ;var resultValue = compareArrays(arr1, arr2);
    if (resultValue == true && queryStringValue.indexOf("alertId") == -1) {
        $("#alertform").hide();
    }
    var useragentValue = '';
    useragentValue = $("#userAgentType").val();
    if (useragentValue == '-Mobile') {
        $("#alert_email_id").hide();
    }
    var portalprofileid = null;
    portalprofileid = $("#portalprofileid").val();
    if (portalprofileid > 0) {
        $("#alert-container").addClass("login-container");
    }
    if ($("#breadcrumb").is(":hidden") == false) {
        $('.hays-jobs .last').css('padding-bottom', '4em');
    }
    $('#alert_button').click(function() {
        var alertId = $("#alertId").val();
        var useragentValue = $("#userAgentType").val();
        var alertEmailValue = $("#alert_email_id").val();
        var alertPortalprofileid = $("#portalprofileid").val();
        if (useragentValue == '-Mobile' && $("#alert_email_id").is(":hidden") && alertPortalprofileid.length == 0) {
            $("#alert_email_id").show();
        } else {
            if (alertId == "" || alertId == null || alertId == 'undefined') {
                alertSetup(window.location.search);
            } else {
                EditAlertSetup(window.location.search);
            }
        }
    });
    $(".clear-alert-box").click(function() {
        $("#alertform").hide();
    });
    $(".saved-query-form").submit(function() {
        var queryTrack = $(".saved-query-form").find('input[name="name"]').val();
        if (queryTrack.trim()) {
            contactTracking('job hunt', 'saveSearch', queryTrack);
        }
    });
    $("#saved-searches").find(".popover-link").click(function() {
        var queryTrack = $(".query").val();
        contactTracking('job hunt', 'mySearches', queryTrack);
    });
    $("#bookmark-list").find(".popover-link").click(function() {
        var queryTrack = $(".query").val();
        contactTracking('job hunt', 'shorlistsearch', queryTrack);
    });
    $('.jobType').click(function() {
        var jobtype = $(this).attr('id');
        var url = window.location.href;
        var start = url.indexOf("f=");
        var removePart = '';
        if (start != -1) {
            var end = url.indexOf("&", start + 1);
            if (end != -1)
                removePart = url.substring(start, (end + 1));
            else
                removePart = url.substring(start);
            url = url.replace(removePart, "");
        }
        if (jobtype == 'perm') {
            furl = url + "&f=xjobType['P']['Perm']*";
            window.location.href = furl;
        } else if (jobtype == 'temp') {
            var tempurl = url + "&f=xjobType['T']['Temp']*";
            window.location.href = tempurl;
        } else if (jobtype == 'cont') {
            var curl = url + "&f=xjobType['C']['Contract']*";
            window.location.href = curl;
        }
    });
    setTimeout(function() {
        var queryTrack = "";
        $(".tempo-suggestions").find(".selected > a").live('click', function() {
            if ($(this).attr('rel') !== undefined) {
                queryTrack = $(this).attr('rel').toString().replace("/search/?q=", "");
                queryTrack = queryTrack.replace("+", " ");
                if (queryTrack.trim()) {
                    setRecentSearchCookie(queryTrack);
                    contactTracking('job hunt', 'autosuggest', queryTrack);
                }
            }
        });
        $('.query').on('keyup', function(e) {
            var key = e.which;
            if (key == 38 || key == 40) {
                queryTrack = $(".tempo-suggestions").find(".selected > a").attr("rel").toString().replace("/search/?q=", "");
                queryTrack = queryTrack.replace("+", " ");
            }
            if (key == 13) {
                if (queryTrack.trim()) {
                    setRecentSearchCookie(queryTrack);
                    contactTracking('job hunt', 'autosuggest', queryTrack);
                }
            }
        });
    }, '2000');
    if ($('.query').val() == '')
        $('.searchform').find('input[type="submit"]').prop("disabled", true);
    $('.query').on('keypress keydown keyup click', function(e) {
        var key = e.which;
        if ($('.query').val() != '') {
            $('.searchform').find('input[type="submit"]').prop("disabled", false);
        } else {
            $('.searchform').find('input[type="submit"]').prop("disabled", true);
        }
        if (key == 13) {
            if ($(this).val() == '') {
                e.preventDefault();
                return false;
            }
        }
    });
    $('.searchform').submit(function() {
        if ($('.query').val() == '') {
            $("#jobTitleHome").addClass("has-error-home");
            return false;
        } else {
            var findParam = "";
            findParam = getParameterByName("stat")
            var queryTrack = $(".query").val();
            var locationQuery = $(".location").val();
            if (findParam.toString().trim() === "e") {
                contactTracking('job hunt', 'SearchButton', queryTrack + "_JobNotAvail");
            } else {
                setRecentSearchCookie(queryTrack);
                if (locationQuery == '')
                    contactTracking('job hunt', 'SearchButton', queryTrack);
                else
                    contactTracking('job hunt', 'SearchButton', queryTrack + '-' + locationQuery);
            }
        }
    });
    function setRecentSearchCookie(value) {
        var currdate = new Date();
        var recentArr = recentSearchTerm.split("|");
        var duplicateRemovestr = "";
        if (recentArr.length > 0) {
            for (i = 0; i < recentArr.length; i++) {
                var ithVal = recentArr[i];
                ithVal = htmlDecode(ithVal);
                var value1 = value.replace(/\+/g, ' ');
                try {
                    value1 = decodeURIComponent(value1);
                } catch (ex) {}
                if (ithVal.substring(0, ithVal.indexOf(":")).toLowerCase() == value1.toLowerCase()) {} else {
                    if (duplicateRemovestr != null && duplicateRemovestr != '')
                        duplicateRemovestr = duplicateRemovestr + "|" + htmlDecode(recentArr[i]);
                    else
                        duplicateRemovestr = htmlDecode(recentArr[i]);
                }
            }
            recentSearchTerm = duplicateRemovestr;
            if (recentSearchTerm.split("|").length >= 3) {
                recentSearchTerm = recentSearchTerm.substring(0, recentSearchTerm.lastIndexOf("|"));
            }
        }
        value = value + ":" + currdate;
        if (recentSearchTerm != null && recentSearchTerm != '') {
            value = value + "|" + recentSearchTerm;
        }
        setCookieWithPath("recentSearch", value, 10);
    }
    function compareRecentTime(timeString) {
        var currdate = new Date();
        var array = timeString.split("|");
        var newStr = "";
        for (i = 0; i < array.length; i++) {
            var str = array[i];
            var pastdate = new Date(str.substring(str.indexOf(":"), str.length));
            var timeDiff = Math.round(currdate.getTime() - pastdate.getTime());
            var diffmin = Math.floor(timeDiff / (1000 * 60));
            var diffhours = Math.floor(timeDiff / (1000 * 3600));
            var diffdays = Math.floor(timeDiff / (1000 * 3600 * 24));
            var ftimediff = "";
            if (diffdays > 0) {
                if (diffdays == 1)
                    ftimediff = diffdays + " " + jQ('widget_day_ago');
                else
                    ftimediff = diffdays + " " + jQ('widget_days_ago');
            } else if (diffhours > 0) {
                if (diffhours == 1)
                    ftimediff = diffhours + " " + jQ('widget_hour_ago');
                else
                    ftimediff = diffhours + " " + jQ('widget_hours_ago');
            } else if (diffmin > 0) {
                if (diffmin == 1)
                    ftimediff = diffmin + " " + jQ('widget_min_ago');
                else
                    ftimediff = diffmin + " " + jQ('widget_mins_ago');
            } else {
                ftimediff = jQ('widget_few_seconds_ago');
            }
            var searchTerm = str.substring(0, str.indexOf(":"));
            var searchTitle = searchTerm;
            var len = searchTitle.length;
            if (isMobile) {
                if (searchTitle.length >= 60) {
                    searchTitle = searchTitle.substring(0, 60) + "...";
                }
            } else {
                if (searchTitle.length >= 42) {
                    searchTitle = searchTitle.substring(0, 42) + "...";
                }
            }
            if (newStr != "") {
                newStr = newStr + "<li><a href='/search/?q=" + searchTerm + "'" + ' onclick="contactTracking(\'widget\',\'widgetmySearches\',\'' + searchTerm + "')\"" + ">" + searchTitle + "</a><span>" + ftimediff + "</span>";
            } else {
                newStr = "<li><a href='/search/?q=" + searchTerm + "'" + ' onclick="contactTracking(\'widget\',\'widgetmySearches\',\'' + searchTerm + "')\"" + ">" + searchTitle + "</a><span>" + ftimediff + "</span>";
            }
        }
        return newStr;
    }
    function compareRecentViewedJobsTime(ViewJobString) {
        var currdate = new Date();
        var array = ViewJobString.split("|");
        var newStr = "";
        for (i = 0; i < array.length; i++) {
            var str = array[i];
            var joburl = "";
            var count = (str.match(/:/g) || []).length;
            var jobId = str.substring(0, str.indexOf(":"));
            var temp = str.substring(str.indexOf(":") + 1, str.length);
            var jobTitle = temp.substring(0, temp.indexOf(":"));
            if (count == 5) {
                temp = temp.substring(temp.indexOf(":") + 1, temp.length);
                joburl = temp.substring(0, temp.indexOf(":"));
            }
            var pastdate = new Date(temp.substring(temp.indexOf(":"), temp.length));
            var timeDiff = Math.round(currdate.getTime() - pastdate.getTime());
            var diffmin = Math.floor(timeDiff / (1000 * 60));
            var diffhours = Math.floor(timeDiff / (1000 * 3600));
            var diffdays = Math.floor(timeDiff / (1000 * 3600 * 24));
            var ftimediff = "";
            if (diffdays > 0) {
                if (diffdays == 1)
                    ftimediff = diffdays + " " + jQ('widget_day_ago');
                else
                    ftimediff = diffdays + " " + jQ('widget_days_ago');
            } else if (diffhours > 0) {
                if (diffhours == 1)
                    ftimediff = diffhours + " " + jQ('widget_hour_ago');
                else
                    ftimediff = diffhours + " " + jQ('widget_hours_ago');
            } else if (diffmin > 0) {
                if (diffmin == 1)
                    ftimediff = diffmin + " " + jQ('widget_min_ago');
                else
                    ftimediff = diffmin + " " + jQ('widget_mins_ago');
            } else {
                ftimediff = jQ('widget_few_seconds_ago');
            }
            if (isMobile) {
                if (jobTitle.length >= 60) {
                    jobTitle = jobTitle.substring(0, 60) + "...";
                }
            } else {
                if (jobTitle.length >= 42) {
                    jobTitle = jobTitle.substring(0, 42) + "...";
                }
            }
            if (joburl != "") {
                if (newStr != "") {
                    newStr = newStr + "<li><a href='/Job/Detail/" + joburl + "?applyId=" + jobId + "'" + ' onclick="contactTracking(\'widget\',\'widgetmyjobs\',\'' + jobId + "')\"" + ">" + jobTitle + "</a><span>" + ftimediff + "</span></li>";
                } else {
                    newStr = "<li><a href='/Job/Detail/" + joburl + "?applyId=" + jobId + "'" + ' onclick="contactTracking(\'widget\',\'widgetmyjobs\',\'' + jobId + "')\"" + ">" + jobTitle + "</a><span>" + ftimediff + "</span></li>";
                }
            } else {
                if (newStr != "") {
                    newStr = newStr + "<li><a href='/Job/Detail/" + jobId + "'" + ' onclick="contactTracking(\'widget\',\'widgetmyjobs\',\'' + jobId + "')\"" + ">" + jobTitle + "</a><span>" + ftimediff + "</span></li>";
                } else {
                    newStr = "<li><a href='/Job/Detail/" + jobId + "'" + ' onclick="contactTracking(\'widget\',\'widgetmyjobs\',\'' + jobId + "')\"" + ">" + jobTitle + "</a><span>" + ftimediff + "</span></li>";
                }
            }
        }
        return newStr;
    }
    $('#hays-cookie-notice-continue').click(function() {
        $('#hays-cookie-notice').hide();
    });
    $('#hays-language-select').change(function(e) {
        var languagePref = $('#hays-language-select').val();
        if (languagePref) {
            contactTracking('language', 'ChangeLanguage', languagePref);
            setCookieWithParentPath("multi_country", languagePref);
            var redirectTo = $('option:selected', this).attr("urlref");
            window.location.href = redirectTo;
        }
        e.preventDefault();
    });
    if ($('#hays-menu-icon-notifications').html() == '') {
        var menuIconCount = $('#hays-menu-icon-notifications');
        var menuBannerCount = $('#hays-menu-interview-count');
        var menuBannerCountClass = $('#hays-menu-interview-count').attr("class");
        $.ajax({
            url: '/hays/rest/interview/notifications',
            type: 'get',
            success: function(data) {
                var menuAlertText = menuBannerCountClass.split("/");
                var alertText = menuAlertText[1];
                if (data > 0) {
                    if (data === 1) {
                        alertText = menuAlertText[0];
                    }
                    $('#hays-menu-icon-notifications').html(data + alertText).show();
                    menuIconCount.html(data).show();
                    menuBannerCount.html(data + ' ' + alertText).show();
                }
                if ($('#AppliedApplicationReq').length > 0) {
                    $.ajax({
                        url: "/hays/rest/applied/",
                        dataType: "json",
                        type: "GET",
                        contentType: "application/json; charset=utf-8",
                        async: false,
                        success: function(json) {},
                        error: function(XMLHttpRequest, textStatus, errorThrown) {}
                    });
                }
            },
            error: function(e) {}
        });
    }
    if (navigator.geolocation) {
        $('.hays-near-me').show();
    }
    $('#office-locator-near-me-button').click(function() {
        navigator.geolocation.getCurrentPosition(success);
        function success(position) {
            var lat = position.coords.latitude;
            var long = position.coords.longitude;
            if (lat && long) {
                $('#user-latitude').val(lat);
                $('#user-longitude').val(long);
                $('#office-location-idNearMe').val(0);
                $('#office-location').val('');
                $('#office-locator-near-me-button').prop('value', jQ('searching_text') + '...').addClass('disabled').attr('disabled', 'true');
                $('#office-search').submit();
            } else {
                $('#user-longitude,#user-latitude').val('');
            }
        }
    });
    if ($('#user-latitude').val()) {
        $('#near-me-text').text(' near me');
    } else {
        $('#near-me-text').text('');
    }
    $(".multitoggle").on('click', function() {
        var list = $("#multiLocationList");
        if (list.hasClass('hidden')) {
            $("#multiLocationList").removeClass('hidden').addClass('showing');
            $(".multitoggle").addClass('active');
        } else if (list.hasClass('showing')) {
            $("#multiLocationList").removeClass('showing').addClass('hidden');
            $(".multitoggle").removeClass('active');
        }
    })
    $("input", this).click(function() {
        var k = jQ('select_location_watermark');
        var h = "";
        var g = $(".multiselect");
        $(g).find("input:checked").each(function(q) {
            if (q > 0) {
                $(".multitoggle").removeClass('location_apac_watermark');
                k = jQ('multi_locations_selected_text')
            } else {
                k = $("label[for=" + $(this).attr("id") + "]", g).text()
            }
            h = h + $(this).attr("value") + "@"
        });
        if (this.checked) {
            $(".multitoggle").removeClass('location_apac_watermark');
            $(this).siblings("ol").addClass("inputdisabled").find("input[type=checkbox]").attr("checked", false).attr("disabled", "disabled");
            h = "";
            $(g).find("input:checked").each(function(q) {
                if (q > 0) {
                    $(".multitoggle").removeClass('location_apac_watermark');
                    k = jQ('multi_locations_selected_text')
                } else {
                    k = $("label[for=" + $(this).attr("id") + "]", g).text()
                }
                h = h + $(this).attr("value") + "@"
            });
            $(g).find(".multitoggle").text(k);
            $("input[name=locationSet]").val(h.substring(0, h.length - 1));
        } else {
            $("input[name=locationSet]").val(h.substring(0, h.length - 1));
            if ($(this).parents(".location_multiselect").length) {
                if ($(g).find("input:checked").length === 0) {
                    k = jQ('select_location_watermark');
                    $(".multitoggle").addClass('location_apac_watermark');
                    $(".multitoggle", g).addClass("grey")
                } else {
                    if ($(g).find("input:checked").length === 1) {
                        $(".multitoggle").removeClass('location_apac_watermark');
                        k = $("label[for=" + $(g).find("input:checked").attr("id") + "]", g).text()
                    } else {
                        $(".multitoggle").removeClass('location_apac_watermark');
                        k = jQ('multi_locations_selected_text')
                    }
                }
            }
            $(".multitoggle", g).text(k);
            $(this).siblings("ol").removeClass("inputdisabled").find("input[type=checkbox]").attr("disabled", false)
        }
    })
    function populateApacLocations() {
        if ($("#LocAppender").length > 0) {
            $.ajax({
                url: "/hays/rest/locationapac/",
                dataType: "json",
                type: "GET",
                contentType: "application/json; charset=utf-8",
                async: false,
                success: function(json) {
                    var appendHTML = "</ol></li>";
                    var locWatermark = jQ('select_location_watermark_text');
                    var counter = 3;
                    var str = '<div tabindex="0" class="jaccess multitoggle ms_hover grey location_apac_watermark">' + locWatermark + '</div><ol id="multiLocationList" class="hidden"><li><ol>';
                    var count = 0;
                    $.each(json, function(i, value) {
                        count = 1;
                        if (value.LEVEL_NO == counter) {
                            str = str + appendHTML + '<li class="level' + value.LEVEL_NO + '"><input class="multiSelectCheckbox" type="checkbox" name="location_group1" id="' + value.LOCATION_ID + '" value="' + value.LOCATION_ID + ',' + value.LOCATION_DESC + ',' + value.LEVEL_NO + ',' + value.NE_LONGITUDE + ',' + value.NE_LATITUDE + '"><label for="' + value.LOCATION_ID + '" id="label' + value.LOCATION_ID + '">' + value.LOCATION_DESC + '</label><ol>';
                            counter = value.LEVEL_NO;
                        }
                        if (value.LEVEL_NO > counter) {
                            str = str + '<li class="level' + value.LEVEL_NO + '"><input class="multiSelectCheckbox" type="checkbox" name="location_group1" id="' + value.LOCATION_ID + '" value="' + value.LOCATION_ID + ',' + value.LOCATION_DESC + ',' + value.LEVEL_NO + ',' + value.NE_LONGITUDE + ',' + value.NE_LATITUDE + '"><label for="' + value.LOCATION_ID + '" id="label' + value.LOCATION_ID + '">' + value.LOCATION_DESC + '</label><ol>';
                            counter = value.LEVEL_NO;
                        }
                        if (value.LEVEL_NO < counter) {
                            var diff = counter - value.LEVEL_NO;
                            for (var i = 0; i < diff; i++) {
                                str = str + appendHTML;
                            }
                            str = str + '<li class="level' + value.LEVEL_NO + '"><input class="multiSelectCheckbox" type="checkbox" name="location_group1" id="' + value.LOCATION_ID + '" value="' + value.LOCATION_ID + ',' + value.LOCATION_DESC + ',' + value.LEVEL_NO + ',' + value.NE_LONGITUDE + ',' + value.NE_LATITUDE + '"><label for="' + value.LOCATION_ID + '" id="label' + value.LOCATION_ID + '">' + value.LOCATION_DESC + '</label><ol>'
                            counter = value.LEVEL_NO;
                        }
                    });
                    str = str + '</ol>';
                    $('#LocAppender').append(str);
                },
                error: function(XMLHttpRequest, textStatus, errorThrown) {
                    alert(textStatus + ": " + errorThrown);
                }
            });
        }
    }
    function setSearchLocations() {
        var obj = getQueryParams(window.location.search.substring(1));
        var keywordValue;
        $.map(obj, function(person) {
            if (person.k == "locationSet") {
                keywordValue = person.v.substring(person.v.indexOf("=") + 1);
                var locFields = '';
                locFields = keywordValue;
                if (locFields != '' && locFields != 'undefined') {
                    var locFieldsArr = locFields.split('@');
                    var location_desc = '';
                    for (var j = 0; j < locFieldsArr.length; j++) {
                        var locAttrArr = locFieldsArr[j].split(',')
                        var location = locAttrArr[0];
                        var loc = locAttrArr[0];
                        location_desc = locAttrArr[1];
                        $('.apac_google input[type="checkbox"]').each(function() {
                            if ($(this).attr('id') == loc) {
                                $(this).attr('checked', 'true');
                                $(this).siblings("ol").addClass("inputdisabled").find("input[type=checkbox]").attr("checked", false).attr("disabled", "disabled")
                            }
                        });
                    }
                    if (locFieldsArr.length > 1) {
                        $(".multitoggle").removeClass('location_apac_watermark');
                        $(".multitoggle").text(jQ('multi_locations_selected_text'));
                    } else {
                        $(".multitoggle").removeClass('location_apac_watermark');
                        $(".multitoggle").text(location_desc);
                    }
                }
            }
        });
    }
    $('#loginApp').click(function() {
        var email = $('#loginuser').val();
        var password = $('#loginpass').val();
        var recaptcha = $('.g-recaptcha-response').val();
        var isVaild = false;
        var captchaVaild = true;
        var captchaValidMsg = true;
        $(".countermsgs").css('display', 'none');
        $('.countermsgs').hide();
        if (email == "" || email == null || email == 'undefined' || password == null || password == "" || password == 'undefined') {
            $(".incorrect-field").removeClass("hidden");
            $(".incorrect-field").addClass("showing");
            if ($('.g-recaptcha').length > 0) {
                if (recaptcha == "" || recaptcha == null || recaptcha == 'undefined' && captchaValidMsg) {
                    $(".captchaBlank").css('display', 'inline-block');
                    $('.captchaBlank').show();
                }
            }
        }
        if ((email != null && email != "" && password != null && password != "") ) {
            if ($('.g-recaptcha').length > 0) {
                captchaVaild = false;
                $.ajax({
                    url: "/Rest/Verify/" + $('.g-recaptcha-response').val(),
                    dataType: "json",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    async: false,
                    success: function(json) {
                        captchaVaild = true;
                        captchaValidMsg = false;
                    },
                    error: function(XMLHttpRequest, textStatus, errorThrown) {
                        captchaVaild = false;
                        captchaValidMsg = true;
                        $(".captchaBlank").css('display', 'inline-block');
                        $('.captchaBlank').show();
                    }
                });
                if (!captchaVaild) {
                    isVaild = false;
                    $(".captchaBlank").css('display', 'inline-block');
                    $('.captchaBlank').show();
                }
            }
            if (captchaVaild) {
                isVaild = true;
                $(".captchaBlank").css('display', 'none');
                $('.captchaBlank').hide();
            }
        }
        if ($('.g-recaptcha').length > 0) {
            if (!captchaVaild) {
                $(".captchaBlank").css('display', 'inline-block');
                $('.captchaBlank').show();
            }
        }
        return isVaild;
    });
    $("#resetPass").click(function() {
        $('.passValidation').hide();
        var changedPassword = $('#newPassword').val();
        var confirmPassword = $('#confirmPassword').val();
        var validateString = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d!?%*@_$-]{8,20}$/g;
        if (changedPassword.length > 0 && confirmPassword.length > 0) {
            if (changedPassword.length < 8 || changedPassword.match(/[0-9]/) == null) {
                $('.passCriteria').show();
                $('.passBlank').hide();
                $('.passValidation').hide();
                $('.password_match').hide();
                $('.passBlankNew').hide();
                $('.passBlankConfirm').hide();
                $('.passChangedSuccess-messages').hide();
                return false;
            }
        }
        if ((changedPassword == null || changedPassword == "") && (confirmPassword == null || confirmPassword == "")) {
            $('.passBlank').show();
            $('.passCriteria').hide();
            $('.passValidation').hide();
            $('.password_match').hide();
            $('.passBlankNew').hide();
            $('.passBlankConfirm').hide();
            $('.passChangedSuccess-messages').hide();
            return false;
        }
        if ((changedPassword == null || changedPassword == "") && (confirmPassword != null || confirmPassword != "")) {
            $('.passBlankNew').show();
            $('.passCriteria').hide();
            $('.passValidation').hide();
            $('.password_match').hide();
            $('.passBlankConfirm').hide();
            $('.passBlank').hide();
            $('.passChangedSuccess-messages').hide();
            return false;
        }
        if ((changedPassword != null || changedPassword != "") && (confirmPassword == null || confirmPassword == "")) {
            $('.passBlankConfirm').show();
            $('.passCriteria').hide();
            $('.passValidation').hide();
            $('.password_match').hide();
            $('.passBlankNew').hide();
            $('.passBlank').hide();
            $('.passChangedSuccess-messages').hide();
            return false;
        } else if ((changedPassword != confirmPassword) && (changedPassword != null || changedPassword != "") && (confirmPassword != null || confirmPassword != "")) {
            $('.password_match').hide();
            $('.passCriteria').hide();
            $('.passBlank').hide();
            $('.passValidation').show();
            $('.passBlankNew').hide();
            $('.passBlankConfirm').hide();
            $('.passChangedSuccess-messages').hide();
            return false;
        } else if ((!validateString.test(changedPassword)) && (changedPassword != null) && (changedPassword != "") && (confirmPassword != null) && (confirmPassword != "")) {
            $('.passCriteria').show();
            $('.passBlank').hide();
            $('.passValidation').hide();
            $('.password_match').hide();
            $('.passBlankNew').hide();
            $('.passBlankConfirm').hide();
            $('.passChangedSuccess-messages').hide();
            return false;
        } else {
            $('.passBlank').hide();
            $('.passBlankNew').hide();
            $('.passBlankConfirm').hide();
            $('.passCriteria').hide();
            $('.passValidation').hide();
            $('.password_match').hide();
            return true;
        }
    });
});
function updatePagination(page) {
    var pageNo = parseInt(page);
    $(".compPage").addClass("hidePage").removeClass("active");
    $("#paginationNo" + pageNo).removeClass("hidePage").addClass("active");
    $("#paginationNo" + (pageNo - 1)).removeClass("hidePage");
    $("#paginationNo" + (pageNo + 1)).removeClass("hidePage");
    if (pageNo == 1) {
        $("#firstPage").addClass("hidePage");
    } else {
        $("#firstPage").removeClass("hidePage");
    }
    if (pageNo == totalPages) {
        $("#lastPage").addClass("hidePage");
        $("#loadingBottom").text("");
    } else {
        $("#lastPage").removeClass("hidePage");
    }
}
function updatePageNo(pageNumber) {
    var urlTemp = $("#queryPNRem").val();
    queryParam = decodeURI(urlTemp) + "&p=" + pageNumber;
    return queryParam;
}
function mostlyVisible(element) {
    if ($("#" + element).length) {
        var scroll_pos = $(window).scrollTop();
        var window_height = $(window).height();
        var el_top = $("#" + element).offset().top;
        var el_height = $("#" + element).height();
        var el_bottom = el_top + el_height;
        return ( (el_bottom - el_height * 0.25 > scroll_pos) && (el_top < (scroll_pos + 0.5 * window_height))) ;
    }
}
function showPrevious(pageNo) {
    $("#loadingUp").show();
    preData = getData(pageNo);
    $("#mainDiv").prepend(preData);
    item_height = $("#page" + pageNo).height();
    $("#loadingUp").hide();
    window.scrollTo(0, $(window).scrollTop() + item_height);
}
function showNext(pageNo) {
    $("#loadingBottom").show();
    nextData = getData(pageNo);
    $("#mainDiv").append(nextData);
    $("#loadingBottom").hide();
}
function getData(pageNo) {
    allPagesArray = allPagesArray + "|" + pageNo + "|";
    queryParam = updatePageNo(pageNo);
    var url = "../searchByPage/?" + queryParam;
    var data = null;
    jQuery.ajax({
        url: url,
        success: function(result) {
            _gaq.push(['_trackPageview', "/search/?" + queryParam]);
            dataLayer.push({
                'event': 'VirtualPageview',
                'virtualPageURL': '/search/?' + queryParam,
                'virtualPageTitle': document.title
            });
            var $response = $(result);
            data = $response.find('#mainDiv').html();
        },
        async: false
    });
    return data;
}
function saveSearchesAsAlert(obj, queryvar) {
    $(obj).attr("disabled", true).addClass("disableButton");
    $(obj).attr("value", $("#alertSavingText").val());
    alertSetup(queryvar);
}
function alertSetup(queryvar) {
    var emailValue = $("#alert_email_id").val();
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
    if (!re.test(emailValue)) {
        $("#alert_email_id").addClass("has-error-home");
        return false;
    } else {
        var annualSalary = null;
        var monthlySalary = null;
        var dailySalary = null;
        var hourlySalary = null;
        var annualSalaryMax = null;
        var monthlySalaryMax = null;
        var dailySalaryMax = null;
        var hourlySalaryMax = null;
        var annualSalaryMin = null;
        var monthlySalaryMin = null;
        var dailySalaryMin = null;
        var hourlySalaryMin = null;
        var industryValue = null;
        var jobTypeValue = null;
        var locationValue = null;
        var locationIdValue = null;
        var locationSet = null;
        var locationLevelValue = null;
        var isLocationDescAvailable = false;
        var bracketStart = null;
        var bracketEnd = null;
        var keywordValue = null;
        var salaryMax = null;
        var salaryMin = null;
        var salaryType = null;
        var temporarySalaryMax = null;
        var temporarySalaryMin = null;
        var permanentSalaryMax = null;
        var permanentSalaryMin = null;
        var contractSalaryMax = null;
        var contractSalaryMin = null;
        var temporarySalaryType = null;
        var permanentSalaryType = null;
        var contractSalaryType = null;
        var currencyValue = null;
        var temporaryCurrencyValue = null;
        var permanentCurrencyValue = null;
        var contractCurrencyValue = null;
        var portalprofileid = null;
        var alertsetup = null;
        var isSalaryPresent = false;
        var domainValue = $("#domain_id").val();
        var emailValue = $("#alert_email_id").val();
        var languageValue = $("#language_id").val();
        var validateString = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
        if (!validateString.test(emailValue)) {
            $(".msgEmail").css('display', 'inline-block');
            $('.msgEmail').show();
            return false;
        }
        if ($("#portalprofileid").val().length > 0) {
            portalprofileid = $("#portalprofileid").val();
        }
        alertsetup = $("#anonymousalert").val();
        var obj = getQueryParams(queryvar.substring(1));
        $.map(obj, function(person) {
            if (person.k == "q") {
                keywordValue = person.v.substring(person.v.indexOf("=") + 1);
            }
            if (person.k == "location") {
                if (person.v.length > 0 && locationValue == null) {
                    locationValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationSet") {
                if (person.v.length > 0 && locationSet == null) {
                    locationSet = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationId") {
                if (person.v.length > 0) {
                    locationIdValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationLevel") {
                if (person.v.length > 0) {
                    locationLevelValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "f") {
                if (person.v.indexOf("AnnualSalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    annualSalary = person.v.substring(bracketStart + 1, bracketEnd);
                    annualSalary = annualSalary.replace(/"/g, "");
                    annualSalaryMax = annualSalary.substring(annualSalary.indexOf(",") + 1);
                    annualSalaryMin = annualSalary.substring(0, annualSalary.indexOf(","));
                    if (annualSalaryMax.indexOf(">") > -1) {
                        annualSalaryMax = "999999";
                    }
                    salaryMax = annualSalaryMax;
                    salaryMin = annualSalaryMin;
                    salaryType = "A";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("MonthlySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    monthlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    monthlySalary = monthlySalary.replace(/"/g, "");
                    monthlySalaryMax = monthlySalary.substring(monthlySalary.indexOf(",") + 1);
                    monthlySalaryMin = monthlySalary.substring(0, monthlySalary.indexOf(","));
                    if (monthlySalaryMax.indexOf(">") > -1) {
                        monthlySalaryMax = "999999";
                    }
                    salaryMax = monthlySalaryMax;
                    salaryMin = monthlySalaryMin;
                    salaryType = "M";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("DailySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    dailySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    dailySalary = dailySalary.replace(/"/g, "");
                    dailySalaryMax = dailySalary.substring(dailySalary.indexOf(",") + 1);
                    dailySalaryMin = dailySalary.substring(0, dailySalary.indexOf(","));
                    if (dailySalaryMax.indexOf(">") > -1) {
                        dailySalaryMax = "999999";
                    }
                    salaryMax = dailySalaryMax;
                    salaryMin = dailySalaryMin;
                    salaryType = "D";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("HourlySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    hourlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    hourlySalary = hourlySalary.replace(/"/g, "");
                    hourlySalaryMax = hourlySalary.substring(hourlySalary.indexOf(",") + 1);
                    hourlySalaryMin = hourlySalary.substring(0, hourlySalary.indexOf(","));
                    if (hourlySalaryMax.indexOf(">") > -1) {
                        hourlySalaryMax = "999999";
                    }
                    salaryMax = hourlySalaryMax;
                    salaryMin = hourlySalaryMin;
                    salaryType = "H";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("xLocationDescription") > -1) {
                    isLocationDescAvailable = true;
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    locationValue = person.v.substring(bracketStart + 1, bracketEnd);
                    if (domainValue == '22' && locationValue.indexOf(",") > -1) {
                        locationValue = locationValue.substring(locationValue.indexOf(",") + 1);
                        locationValue = locationValue.trim();
                    }
                    locationValue = locationValue.replace(/"/g, "");
                }
                if (person.v.indexOf("xIndustry") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    industryValue = person.v.substring(bracketStart + 1, bracketEnd);
                    industryValue = industryValue.replace(/"/g, "");
                }
                if (person.v.indexOf("xjobType") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    jobTypeValue = person.v.substring(bracketStart + 1, bracketEnd);
                    jobTypeValue = jobTypeValue.replace(/"/g, "");
                    if (jobTypeValue == "P") {
                        permanentSalaryType = salaryType;
                        permanentSalaryMax = salaryMax;
                        permanentSalaryMin = salaryMin;
                        permanentCurrencyValue = currencyValue;
                    } else if (jobTypeValue == "T") {
                        temporarySalaryType = salaryType;
                        temporarySalaryMax = salaryMax;
                        temporarySalaryMin = salaryMin;
                        temporaryCurrencyValue = currencyValue;
                    } else if (jobTypeValue == "C") {
                        contractSalaryType = salaryType;
                        contractSalaryMax = salaryMax;
                        contractSalaryMin = salaryMin;
                        contractCurrencyValue = currencyValue;
                    }
                }
            }
        });
        if (isLocationDescAvailable) {
            locationIdValue = null;
            locationLevelValue = null;
            locationSet = null;
        }
        if (isSalaryPresent && jobTypeValue == null) {
            permanentSalaryType = salaryType;
            permanentSalaryMax = salaryMax;
            permanentSalaryMin = salaryMin;
            permanentCurrencyValue = currencyValue;
            temporarySalaryType = salaryType;
            temporarySalaryMax = salaryMax;
            temporarySalaryMin = salaryMin;
            temporaryCurrencyValue = currencyValue;
            contractSalaryType = salaryType;
            contractSalaryMax = salaryMax;
            contractSalaryMin = salaryMin;
            contractCurrencyValue = currencyValue;
        } else if (isSalaryPresent && jobTypeValue != null) {
            if (jobTypeValue == 'P') {
                permanentSalaryType = salaryType;
                permanentSalaryMax = salaryMax;
                permanentSalaryMin = salaryMin;
                permanentCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'T') {
                temporarySalaryType = salaryType;
                temporarySalaryMax = salaryMax;
                temporarySalaryMin = salaryMin;
                temporaryCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'C') {
                contractSalaryType = salaryType;
                contractSalaryMax = salaryMax;
                contractSalaryMin = salaryMin;
                contractCurrencyValue = currencyValue;
            }
        } else if (!isSalaryPresent && jobTypeValue != null) {
            if (jobTypeValue == 'P') {
                permanentSalaryType = null;
                permanentSalaryMax = "999999";
                permanentSalaryMin = "0";
                permanentCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'T') {
                temporarySalaryType = null;
                temporarySalaryMax = "999999";
                temporarySalaryMin = "0";
                temporaryCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'C') {
                contractSalaryType = null;
                contractSalaryMax = "999999";
                contractSalaryMin = "0";
                contractCurrencyValue = currencyValue;
            }
        }
        $("#alert_button").attr("disabled", true).addClass("disableButton");
        $("#alert_button").attr("value", $("#alertSavingText").val());
        var saveURLValue = queryvar.substring(1);
        $.ajax({
            url: "/hays/rest/alert/setup/",
            data: {
                json: JSON.stringify({
                    alertname: keywordValue,
                    domainid: domainValue,
                    email: emailValue,
                    frequency: 1,
                    isonlyjobtitle: "N",
                    jobtitle: null,
                    jobtitleid: null,
                    keywords: keywordValue,
                    languageid: languageValue,
                    latitude: null,
                    levelno: locationLevelValue,
                    locale: null,
                    location: locationValue,
                    locationid: locationIdValue,
                    locations: locationSet,
                    longitude: null,
                    portalprofileid: portalprofileid,
                    postcode: null,
                    sectorids: industryValue,
                    specialism: null,
                    jobtypes: jobTypeValue,
                    anonymousalert: alertsetup,
                    alertprofilesalaryCollection: [{
                        id: {
                            jobtypeid: 1
                        },
                        maxsalary: temporarySalaryMax,
                        minsalary: temporarySalaryMin,
                        salarycurrency: temporaryCurrencyValue,
                        salarytype: temporarySalaryType
                    }, {
                        id: {
                            jobtypeid: 2
                        },
                        maxsalary: permanentSalaryMax,
                        minsalary: permanentSalaryMin,
                        salarycurrency: permanentCurrencyValue,
                        salarytype: permanentSalaryType
                    }, {
                        id: {
                            jobtypeid: 3
                        },
                        maxsalary: contractSalaryMax,
                        minsalary: contractSalaryMin,
                        salarycurrency: contractCurrencyValue,
                        salarytype: contractSalaryType
                    }],
                    saveurl: saveURLValue
                })
            },
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            success: function(data) {
                if (data == 'WC023') {
                    window.location.href = "../saved-searches/?limit=Y";
                } else {
                    contactTracking('Filter', 'JobAlert', '');
                    setCookieWithPath('alertValue', saveURLValue, 30);
                    $("#alertform").hide();
                }
                var currenturl = window.location + "";
                if (currenturl.indexOf("saved-searches") != -1) {
                    if (data == 'WC023')
                        $('#limitError').removeClass('hidden');
                    else
                        location.reload();
                }
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
                window.location.href = "../?status=error";
            }
        });
    }
}
function EditAlertSetup(queryvar) {
    var emailValue = $("#alert_email_id").val();
    var alertId = $("#alertId").val();
    if (emailValue == "" || emailValue == null) {
        return false;
    } else {
        var annualSalary = null;
        var monthlySalary = null;
        var dailySalary = null;
        var hourlySalary = null;
        var annualSalaryMax = null;
        var monthlySalaryMax = null;
        var dailySalaryMax = null;
        var hourlySalaryMax = null;
        var annualSalaryMin = null;
        var monthlySalaryMin = null;
        var dailySalaryMin = null;
        var hourlySalaryMin = null;
        var industryValue = null;
        var jobTypeValue = null;
        var locationValue = null;
        var locationIdValue = null;
        var locationSet = null;
        var locationLevelValue = null;
        var isLocationDescAvailable = false;
        var bracketStart = null;
        var bracketEnd = null;
        var keywordValue = null;
        var salaryMax = null;
        var salaryMin = null;
        var salaryType = null;
        var temporarySalaryMax = null;
        var temporarySalaryMin = null;
        var permanentSalaryMax = null;
        var permanentSalaryMin = null;
        var contractSalaryMax = null;
        var contractSalaryMin = null;
        var temporarySalaryType = null;
        var permanentSalaryType = null;
        var contractSalaryType = null;
        var currencyValue = null;
        var temporaryCurrencyValue = null;
        var permanentCurrencyValue = null;
        var contractCurrencyValue = null;
        var portalprofileid = null;
        var alertsetup = null;
        var isSalaryPresent = false;
        var domainValue = $("#domain_id").val();
        var emailValue = $("#alert_email_id").val();
        var languageValue = $("#language_id").val();
        var validateString = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/igm;
        if (!validateString.test(emailValue)) {
            $(".msgEmail").css('display', 'inline-block');
            $('.msgEmail').show();
            return false;
        }
        if ($("#portalprofileid").val().length > 0) {
            portalprofileid = $("#portalprofileid").val();
        }
        alertsetup = $("#anonymousalert").val();
        var obj = getQueryParams(queryvar.substring(1));
        $.map(obj, function(person) {
            if (person.k == "q") {
                keywordValue = person.v.substring(person.v.indexOf("=") + 1);
            }
            if (person.k == "location") {
                if (person.v.length > 0 && locationValue == null) {
                    locationValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationSet") {
                if (person.v.length > 0 && locationSet == null) {
                    locationSet = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationId") {
                if (person.v.length > 0) {
                    locationIdValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "locationLevel") {
                if (person.v.length > 0) {
                    locationLevelValue = person.v.substring(person.v.indexOf("=") + 1);
                }
            }
            if (person.k == "f") {
                if (person.v.indexOf("AnnualSalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    annualSalary = person.v.substring(bracketStart + 1, bracketEnd);
                    annualSalary = annualSalary.replace(/"/g, "");
                    annualSalaryMax = annualSalary.substring(annualSalary.indexOf(",") + 1);
                    annualSalaryMin = annualSalary.substring(0, annualSalary.indexOf(","));
                    if (annualSalaryMax.indexOf(">") > -1) {
                        annualSalaryMax = '999999';
                    }
                    salaryMax = annualSalaryMax;
                    salaryMin = annualSalaryMin;
                    salaryType = "A";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("MonthlySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    monthlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    monthlySalary = monthlySalary.replace(/"/g, "");
                    monthlySalaryMax = monthlySalary.substring(monthlySalary.indexOf(",") + 1);
                    monthlySalaryMin = monthlySalary.substring(0, monthlySalary.indexOf(","));
                    if (monthlySalaryMax.indexOf(">") > -1) {
                        monthlySalaryMax = '999999';
                    }
                    salaryMax = monthlySalaryMax;
                    salaryMin = monthlySalaryMin;
                    salaryType = "M";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("DailySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    dailySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    dailySalary = dailySalary.replace(/"/g, "");
                    dailySalaryMax = dailySalary.substring(dailySalary.indexOf(",") + 1);
                    dailySalaryMin = dailySalary.substring(0, dailySalary.indexOf(","));
                    if (dailySalaryMax.indexOf(">") > -1) {
                        dailySalaryMax = '999999';
                    }
                    salaryMax = dailySalaryMax;
                    salaryMin = dailySalaryMin;
                    salaryType = "D";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("HourlySalaryMax") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    hourlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                    hourlySalary = hourlySalary.replace(/"/g, "");
                    hourlySalaryMax = hourlySalary.substring(hourlySalary.indexOf(",") + 1);
                    hourlySalaryMin = hourlySalary.substring(0, hourlySalary.indexOf(","));
                    if (hourlySalaryMax.indexOf(">") > -1) {
                        hourlySalaryMax = '999999';
                    }
                    salaryMax = hourlySalaryMax;
                    salaryMin = hourlySalaryMin;
                    salaryType = "H";
                    isSalaryPresent = true;
                }
                if (person.v.indexOf("xLocationDescription") > -1) {
                    isLocationDescAvailable = true;
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    locationValue = person.v.substring(bracketStart + 1, bracketEnd);
                    if (domainValue == '22' && locationValue.indexOf(",") > -1) {
                        locationValue = locationValue.substring(locationValue.indexOf(",") + 1);
                        locationValue = locationValue.trim();
                    }
                    locationValue = locationValue.replace(/"/g, "");
                }
                if (person.v.indexOf("xIndustry") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    industryValue = person.v.substring(bracketStart + 1, bracketEnd);
                    industryValue = industryValue.replace(/"/g, "");
                }
                if (person.v.indexOf("xjobType") > -1) {
                    bracketStart = person.v.indexOf("[");
                    bracketEnd = person.v.indexOf("]");
                    jobTypeValue = person.v.substring(bracketStart + 1, bracketEnd);
                    jobTypeValue = jobTypeValue.replace(/"/g, "");
                    if (jobTypeValue == "P") {
                        permanentSalaryType = salaryType;
                        permanentSalaryMax = salaryMax;
                        permanentSalaryMin = salaryMin;
                        permanentCurrencyValue = currencyValue;
                    } else if (jobTypeValue == "T") {
                        temporarySalaryType = salaryType;
                        temporarySalaryMax = salaryMax;
                        temporarySalaryMin = salaryMin;
                        temporaryCurrencyValue = currencyValue;
                    } else if (jobTypeValue == "C") {
                        contractSalaryType = salaryType;
                        contractSalaryMax = salaryMax;
                        contractSalaryMin = salaryMin;
                        contractCurrencyValue = currencyValue;
                    }
                }
            }
        });
        if (isLocationDescAvailable) {
            locationIdValue = null;
            locationLevelValue = null;
            locationSet = null;
        }
        if (isSalaryPresent && jobTypeValue == null) {
            permanentSalaryType = salaryType;
            permanentSalaryMax = salaryMax;
            permanentSalaryMin = salaryMin;
            permanentCurrencyValue = currencyValue;
            temporarySalaryType = salaryType;
            temporarySalaryMax = salaryMax;
            temporarySalaryMin = salaryMin;
            temporaryCurrencyValue = currencyValue;
            contractSalaryType = salaryType;
            contractSalaryMax = salaryMax;
            contractSalaryMin = salaryMin;
            contractCurrencyValue = currencyValue;
        } else if (isSalaryPresent && jobTypeValue != null) {
            if (jobTypeValue == 'P') {
                permanentSalaryType = salaryType;
                permanentSalaryMax = salaryMax;
                permanentSalaryMin = salaryMin;
                permanentCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'T') {
                temporarySalaryType = salaryType;
                temporarySalaryMax = salaryMax;
                temporarySalaryMin = salaryMin;
                temporaryCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'C') {
                contractSalaryType = salaryType;
                contractSalaryMax = salaryMax;
                contractSalaryMin = salaryMin;
                contractCurrencyValue = currencyValue;
            }
        } else if (!isSalaryPresent && jobTypeValue != null) {
            if (jobTypeValue == 'P') {
                permanentSalaryType = null;
                permanentSalaryMax = "999999";
                permanentSalaryMin = "0";
                permanentCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'T') {
                temporarySalaryType = null;
                temporarySalaryMax = "999999";
                temporarySalaryMin = "0";
                temporaryCurrencyValue = currencyValue;
            }
            if (jobTypeValue == 'C') {
                contractSalaryType = null;
                contractSalaryMax = "999999";
                contractSalaryMin = "0";
                contractCurrencyValue = currencyValue;
            }
        }
        var saveURLValue = queryvar.substring(1);
        $("#alert_button").attr("disabled", true).addClass("disableButton");
        $("#alert_button").attr("value", $("#alertSavingText").val());
        $.ajax({
            url: "/update/alert/" + alertId,
            data: {
                json: JSON.stringify({
                    alertprofileid: alertId,
                    alertname: keywordValue,
                    domainid: domainValue,
                    email: emailValue,
                    frequency: 1,
                    isonlyjobtitle: "N",
                    jobtitle: null,
                    keywords: keywordValue,
                    languageid: languageValue,
                    latitude: null,
                    levelno: locationLevelValue,
                    locale: null,
                    location: locationValue,
                    locationid: locationIdValue,
                    locations: locationSet,
                    longitude: null,
                    portalprofileid: portalprofileid,
                    sectorids: industryValue,
                    specialism: null,
                    jobtypes: jobTypeValue,
                    anonymousalert: alertsetup,
                    alertprofilesalaryCollection: [{
                        id: {
                            alertprofileid: alertId,
                            jobtypeid: 1
                        },
                        maxsalary: temporarySalaryMax,
                        minsalary: temporarySalaryMin,
                        salarycurrency: temporaryCurrencyValue,
                        salarytype: temporarySalaryType
                    }, {
                        id: {
                            alertprofileid: alertId,
                            jobtypeid: 2
                        },
                        maxsalary: permanentSalaryMax,
                        minsalary: permanentSalaryMin,
                        salarycurrency: permanentCurrencyValue,
                        salarytype: permanentSalaryType
                    }, {
                        id: {
                            alertprofileid: alertId,
                            jobtypeid: 3
                        },
                        maxsalary: contractSalaryMax,
                        minsalary: contractSalaryMin,
                        salarycurrency: contractCurrencyValue,
                        salarytype: contractSalaryType
                    }],
                    saveurl: saveURLValue
                })
            },
            dataType: "json",
            type: "POST",
            contentType: "application/json",
            success: function(data) {
                setCookieWithPath('alertValue', saveURLValue, 30);
                $("#alertform").hide();
                window.location.href = "../saved-searches/";
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
                window.location.href = "../?status=error";
            }
        });
    }
}
function removeJobAlert(obj) {
    var alertId = $(obj).attr("alertId");
    var r = confirm(deleteAlertmsg);
    if (r == true) {
        jQuery.ajax({
            type: "DELETE",
            url: "/DeleteJobAlert/" + alertId,
            success: function(result) {
                var status = result.status;
                if (status == "SUCCESS") {
                    window.location.href = "../saved-searches/";
                } else
                    $("#errorRemoveJobAlert" + cvId).text(jQ('error_occured'));
            },
            async: false
        });
    }
}
function getQueryParams(qs) {
    qs = qs.split("+").join(" ");
    var params = [], tokens, re = /[?&]?([^=]+)=([^&]*)/g;
    while (tokens = re.exec(qs)) {
        params.push({
            k: decodeURIComponent(tokens[1]),
            v: decodeURIComponent(tokens[2])
        });
    }
    return params;
}
function hideMobileKeyboard() {
    document.activeElement.blur();
    $("input").blur();
}
function setCookieWithPath(c_name, value, expiredays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + expiredays);
    document.cookie = c_name + "=" + escape(value) + ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString() + ';path=/');
}
function setCookieWithParentPath(c_name, value, expiredays) {
    var exdate = new Date();
    exdate.setDate(exdate.getDate() + expiredays);
    var domainName = location.hostname;
    var len = domainName.length;
    var n = domainName.indexOf(".");
    if (n != '-1')
        domainName = domainName.substring(n, len);
    document.cookie = c_name + "=" + escape(value) + ((expiredays == null) ? "" : ";expires=" + exdate.toGMTString()) + ';path=/' + ';domain =' + domainName;
}
var entityMap = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': '&quot;',
    "'": '&#39;',
    "/": '&#x2F;'
};
function escapeHtml(string) {
    return String(string).replace(/[&<>"'\/]/g, function(s) {
        return entityMap[s];
    });
}
function getCookieEscHtml(cookieName) {
    return escapeHtml(getCookie(cookieName));
}
function setRecentViewedJobsCookie(value, jobId, url) {
    var recentViewedJobsTerm = getCookieEscHtml("recentViewedJobs");
    var finalstr = jobId + ":" + value + ":" + url;
    var currdate = new Date();
    finalstr = finalstr + ":" + currdate;
    var recentArr = recentViewedJobsTerm.split("|");
    var duplicateRemovestr = "";
    if (recentArr.length > 0) {
        for (i = 0; i < recentArr.length; i++) {
            var ithVal = recentArr[i];
            if (ithVal.substring(0, ithVal.indexOf(":")) == jobId) {} else {
                if (duplicateRemovestr != null && duplicateRemovestr != '')
                    duplicateRemovestr = duplicateRemovestr + "|" + recentArr[i];
                else
                    duplicateRemovestr = recentArr[i];
            }
        }
        recentViewedJobsTerm = duplicateRemovestr;
        if (recentViewedJobsTerm.split("|").length >= 3) {
            recentViewedJobsTerm = recentViewedJobsTerm.substring(0, recentViewedJobsTerm.lastIndexOf("|"));
        }
    }
    if (recentViewedJobsTerm != null && recentViewedJobsTerm != '') {
        finalstr = finalstr + "|" + recentViewedJobsTerm;
    }
    setCookieWithPath("recentViewedJobs", finalstr, 10);
}
function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)")
      , results = regex.exec(location.search);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}
function xIndexOf(Val, Str, x) {
    if (x <= (Str.split(Val).length - 1)) {
        Ot = Str.indexOf(Val);
        if (x > 1) {
            for (var i = 1; i < x; i++) {
                var Ot = Str.indexOf(Val, Ot + 1)
            }
        }
        return Ot;
    } else {
        return 0
    }
}
function emailShare(emailLink) {
    var job_url = emailLink;
    var seperator = xIndexOf("/", job_url, 5);
    var head_url = encodeURI(job_url.substring(0, seperator + 1));
    job_url = job_url.substring(seperator + 1, job_url.length);
    var queryString;
    if (job_url.indexOf("?") > -1) {
        queryString = job_url.substring(job_url.indexOf("?"), job_url.length);
        job_url = job_url.substring(0, job_url.indexOf("?"));
        job_url = encodeURIComponent(job_url);
    }
    var link = $(".emailNative").attr("href") + encodeURI(head_url) + encodeURIComponent(job_url) + encodeURIComponent(queryString);
    $(".emailNative").attr("href", link);
}
function myDropdown() {
    var tk = new TWIGKIT();
    var newQuery;
    var query = getParameterByName("q");
    var first = $('#first').val();
    var second = $('#second').val();
    var url = window.location.href;
    var tempUrl = url.split("&");
    var tempArrayLength = tempUrl.length;
    var tempUrlUpdated = '';
    var min = $("#first option:selected").attr("min");
    var max = $("#second option:selected").attr("max");
    var valueMin = $("#first option:selected").attr("value");
    var valueMax = $("#second option:selected").attr("value");
    var button = valueMin + " to " + valueMax;
    var selection = $("#selection option:selected").attr("name");
    var i = 1;
    contactTracking('Filter', 'salary', valueMin + '-' + valueMax);
    while (i < tempArrayLength) {
        if (tempUrl[i].indexOf("SalaryMax") == -1) {
            tempUrlUpdated = tempUrlUpdated + "&" + tempUrl[i];
        }
        i++;
    }
    var filter = tk.createRangeFilter(selection, min, max, button);
    newQuery = tk.addFilter("q=" + query + tempUrlUpdated, filter);
    $("queryPNRem").val(newQuery);
    window.location = '?' + newQuery;
}
(function(jQuery) {
    var window_width = $(window).width();
    var window_height = $(window).height();
    jQuery.fn.panelLayout = function(settings) {
        var panelLayout = this;
        var toggleLeft = panelLayout.find(".pl-toggle-left");
        var toggleRight = panelLayout.find(".pl-toggle-right");
        toggleLeft.on("click", function() {
            if ($(this).data('clickable')) {
                panelLayout.toggleClass("show-left-panel").removeClass("show-right-panel");
                $("#websitelabel").hide();
                $('body').scrollTop(0);
            }
        });
        toggleRight.on("click", function() {
            if ($(this).data('clickable')) {
                panelLayout.toggleClass("show-right-panel").removeClass("show-left-panel");
                $("#websitelabel").hide();
                $('body').scrollTop(0);
            }
        });
        $(".close").click(function() {
            $("#websitelabel").hide();
        });
        jQuery(window).resize(function() {
            if (window_width != $(window).width()) {
                window_width = $(window).width();
                panelLayout.removeClass("show-left-panel").removeClass("show-right-panel");
            }
        });
    }
    ;
})(jQuery);
function TwigkitPanelLayout() {
    jQuery('.panel-layout').each(function() {
        var settings = {};
        jQuery(this).panelLayout(settings);
    });
}
TwigkitRenderCallbacks.add("TwigkitPanelLayout", TwigkitPanelLayout);
function htmlDecode(input) {
    var e = document.createElement('div');
    input.replace('&#x2F;', '/');
    e.innerHTML = input;
    return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
}
$(document).ready(function() {
    if (self != top) {
        var theBody = document.getElementsByTagName('body')[0];
        theBody.style.display = "none";
    }
    $(".searchform").each(function() {
        $(this).find("input.query").on("focus", function() {
            $("body").addClass("focused-searchbox");
        });
        $(this).find("input.query").on("blur", function() {
            $("body").removeClass("focused-searchbox");
        });
    });
    $("form.searchform input.location").placeholder();
    $(".searchform input.location").change(function() {
        $("#hays-suggest-locationId").val("");
        $("#hays-suggest-level").val("");
    });
    var selectedOne = $('#selection');
    $(selectedOne).change(function() {
        var dropdownOne = $("#dropdownList").html();
        var dropdownAgain = $("#dropdownlistSecond").html();
        var dropdownDaily = $("#dropdownListDaily").html();
        var dropdownsecondDaily = $("#dropdownlistSecondDaily").html();
        var dropdownMonthly = $("#dropdownListMonthly").html();
        var dropdownsecondMonthly = $("#dropdownlistSecondMonthly").html();
        var dropdownHourly = $("#dropdownListHourly").html();
        var dropdownsecondHourly = $("#dropdownlistSecondHourly").html();
        var salaryRate = $("#selection option:selected").attr("name");
        if (salaryRate.indexOf("AnnualSalaryMax") >= 0) {
            $("select#first").html(dropdownOne);
            $("select#second").html(dropdownAgain);
        } else if (salaryRate.indexOf("MonthlySalaryMax") >= 0) {
            $("select#first").html(dropdownMonthly);
            $("select#second").html(dropdownsecondMonthly);
        } else if (salaryRate.indexOf("DailySalaryMax") >= 0) {
            $("select#first").html(dropdownDaily);
            $("select#second").html(dropdownsecondDaily);
        } else if (salaryRate.indexOf("HourlySalaryMax") >= 0) {
            $("select#first").html(dropdownHourly);
            $("select#second").html(dropdownsecondHourly);
        }
    });
    var minFirst = $('#first'), maxSecond = $('#second'), begining, end, lastIn, lastOut;
    $(minFirst).change(function() {
        begining = minFirst[0];
        end = maxSecond[0];
        lastIn = begining.options[begining.options.length - 1].value;
        lastOut = end.options[end.options.length - 1].value;
        if (begining.selectedIndex == begining.length - 1) {
            $(this).parents("tr").find("select:last option[value='" + lastOut + "']").attr("selected", "selected").change();
        }
        if (begining.selectedIndex > end.selectedIndex) {
            end.selectedIndex = begining.selectedIndex;
        }
    });
    $(maxSecond).change(function() {
        begining = minFirst[0];
        end = maxSecond[0];
        if (end.selectedIndex < begining.selectedIndex) {
            begining.selectedIndex = end.selectedIndex;
        }
    });
});
$(window).load(function() {
    var oneMain;
    var urlOne = window.location.href;
    var tempUrlOne = urlOne.split("f=");
    var tempArrayLengthOne = tempUrlOne.length;
    var i = 0;
    while (i < tempArrayLengthOne) {
        var main = tempUrlOne[i];
        if (main.indexOf("SalaryMax") > 0) {
            var replacedMain = main.replace('%5B', '[');
            var certain = replacedMain.split("[");
            oneMain = certain[0];
        }
        i++;
    }
    if (oneMain != undefined) {
        var dropdownOne = $("#dropdownList").html();
        var dropdownAgain = $("#dropdownlistSecond").html();
        var dropdownDaily = $("#dropdownListDaily").html();
        var dropdownsecondDaily = $("#dropdownlistSecondDaily").html();
        var dropdownMonthly = $("#dropdownListMonthly").html();
        var dropdownsecondMonthly = $("#dropdownlistSecondMonthly").html();
        var dropdownHourly = $("#dropdownListHourly").html();
        var dropdownsecondHourly = $("#dropdownlistSecondHourly").html();
        var changeAnually = $("#changeannually").html();
        var changeMonthly = $("#changemonthly").html();
        var changeHourly = $("#changehourly").html();
        var changeDaily = $("#changedaily").html();
        var classN = oneMain.toLowerCase();
        var aText = $("." + classN).find('a').text();
        var optionsText = aText.split("to");
        if (oneMain.indexOf("AnnualSalaryMax") >= 0) {
            $("select#selection").html(changeAnually);
            $("select#first").html(dropdownOne);
            $("select#second").html(dropdownAgain);
            $("#first").val(optionsText[0].trim());
            $("#second").val(optionsText[1].trim());
        } else if (oneMain.indexOf("MonthlySalaryMax") >= 0) {
            $("select#selection").html(changeMonthly);
            $("select#first").html(dropdownMonthly);
            $("select#second").html(dropdownsecondMonthly);
            $("#first").val(optionsText[0].trim());
            $("#second").val(optionsText[1].trim());
        } else if (oneMain.indexOf("DailySalaryMax") >= 0) {
            $("select#selection").html(changeDaily);
            $("select#first").html(dropdownDaily);
            $("select#second").html(dropdownsecondDaily);
            $("#first").val(optionsText[0].trim());
            $("#second").val(optionsText[1].trim());
        } else if (oneMain.indexOf("HourlySalaryMax") >= 0) {
            $("select#selection").html(changeHourly);
            $("select#first").html(dropdownHourly);
            $("select#second").html(dropdownsecondHourly);
            $("#first").val(optionsText[0].trim());
            $("#second").val(optionsText[1].trim());
        }
    }
});
function getRssUrl(baseurl, domainId, siteLocale, siteCollections, frontend, proxystylesheet, start) {
    var queryvar = window.location.search;
    var queryStringValue = "";
    var locationLevelValue = null;
    var locationIdValue = null;
    var locationValue = null;
    var locationSetValue = null;
    var isLocationDescAvailable = false;
    var annualSalary = null;
    var monthlySalary = null;
    var dailySalary = null;
    var hourlySalary = null;
    var annualSalaryMax = null;
    var monthlySalaryMax = null;
    var dailySalaryMax = null;
    var hourlySalaryMax = null;
    var annualSalaryMin = null;
    var monthlySalaryMin = null;
    var dailySalaryMin = null;
    var hourlySalaryMin = null;
    var industryValue = null;
    var jobTypeValue = null;
    var bracketStart = null;
    var bracketEnd = null;
    var keywordValue = null;
    var specialismIdValue = null;
    var fixedString = baseurl + "/search?output=xml_no_dtd&client=" + frontend + "&site=" + siteCollections + "&access=p&filter=0&getfields=*&proxystylesheet=" + proxystylesheet + "&start=" + start + "&num=10&siteLocale=" + siteLocale;
    var isOnlyJobTitle = null;
    var domainValue = $("#domain_id").val();
    var sortValueAsc = null;
    var sortValueDesc = null;
    var sortAsc = null;
    var sortDesc = null;
    var obj = getQueryParams(queryvar.substring(1));
    $.map(obj, function(person) {
        if (person.k == "q") {
            keywordValue = person.v.substring(person.v.indexOf("=") + 1);
            queryStringValue = queryStringValue + "q=" + person.v;
        }
        if (person.k == "specialismId") {
            specialismIdValue = person.v.substring(person.v.indexOf("=") + 1);
        }
        if (person.k == "isOnlyJobTitle") {
            isOnlyJobTitle = person.v.substring(person.v.indexOf("=") + 1);
        }
        if (person.k == "locationId") {
            if (person.v.length > 0) {
                locationIdValue = person.v.substring(person.v.indexOf("=") + 1);
            }
        }
        if (person.k == "locationLevel") {
            if (person.v.length > 0) {
                locationLevelValue = person.v.substring(person.v.indexOf("=") + 1);
            }
        }
        if (person.k == "location") {
            if (person.v.length > 0) {
                if (!isLocationDescAvailable)
                    locationValue = person.v.substring(person.v.indexOf("=") + 1);
            }
        }
        if (person.k == "locationSet") {
            if (person.v.length > 0) {
                locationSetValue = person.v.substring(person.v.indexOf("=") + 1);
            }
        }
        if (person.k == "f") {
            if (person.v.indexOf("AnnualSalaryMax") > -1) {
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                annualSalary = person.v.substring(bracketStart + 1, bracketEnd);
                annualSalary = annualSalary.replace(/"/g, "");
                annualSalaryMax = annualSalary.substring(annualSalary.indexOf(",") + 1);
                annualSalaryMin = annualSalary.substring(0, annualSalary.indexOf(","));
                if (annualSalaryMax.indexOf(">") > -1) {
                    annualSalaryMax = "";
                }
                queryStringValue = queryStringValue + "+inmeta:AnnualSalaryMax:" + annualSalaryMin + ".." + annualSalaryMax;
            }
            if (person.v.indexOf("MonthlySalaryMax") > -1) {
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                monthlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                monthlySalary = monthlySalary.replace(/"/g, "");
                monthlySalaryMax = monthlySalary.substring(monthlySalary.indexOf(",") + 1);
                monthlySalaryMin = monthlySalary.substring(0, monthlySalary.indexOf(","));
                if (monthlySalaryMax.indexOf(">") > -1) {
                    monthlySalaryMax = "";
                }
                queryStringValue = queryStringValue + "+inmeta:MonthlySalaryMax:" + monthlySalaryMin + ".." + monthlySalaryMax;
            }
            if (person.v.indexOf("DailySalaryMax") > -1) {
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                dailySalary = person.v.substring(bracketStart + 1, bracketEnd);
                dailySalary = dailySalary.replace(/"/g, "");
                dailySalaryMax = dailySalary.substring(dailySalary.indexOf(",") + 1);
                dailySalaryMin = dailySalary.substring(0, dailySalary.indexOf(","));
                if (dailySalaryMax.indexOf(">") > -1) {
                    dailySalaryMax = "";
                }
                queryStringValue = queryStringValue + "+inmeta:DailySalaryMax:" + dailySalaryMin + ".." + dailySalaryMax;
            }
            if (person.v.indexOf("HourlySalaryMax") > -1) {
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                hourlySalary = person.v.substring(bracketStart + 1, bracketEnd);
                hourlySalary = hourlySalary.replace(/"/g, "");
                hourlySalaryMax = hourlySalary.substring(hourlySalary.indexOf(",") + 1);
                hourlySalaryMin = hourlySalary.substring(0, hourlySalary.indexOf(","));
                if (hourlySalaryMax.indexOf(">") > -1) {
                    hourlySalaryMax = "";
                }
                queryStringValue = queryStringValue + "+inmeta:HourlySalaryMax:" + hourlySalaryMin + ".." + hourlySalaryMax;
            }
            if (person.v.indexOf("xLocationDescription") > -1) {
                isLocationDescAvailable = true;
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                locationValue = person.v.substring(bracketStart + 1, bracketEnd);
                if (domainValue == '22' && locationValue.indexOf(",") > -1) {
                    locationValue = locationValue.substring(locationValue.indexOf(",") + 1);
                    locationValue = locationValue.trim();
                }
                locationValue = locationValue.replace(/"/g, "");
                locationValue = encodeURIComponent(locationValue);
            }
            if (person.v.indexOf("xIndustry") > -1) {
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                industryValue = person.v.substring(bracketStart + 1, bracketEnd);
                industryValue = industryValue.replace(/"/g, "");
                industryValue = encodeURIComponent(industryValue);
            }
            if (person.v.indexOf("xjobType") > -1) {
                isSalaryPresent = false;
                bracketStart = person.v.indexOf("[");
                bracketEnd = person.v.indexOf("]");
                jobTypeValue = person.v.substring(bracketStart + 1, bracketEnd);
                jobTypeValue = jobTypeValue.replace(/"/g, "");
            }
        }
        if (person.k == "s") {
            sortValueAsc = person.v.indexOf("-xReleaseDate");
            sortValueDesc = person.v.indexOf("xReleaseDate");
            if (sortValueAsc > -1) {
                sortAsc = 1;
            } else if (sortValueDesc > -1) {
                sortDesc = 1;
            }
        }
    });
    if (sortAsc == 1) {
        queryStringValue = queryStringValue + "&sort=meta:xReleaseDate:A:E::D:D";
    } else if (sortDesc == 1) {
        queryStringValue = queryStringValue + "&sort=meta:xReleaseDate:D:E::D:D";
    }
    var partialfieldValue = "partialfields=";
    var requiredFieldString = "requiredfields=(xlocale:" + siteLocale + ")%2E(DomainId:" + domainId + ")";
    var sperator = "";
    if (isLocationDescAvailable) {
        locationIdValue = null;
        locationLevelValue = null
        locationSetValue = null;
    }
    if (locationValue != null) {
        if (locationIdValue != null && locationLevelValue != null) {
            partialfieldValue = partialfieldValue + sperator + "xHaysLocation" + locationLevelValue + ":" + locationIdValue;
            sperator = ".";
        } else {
            partialfieldValue = partialfieldValue + sperator + "(xLocationDescription:" + locationValue + ")";
            sperator = ".";
        }
    } else if (locationSetValue != null) {
        locationSetValueArr = locationSetValue.split('@');
        partialfieldValue = partialfieldValue + sperator + "(";
        for (var i = 0; i < locationSetValueArr.length; i++) {
            locationMapValue = locationSetValueArr[i].split(',');
            partialfieldValue = partialfieldValue + sperator + "xHaysLocation" + locationMapValue[2] + ":" + locationMapValue[0];
            if (i < locationSetValueArr.length - 1)
                sperator = "|";
            else
                sperator = ".";
        }
        partialfieldValue = partialfieldValue + ")";
    }
    if (specialismIdValue != null) {
        partialfieldValue = partialfieldValue + sperator + "(xSpecialism:" + specialismIdValue + "|xSubSpecialism:" + specialismIdValue + ")";
        sperator = ".";
    }
    if (isOnlyJobTitle == "Y") {
        partialfieldValue = partialfieldValue + sperator + "(JobTitle:" + keywordValue + ")";
        sperator = ".";
    }
    if (jobTypeValue != null)
        requiredFieldString = requiredFieldString + ".(xjobType:" + jobTypeValue + ")";
    if (industryValue != null)
        requiredFieldString = requiredFieldString + ".(xIndustry:" + industryValue + ")";
    queryStringValue = fixedString + "&" + queryStringValue + "&" + partialfieldValue + "&" + requiredFieldString;
    window.location.href = queryStringValue;
}
(function($, undefined) {
    var requestIndex = 0;
    $.widget("ui.autocomplete", {
        version: "1.9.2",
        defaultElement: "<input>",
        options: {
            appendTo: "body",
            autoFocus: false,
            delay: 300,
            minLength: 1,
            position: {
                my: "left top",
                at: "left bottom",
                collision: "none"
            },
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        pending: 0,
        _create: function() {
            var suppressKeyPress, suppressKeyPressRepeat, suppressInput;
            this.isMultiLine = this._isMultiLine();
            this.valueMethod = this.element[this.element.is("input,textarea") ? "val" : "text"];
            this.isNewMenu = true;
            this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off");
            this._on(this.element, {
                keydown: function(event) {
                    if (this.element.prop("readOnly")) {
                        suppressKeyPress = true;
                        suppressInput = true;
                        suppressKeyPressRepeat = true;
                        return;
                    }
                    suppressKeyPress = false;
                    suppressInput = false;
                    suppressKeyPressRepeat = false;
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                    case keyCode.PAGE_UP:
                        suppressKeyPress = true;
                        this._move("previousPage", event);
                        break;
                    case keyCode.PAGE_DOWN:
                        suppressKeyPress = true;
                        this._move("nextPage", event);
                        break;
                    case keyCode.UP:
                        suppressKeyPress = true;
                        this._keyEvent("previous", event);
                        break;
                    case keyCode.DOWN:
                        suppressKeyPress = true;
                        this._keyEvent("next", event);
                        break;
                    case keyCode.ENTER:
                    case keyCode.NUMPAD_ENTER:
                        if (this.menu.active) {
                            suppressKeyPress = true;
                            event.preventDefault();
                            this.menu.select(event);
                        }
                        break;
                    case keyCode.TAB:
                        if (this.menu.active) {
                            this.menu.select(event);
                        }
                        break;
                    case keyCode.ESCAPE:
                        if (this.menu.element.is(":visible")) {
                            this._value(this.term);
                            this.close(event);
                            event.preventDefault();
                        }
                        break;
                    default:
                        suppressKeyPressRepeat = true;
                        this._searchTimeout(event);
                        break;
                    }
                },
                keypress: function(event) {
                    if (suppressKeyPress) {
                        suppressKeyPress = false;
                        event.preventDefault();
                        return;
                    }
                    if (suppressKeyPressRepeat) {
                        return;
                    }
                    var keyCode = $.ui.keyCode;
                    switch (event.keyCode) {
                    case keyCode.PAGE_UP:
                        this._move("previousPage", event);
                        break;
                    case keyCode.PAGE_DOWN:
                        this._move("nextPage", event);
                        break;
                    case keyCode.UP:
                        this._keyEvent("previous", event);
                        break;
                    case keyCode.DOWN:
                        this._keyEvent("next", event);
                        break;
                    }
                },
                input: function(event) {
                    if (suppressInput) {
                        suppressInput = false;
                        event.preventDefault();
                        return;
                    }
                    this._searchTimeout(event);
                },
                focus: function() {
                    this.selectedItem = null;
                    this.previous = this._value();
                },
                blur: function(event) {
                    if (this.cancelBlur) {
                        delete this.cancelBlur;
                        return;
                    }
                    clearTimeout(this.searching);
                    this.close(event);
                    this._change(event);
                }
            });
            this._initSource();
            this.menu = $("<ul>").addClass("ui-autocomplete").appendTo(this.document.find(this.options.appendTo || "body")[0]).menu({
                input: $(),
                role: null
            }).zIndex(this.element.zIndex() + 1).hide().data("menu");
            this._on(this.menu.element, {
                mousedown: function(event) {
                    event.preventDefault();
                    this.cancelBlur = true;
                    this._delay(function() {
                        delete this.cancelBlur;
                    });
                    var menuElement = this.menu.element[0];
                    if (!$(event.target).closest(".ui-menu-item").length) {
                        this._delay(function() {
                            var that = this;
                            this.document.one("mousedown", function(event) {
                                if (event.target !== that.element[0] && event.target !== menuElement && !$.contains(menuElement, event.target)) {
                                    that.close();
                                }
                            });
                        });
                    }
                },
                menufocus: function(event, ui) {
                    if (this.isNewMenu) {
                        this.isNewMenu = false;
                        if (event.originalEvent && /^mouse/.test(event.originalEvent.type)) {
                            this.menu.blur();
                            this.document.one("mousemove", function() {
                                $(event.target).trigger(event.originalEvent);
                            });
                            return;
                        }
                    }
                    var item = ui.item.data("ui-autocomplete-item") || ui.item.data("item.autocomplete");
                    if (false !== this._trigger("focus", event, {
                        item: item
                    })) {
                        if (event.originalEvent && /^key/.test(event.originalEvent.type)) {
                            this._value(item.value);
                        }
                    } else {
                        this.liveRegion.text(item.value);
                    }
                },
                menuselect: function(event, ui) {
                    var item = ui.item.data("ui-autocomplete-item") || ui.item.data("item.autocomplete")
                      , previous = this.previous;
                    if (this.element[0] !== this.document[0].activeElement) {
                        this.element.focus();
                        this.previous = previous;
                        this._delay(function() {
                            this.previous = previous;
                            this.selectedItem = item;
                        });
                    }
                    if (false !== this._trigger("select", event, {
                        item: item
                    })) {
                        this._value(item.value);
                    }
                    this.term = this._value();
                    this.close(event);
                    this.selectedItem = item;
                }
            });
            this.liveRegion = $("<span>", {
                role: "status",
                "aria-live": "polite"
            }).addClass("ui-helper-hidden-accessible").insertAfter(this.element);
            if ($.fn.bgiframe) {
                this.menu.element.bgiframe();
            }
            this._on(this.window, {
                beforeunload: function() {
                    this.element.removeAttr("autocomplete");
                }
            });
        },
        _destroy: function() {
            clearTimeout(this.searching);
            this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete");
            this.menu.element.remove();
            this.liveRegion.remove();
        },
        _setOption: function(key, value) {
            this._super(key, value);
            if (key === "source") {
                this._initSource();
            }
            if (key === "appendTo") {
                this.menu.element.appendTo(this.document.find(value || "body")[0]);
            }
            if (key === "disabled" && value && this.xhr) {
                this.xhr.abort();
            }
        },
        _isMultiLine: function() {
            if (this.element.is("textarea")) {
                return true;
            }
            if (this.element.is("input")) {
                return false;
            }
            return this.element.prop("isContentEditable");
        },
        _initSource: function() {
            var array, url, that = this;
            if ($.isArray(this.options.source)) {
                array = this.options.source;
                this.source = function(request, response) {
                    response($.ui.autocomplete.filter(array, request.term));
                }
                ;
            } else if (typeof this.options.source === "string") {
                url = this.options.source;
                this.source = function(request, response) {
                    if (that.xhr) {
                        that.xhr.abort();
                    }
                    that.xhr = $.ajax({
                        url: url,
                        data: request,
                        dataType: "json",
                        success: function(data) {
                            response(data);
                        },
                        error: function() {
                            response([]);
                        }
                    });
                }
                ;
            } else {
                this.source = this.options.source;
            }
        },
        _searchTimeout: function(event) {
            clearTimeout(this.searching);
            this.searching = this._delay(function() {
                if (this.term !== this._value()) {
                    this.selectedItem = null;
                    this.search(null, event);
                }
            }, this.options.delay);
        },
        search: function(value, event) {
            value = value != null ? value : this._value();
            this.term = this._value();
            if (value.length < this.options.minLength) {
                return this.close(event);
            }
            if (this._trigger("search", event) === false) {
                return;
            }
            return this._search(value);
        },
        _search: function(value) {
            this.pending++;
            this.element.addClass("ui-autocomplete-loading");
            this.cancelSearch = false;
            this.source({
                term: value
            }, this._response());
        },
        _response: function() {
            var that = this
              , index = ++requestIndex;
            return function(content) {
                if (index === requestIndex) {
                    that.__response(content);
                }
                that.pending--;
                if (!that.pending) {
                    that.element.removeClass("ui-autocomplete-loading");
                }
            }
            ;
        },
        __response: function(content) {
            if (content) {
                content = this._normalize(content);
            }
            this._trigger("response", null, {
                content: content
            });
            if (!this.options.disabled && content && content.length && !this.cancelSearch) {
                this._suggest(content);
                this._trigger("open");
            } else {
                this._close();
            }
        },
        close: function(event) {
            this.cancelSearch = true;
            this._close(event);
        },
        _close: function(event) {
            if (this.menu.element.is(":visible")) {
                this.menu.element.hide();
                this.menu.blur();
                this.isNewMenu = true;
                this._trigger("close", event);
            }
        },
        _change: function(event) {
            if (this.previous !== this._value()) {
                this._trigger("change", event, {
                    item: this.selectedItem
                });
            }
        },
        _normalize: function(items) {
            if (items.length && items[0].label && items[0].value) {
                return items;
            }
            return $.map(items, function(item) {
                if (typeof item === "string") {
                    return {
                        label: item,
                        value: item
                    };
                }
                return $.extend({
                    label: item.label || item.value,
                    value: item.value || item.label
                }, item);
            });
        },
        _suggest: function(items) {
            var ul = this.menu.element.empty().zIndex(this.element.zIndex() + 1);
            this._renderMenu(ul, items);
            this.menu.refresh();
            ul.show();
            this._resizeMenu();
            ul.position($.extend({
                of: this.element
            }, this.options.position));
            if (this.options.autoFocus) {
                this.menu.next();
            }
        },
        _resizeMenu: function() {
            var ul = this.menu.element;
            ul.outerWidth(Math.max(ul.width("").outerWidth() + 1, this.element.outerWidth()));
        },
        _renderMenu: function(ul, items) {
            var that = this;
            $.each(items, function(index, item) {
                that._renderItemData(ul, item);
            });
        },
        _renderItemData: function(ul, item) {
            return this._renderItem(ul, item).data("ui-autocomplete-item", item);
        },
        _renderItem: function(ul, item) {
            return $("<li>").append($("<a>").text(item.label)).appendTo(ul);
        },
        _move: function(direction, event) {
            if (!this.menu.element.is(":visible")) {
                this.search(null, event);
                return;
            }
            if (this.menu.isFirstItem() && /^previous/.test(direction) || this.menu.isLastItem() && /^next/.test(direction)) {
                this._value(this.term);
                this.menu.blur();
                return;
            }
            this.menu[direction](event);
        },
        widget: function() {
            return this.menu.element;
        },
        _value: function() {
            return this.valueMethod.apply(this.element, arguments);
        },
        _keyEvent: function(keyEvent, event) {
            if (!this.isMultiLine || this.menu.element.is(":visible")) {
                this._move(keyEvent, event);
                event.preventDefault();
            }
        }
    });
    $.extend($.ui.autocomplete, {
        escapeRegex: function(value) {
            return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        },
        filter: function(array, term) {
            var matcher = new RegExp($.ui.autocomplete.escapeRegex(term),"i");
            return $.grep(array, function(value) {
                return matcher.test(value.label || value.value || value);
            });
        }
    });
    $.widget("ui.autocomplete", $.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function(amount) {
                    return amount + (amount > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
                }
            }
        },
        __response: function(content) {
            var message;
            this._superApply(arguments);
            if (this.options.disabled || this.cancelSearch) {
                return;
            }
            if (content && content.length) {
                message = this.options.messages.results(content.length);
            } else {
                message = this.options.messages.noResults;
            }
            this.liveRegion.text(message);
        }
    });
}(jQuery));
$(document).on("click", function(e) {
    var container = $(".location_multiselect");
    if (!container.is(e.target) && container.has(e.target).length === 0) {
        $("#multiLocationList").removeClass('showing').addClass('hidden');
        $(".multitoggle").removeClass('active');
    }
});
(function($, undefined) {
    var mouseHandled = false;
    $.widget("ui.menu", {
        version: "1.9.2",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {
                submenu: "ui-icon-carat-1-e"
            },
            menus: "ul",
            position: {
                my: "left top",
                at: "right top"
            },
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function() {
            this.activeMenu = this.element;
            this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content ui-corner-all").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }).bind("click" + this.eventNamespace, $.proxy(function(event) {
                if (this.options.disabled) {
                    event.preventDefault();
                }
            }, this));
            if (this.options.disabled) {
                this.element.addClass("ui-state-disabled").attr("aria-disabled", "true");
            }
            this._on({
                "mousedown .ui-menu-item > a": function(event) {
                    event.preventDefault();
                },
                "click .ui-state-disabled > a": function(event) {
                    event.preventDefault();
                },
                "click .ui-menu-item:has(a)": function(event) {
                    var target = $(event.target).closest(".ui-menu-item");
                    if (!mouseHandled && target.not(".ui-state-disabled").length) {
                        mouseHandled = true;
                        this.select(event);
                        if (target.has(".ui-menu").length) {
                            this.expand(event);
                        } else if (!this.element.is(":focus")) {
                            this.element.trigger("focus", [true]);
                            if (this.active && this.active.parents(".ui-menu").length === 1) {
                                clearTimeout(this.timer);
                            }
                        }
                    }
                },
                "mouseenter .ui-menu-item": function(event) {
                    var target = $(event.currentTarget);
                    target.siblings().children(".ui-state-active").removeClass("ui-state-active");
                    this.focus(event, target);
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function(event, keepActiveItem) {
                    var item = this.active || this.element.children(".ui-menu-item").eq(0);
                    if (!keepActiveItem) {
                        this.focus(event, item);
                    }
                },
                blur: function(event) {
                    this._delay(function() {
                        if (!$.contains(this.element[0], this.document[0].activeElement)) {
                            this.collapseAll(event);
                        }
                    });
                },
                keydown: "_keydown"
            });
            this.refresh();
            this._on(this.document, {
                click: function(event) {
                    if (!$(event.target).closest(".ui-menu").length) {
                        this.collapseAll(event);
                    }
                    mouseHandled = false;
                }
            });
        },
        _destroy: function() {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").andSelf().removeClass("ui-menu ui-widget ui-widget-content ui-corner-all ui-menu-icons").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show();
            this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").children("a").removeUniqueId().removeClass("ui-corner-all ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
                var elem = $(this);
                if (elem.data("ui-menu-submenu-carat")) {
                    elem.remove();
                }
            });
            this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content");
        },
        _keydown: function(event) {
            var match, prev, character, skip, regex, preventDefault = true;
            function escape(value) {
                return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            }
            switch (event.keyCode) {
            case $.ui.keyCode.PAGE_UP:
                this.previousPage(event);
                break;
            case $.ui.keyCode.PAGE_DOWN:
                this.nextPage(event);
                break;
            case $.ui.keyCode.HOME:
                this._move("first", "first", event);
                break;
            case $.ui.keyCode.END:
                this._move("last", "last", event);
                break;
            case $.ui.keyCode.UP:
                this.previous(event);
                break;
            case $.ui.keyCode.DOWN:
                this.next(event);
                break;
            case $.ui.keyCode.LEFT:
                this.collapse(event);
                break;
            case $.ui.keyCode.RIGHT:
                if (this.active && !this.active.is(".ui-state-disabled")) {
                    this.expand(event);
                }
                break;
            case $.ui.keyCode.ENTER:
            case $.ui.keyCode.SPACE:
                this._activate(event);
                break;
            case $.ui.keyCode.ESCAPE:
                this.collapse(event);
                break;
            default:
                preventDefault = false;
                prev = this.previousFilter || "";
                character = String.fromCharCode(event.keyCode);
                skip = false;
                clearTimeout(this.filterTimer);
                if (character === prev) {
                    skip = true;
                } else {
                    character = prev + character;
                }
                regex = new RegExp("^" + escape(character),"i");
                match = this.activeMenu.children(".ui-menu-item").filter(function() {
                    return regex.test($(this).children("a").text());
                });
                match = skip && match.index(this.active.next()) !== -1 ? this.active.nextAll(".ui-menu-item") : match;
                if (!match.length) {
                    character = String.fromCharCode(event.keyCode);
                    regex = new RegExp("^" + escape(character),"i");
                    match = this.activeMenu.children(".ui-menu-item").filter(function() {
                        return regex.test($(this).children("a").text());
                    });
                }
                if (match.length) {
                    this.focus(event, match);
                    if (match.length > 1) {
                        this.previousFilter = character;
                        this.filterTimer = this._delay(function() {
                            delete this.previousFilter;
                        }, 1000);
                    } else {
                        delete this.previousFilter;
                    }
                } else {
                    delete this.previousFilter;
                }
            }
            if (preventDefault) {
                event.preventDefault();
            }
        },
        _activate: function(event) {
            if (!this.active.is(".ui-state-disabled")) {
                if (this.active.children("a[aria-haspopup='true']").length) {
                    this.expand(event);
                } else {
                    this.select(event);
                }
            }
        },
        refresh: function() {
            var menus, icon = this.options.icons.submenu, submenus = this.element.find(this.options.menus);
            submenus.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-corner-all").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function() {
                var menu = $(this)
                  , item = menu.prev("a")
                  , submenuCarat = $("<span>").addClass("ui-menu-icon ui-icon " + icon).data("ui-menu-submenu-carat", true);
                item.attr("aria-haspopup", "true").prepend(submenuCarat);
                menu.attr("aria-labelledby", item.attr("id"));
            });
            menus = submenus.add(this.element);
            menus.children(":not(.ui-menu-item):has(a)").addClass("ui-menu-item").attr("role", "presentation").children("a").uniqueId().addClass("ui-corner-all").attr({
                tabIndex: -1,
                role: this._itemRole()
            });
            menus.children(":not(.ui-menu-item)").each(function() {
                var item = $(this);
                if (!/[^\-â€”â€“\s]/.test(item.text())) {
                    item.addClass("ui-widget-content ui-menu-divider");
                }
            });
            menus.children(".ui-state-disabled").attr("aria-disabled", "true");
            if (this.active && !$.contains(this.element[0], this.active[0])) {
                this.blur();
            }
        },
        _itemRole: function() {
            return {
                menu: "menuitem",
                listbox: "option"
            }[this.options.role];
        },
        focus: function(event, item) {
            var nested, focused;
            this.blur(event, event && event.type === "focus");
            this._scrollIntoView(item);
            this.active = item.first();
            focused = this.active.children("a").addClass("ui-state-focus");
            if (this.options.role) {
                this.element.attr("aria-activedescendant", focused.attr("id"));
            }
            this.active.parent().closest(".ui-menu-item").children("a:first").addClass("ui-state-active");
            if (event && event.type === "keydown") {
                this._close();
            } else {
                this.timer = this._delay(function() {
                    this._close();
                }, this.delay);
            }
            nested = item.children(".ui-menu");
            if (nested.length && (/^mouse/.test(event.type))) {
                this._startOpening(nested);
            }
            this.activeMenu = item.parent();
            this._trigger("focus", event, {
                item: item
            });
        },
        _scrollIntoView: function(item) {
            var borderTop, paddingTop, offset, scroll, elementHeight, itemHeight;
            if (this._hasScroll()) {
                borderTop = parseFloat($.css(this.activeMenu[0], "borderTopWidth")) || 0;
                paddingTop = parseFloat($.css(this.activeMenu[0], "paddingTop")) || 0;
                offset = item.offset().top - this.activeMenu.offset().top - borderTop - paddingTop;
                scroll = this.activeMenu.scrollTop();
                elementHeight = this.activeMenu.height();
                itemHeight = item.height();
                if (offset < 0) {
                    this.activeMenu.scrollTop(scroll + offset);
                } else if (offset + itemHeight > elementHeight) {
                    this.activeMenu.scrollTop(scroll + offset - elementHeight + itemHeight);
                }
            }
        },
        blur: function(event, fromFocus) {
            if (!fromFocus) {
                clearTimeout(this.timer);
            }
            if (!this.active) {
                return;
            }
            this.active.children("a").removeClass("ui-state-focus");
            this.active = null;
            this._trigger("blur", event, {
                item: this.active
            });
        },
        _startOpening: function(submenu) {
            clearTimeout(this.timer);
            if (submenu.attr("aria-hidden") !== "true") {
                return;
            }
            this.timer = this._delay(function() {
                this._close();
                this._open(submenu);
            }, this.delay);
        },
        _open: function(submenu) {
            var position = $.extend({
                of: this.active
            }, this.options.position);
            clearTimeout(this.timer);
            this.element.find(".ui-menu").not(submenu.parents(".ui-menu")).hide().attr("aria-hidden", "true");
            submenu.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(position);
        },
        collapseAll: function(event, all) {
            clearTimeout(this.timer);
            this.timer = this._delay(function() {
                var currentMenu = all ? this.element : $(event && event.target).closest(this.element.find(".ui-menu"));
                if (!currentMenu.length) {
                    currentMenu = this.element;
                }
                this._close(currentMenu);
                this.blur(event);
                this.activeMenu = currentMenu;
            }, this.delay);
        },
        _close: function(startMenu) {
            if (!startMenu) {
                startMenu = this.active ? this.active.parent() : this.element;
            }
            startMenu.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find("a.ui-state-active").removeClass("ui-state-active");
        },
        collapse: function(event) {
            var newItem = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            if (newItem && newItem.length) {
                this._close();
                this.focus(event, newItem);
            }
        },
        expand: function(event) {
            var newItem = this.active && this.active.children(".ui-menu ").children(".ui-menu-item").first();
            if (newItem && newItem.length) {
                this._open(newItem.parent());
                this._delay(function() {
                    this.focus(event, newItem);
                });
            }
        },
        next: function(event) {
            this._move("next", "first", event);
        },
        previous: function(event) {
            this._move("prev", "last", event);
        },
        isFirstItem: function() {
            return this.active && !this.active.prevAll(".ui-menu-item").length;
        },
        isLastItem: function() {
            return this.active && !this.active.nextAll(".ui-menu-item").length;
        },
        _move: function(direction, filter, event) {
            var next;
            if (this.active) {
                if (direction === "first" || direction === "last") {
                    next = this.active[direction === "first" ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1);
                } else {
                    next = this.active[direction + "All"](".ui-menu-item").eq(0);
                }
            }
            if (!next || !next.length || !this.active) {
                next = this.activeMenu.children(".ui-menu-item")[filter]();
            }
            this.focus(event, next);
        },
        nextPage: function(event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isLastItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.nextAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base - height < 0;
                });
                this.focus(event, item);
            } else {
                this.focus(event, this.activeMenu.children(".ui-menu-item")[!this.active ? "first" : "last"]());
            }
        },
        previousPage: function(event) {
            var item, base, height;
            if (!this.active) {
                this.next(event);
                return;
            }
            if (this.isFirstItem()) {
                return;
            }
            if (this._hasScroll()) {
                base = this.active.offset().top;
                height = this.element.height();
                this.active.prevAll(".ui-menu-item").each(function() {
                    item = $(this);
                    return item.offset().top - base + height > 0;
                });
                this.focus(event, item);
            } else {
                this.focus(event, this.activeMenu.children(".ui-menu-item").first());
            }
        },
        _hasScroll: function() {
            return this.element.outerHeight() < this.element.prop("scrollHeight");
        },
        select: function(event) {
            this.active = this.active || $(event.target).closest(".ui-menu-item");
            var ui = {
                item: this.active
            };
            if (!this.active.has(".ui-menu").length) {
                this.collapseAll(event, true);
            }
            this._trigger("select", event, ui);
        }
    });
}(jQuery));
function socialSavedQueryCallbacks() {
    var eventListener = new AnnotationEventListener();
    jQuery(".saved-query-list").each(function() {
        var list = new AnnotationList($(this),"saved-query",eventListener);
        eventListener.addList(list);
    });
    jQuery('.saved-query-form').submit(function() {
        var self = this;
        var nameInput = $(this).find("input[name='name']");
        if (nameInput.val() === undefined || nameInput.val().trim() === "") {
            alert("Please give a name for your saved search");
            return false;
        }
        var userToken = $(this).attr("data-user-token");
        var alreadyExistsMessage = $(this).attr("data-already-exists-msg");
        var serviceUrl = $(this).attr("action");
        jQuery.ajax({
            url: serviceUrl,
            type: 'POST',
            async: false,
            data: $(this).serialize(),
            dataType: "json",
            beforeSend: function(request) {
                if (userToken !== 'undefined' && userToken !== '') {
                    request.setRequestHeader("Twigkit-User-Token", userToken);
                }
            },
            success: function(response) {
                if (response.status === 'NAME_ALREADY_EXISTS') {
                    if (alreadyExistsMessage !== 'undefined') {
                        alert(alreadyExistsMessage);
                    } else {
                        alert("A saved search with this name already exists. Please choose a different name.");
                    }
                } else {
                    eventListener.notify(new AnnotationEvent(response.data,AnnotationEvent.Types.ADD));
                    self.reset();
                    $("body").trigger("click");
                }
                var hattribute = $(".saved-query-list > li.saved-query > a").attr('href');
                if (hattribute.indexOf("??") != -1) {
                    hattribute = htmlDecode(hattribute.replace("??", "?"));
                }
                $(".saved-query-list > li.saved-query > a").attr('href', hattribute);
            }
        });
        TwigkitRenderCallbacks.add("socialSavedQueryCallbacks", socialSavedQueryCallbacks);
        return false;
    });
}
;